<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1622" onload="init(evt)" viewBox="0 0 1200 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1605"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1605"> </text>
<g id="frames">
<g>
<title>all (478 samples, 100.00%)</title><rect x="10.0" y="1571.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1582.0">all</text>
</g>
<g>
<title>[no_Java_frame] (5 samples, 1.05%)</title><rect x="10.0" y="1555.0" width="12.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="1566.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 1.46%)</title><rect x="22.3" y="1555.0" width="17.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="25.3" y="1566.0"></text>
</g>
<g>
<title>Interpreter (5 samples, 1.05%)</title><rect x="22.3" y="1539.0" width="12.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="25.3" y="1550.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (2 samples, 0.42%)</title><rect x="34.7" y="1539.0" width="4.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="37.7" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="39.6" y="1555.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.6" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.21%)</title><rect x="39.6" y="1539.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.6" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="39.6" y="1523.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="39.6" y="1507.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findLoadedModule (1 samples, 0.21%)</title><rect x="39.6" y="1491.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.6" y="1502.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.21%)</title><rect x="39.6" y="1475.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.6" y="1486.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.21%)</title><rect x="39.6" y="1459.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="42.6" y="1470.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.21%)</title><rect x="39.6" y="1443.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="42.6" y="1454.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper_internal(Handle, CompiledMethod*, frame const&amp;, methodHandle, Bytecodes::Code, CallInfo&amp;, bool&amp;, Thread*) (1 samples, 0.21%)</title><rect x="39.6" y="1427.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="42.6" y="1438.0"></text>
</g>
<g>
<title>CompiledIC::set_to_megamorphic(CallInfo*, Bytecodes::Code, bool&amp;, Thread*) (1 samples, 0.21%)</title><rect x="39.6" y="1411.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="42.6" y="1422.0"></text>
</g>
<g>
<title>VtableStubs::find_stub(bool, int) (1 samples, 0.21%)</title><rect x="39.6" y="1395.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="42.6" y="1406.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.compileMethod (238 samples, 49.79%)</title><rect x="42.1" y="1555.0" width="587.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.1" y="1566.0">jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.compileMethod</text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.getCompiler (13 samples, 2.72%)</title><rect x="42.1" y="1539.0" width="32.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.1" y="1550.0">jd..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (13 samples, 2.72%)</title><rect x="42.1" y="1523.0" width="32.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="45.1" y="1534.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (13 samples, 2.72%)</title><rect x="42.1" y="1507.0" width="32.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.1" y="1518.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (13 samples, 2.72%)</title><rect x="42.1" y="1491.0" width="32.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.1" y="1502.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalRuntime.&lt;init&gt; (13 samples, 2.72%)</title><rect x="42.1" y="1475.0" width="32.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.1" y="1486.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilerConfigurationFactory.createBackendMap (1 samples, 0.21%)</title><rect x="42.1" y="1459.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="45.1" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilerConfigurationFactory$DefaultBackendMap.&lt;init&gt; (1 samples, 0.21%)</title><rect x="42.1" y="1443.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.1" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices$1$1.hasNext (1 samples, 0.21%)</title><rect x="42.1" y="1427.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.1" y="1438.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (1 samples, 0.21%)</title><rect x="42.1" y="1411.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="45.1" y="1422.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LayerLookupIterator.hasNext (1 samples, 0.21%)</title><rect x="42.1" y="1395.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.1" y="1406.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (1 samples, 0.21%)</title><rect x="42.1" y="1379.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.1" y="1390.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.findStaticProviderMethod (1 samples, 0.21%)</title><rect x="42.1" y="1363.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/System$2.getDeclaredPublicMethods (1 samples, 0.21%)</title><rect x="42.1" y="1347.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredPublicMethods (1 samples, 0.21%)</title><rect x="42.1" y="1331.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredMethods (1 samples, 0.21%)</title><rect x="42.1" y="1315.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods0 (1 samples, 0.21%)</title><rect x="42.1" y="1299.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="42.1" y="1283.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="45.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="42.1" y="1267.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="42.1" y="1251.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="42.1" y="1235.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="42.1" y="1219.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.1" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="42.1" y="1203.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="42.1" y="1187.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="42.1" y="1171.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="42.1" y="1155.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="45.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="42.1" y="1139.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="42.1" y="1123.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="42.1" y="1107.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="42.1" y="1091.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.1" y="1102.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="42.1" y="1075.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="42.1" y="1059.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="42.1" y="1043.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="42.1" y="1027.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="42.1" y="1011.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="45.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="42.1" y="995.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="42.1" y="979.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="42.1" y="963.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.1" y="974.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="42.1" y="947.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.1" y="958.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.getProtectionDomain (1 samples, 0.21%)</title><rect x="42.1" y="931.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.1" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/GraalHotSpotVMConfigAccess.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="44.6" y="1459.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.6" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices.getJavaUpdateVersion (1 samples, 0.21%)</title><rect x="44.6" y="1443.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.6" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="44.6" y="1427.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="47.6" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="44.6" y="1411.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="47.6" y="1422.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1395.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="47.6" y="1406.0"></text>
</g>
<g>
<title>LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1379.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.6" y="1390.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1363.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.6" y="1374.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1347.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="47.6" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1331.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="47.6" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1315.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="47.6" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1299.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="47.6" y="1310.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1283.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="47.6" y="1294.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1267.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="47.6" y="1278.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1251.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="47.6" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="44.6" y="1235.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="47.6" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="44.6" y="1219.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="47.6" y="1230.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWordImpl**) const (1 samples, 0.21%)</title><rect x="44.6" y="1203.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="47.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotHostBackend.completeInitialization (4 samples, 0.84%)</title><rect x="47.0" y="1459.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotForeignCallsProvider.initialize (1 samples, 0.21%)</title><rect x="47.0" y="1443.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.0" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotHostForeignCallsProvider.initialize (1 samples, 0.21%)</title><rect x="47.0" y="1427.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.0" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotForeignCallsProvider.registerMathStubs (1 samples, 0.21%)</title><rect x="47.0" y="1411.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.0" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64MathStub.&lt;init&gt; (1 samples, 0.21%)</title><rect x="47.0" y="1395.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.0" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.&lt;init&gt; (1 samples, 0.21%)</title><rect x="47.0" y="1379.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.0" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.&lt;init&gt; (1 samples, 0.21%)</title><rect x="47.0" y="1363.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.0" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.initialize (3 samples, 0.63%)</title><rect x="49.5" y="1443.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="49.5" y="1427.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.5" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="49.5" y="1411.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.5" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="49.5" y="1395.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="49.5" y="1379.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="49.5" y="1363.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.5" y="1374.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="49.5" y="1347.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="49.5" y="1331.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="49.5" y="1315.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.5" y="1326.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="49.5" y="1299.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="52.5" y="1310.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="49.5" y="1283.0" width="2.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="52.5" y="1294.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="49.5" y="1267.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="52.5" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="49.5" y="1251.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="52.5" y="1262.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="49.5" y="1235.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="52.5" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="49.5" y="1219.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="52.5" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="49.5" y="1203.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="52.5" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="49.5" y="1187.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="52.5" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="49.5" y="1171.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="52.5" y="1182.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.21%)</title><rect x="49.5" y="1155.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="52.5" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.initialize (2 samples, 0.42%)</title><rect x="52.0" y="1427.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.0" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="52.0" y="1411.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="52.0" y="1395.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="52.0" y="1379.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.0" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="52.0" y="1363.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="52.0" y="1347.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.0" y="1358.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="52.0" y="1331.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="52.0" y="1315.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="55.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="52.0" y="1299.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.0" y="1310.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="52.0" y="1283.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="55.0" y="1294.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="52.0" y="1267.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="55.0" y="1278.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="52.0" y="1251.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="55.0" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="52.0" y="1235.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="55.0" y="1246.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="52.0" y="1219.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="55.0" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="52.0" y="1203.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="55.0" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="52.0" y="1187.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="55.0" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_attributes(ClassFileStream const*, ConstantPool*, ClassFileParser::ClassAnnotationCollector*, Thread*) (1 samples, 0.21%)</title><rect x="52.0" y="1171.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="55.0" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_inner_classes_attribute(ClassFileStream const*, unsigned char const*, bool, unsigned short, unsigned short, Thread*) (1 samples, 0.21%)</title><rect x="52.0" y="1155.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="55.0" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.initialize (1 samples, 0.21%)</title><rect x="54.4" y="1411.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="57.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/BoxingSnippets$Templates.&lt;init&gt; (1 samples, 0.21%)</title><rect x="54.4" y="1395.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.4" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/AbstractBoxingNode.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="54.4" y="1379.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="57.4" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.21%)</title><rect x="54.4" y="1363.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="57.4" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="54.4" y="1347.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.4" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="54.4" y="1331.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.4" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/FieldsScanner.scan (1 samples, 0.21%)</title><rect x="54.4" y="1315.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.4" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$NodeFieldsScanner.scanField (1 samples, 0.21%)</title><rect x="54.4" y="1299.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.4" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getAnnotationTimed (1 samples, 0.21%)</title><rect x="54.4" y="1283.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.getAnnotation (1 samples, 0.21%)</title><rect x="54.4" y="1267.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.21%)</title><rect x="54.4" y="1251.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.21%)</title><rect x="54.4" y="1235.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.4" y="1246.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.21%)</title><rect x="54.4" y="1219.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="57.4" y="1230.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.21%)</title><rect x="54.4" y="1203.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.4" y="1214.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.21%)</title><rect x="54.4" y="1187.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="57.4" y="1198.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.21%)</title><rect x="54.4" y="1171.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.4" y="1182.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.21%)</title><rect x="54.4" y="1155.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.4" y="1166.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.21%)</title><rect x="54.4" y="1139.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.4" y="1150.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.21%)</title><rect x="54.4" y="1123.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.4" y="1134.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.21%)</title><rect x="54.4" y="1107.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.21%)</title><rect x="54.4" y="1091.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.21%)</title><rect x="54.4" y="1075.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.21%)</title><rect x="54.4" y="1059.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="57.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.21%)</title><rect x="54.4" y="1043.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="57.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$32.0x0000000800b6b8b8.apply (1 samples, 0.21%)</title><rect x="54.4" y="1027.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.21%)</title><rect x="54.4" y="1011.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.21%)</title><rect x="54.4" y="995.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.&lt;init&gt; (1 samples, 0.21%)</title><rect x="54.4" y="979.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="57.4" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.referencedTypes (1 samples, 0.21%)</title><rect x="54.4" y="963.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="57.4" y="974.0"></text>
</g>
<g>
<title>java/lang/Class.getMethods (1 samples, 0.21%)</title><rect x="54.4" y="947.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.4" y="958.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetPublicMethods (1 samples, 0.21%)</title><rect x="54.4" y="931.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="57.4" y="942.0"></text>
</g>
<g>
<title>java/lang/PublicMethods.merge (1 samples, 0.21%)</title><rect x="54.4" y="915.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="57.4" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.21%)</title><rect x="54.4" y="899.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.21%)</title><rect x="54.4" y="883.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.4" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.21%)</title><rect x="54.4" y="867.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.4" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createBackend (6 samples, 1.26%)</title><rect x="56.9" y="1459.0" width="14.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.9" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotBackendFactory.createBytecodeProvider (1 samples, 0.21%)</title><rect x="56.9" y="1443.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="59.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="56.9" y="1427.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.9" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="56.9" y="1411.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.9" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="56.9" y="1395.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.9" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="56.9" y="1379.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="59.9" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="56.9" y="1363.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.9" y="1374.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="56.9" y="1347.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="56.9" y="1331.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="56.9" y="1315.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="59.9" y="1326.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="56.9" y="1299.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="59.9" y="1310.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="56.9" y="1283.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="59.9" y="1294.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="56.9" y="1267.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="59.9" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="56.9" y="1251.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="59.9" y="1262.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="56.9" y="1235.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="59.9" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="56.9" y="1219.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="59.9" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="56.9" y="1203.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="59.9" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="56.9" y="1187.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="59.9" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="56.9" y="1171.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="59.9" y="1182.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="56.9" y="1155.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="59.9" y="1166.0"></text>
</g>
<g>
<title>SymbolTable::lookup_shared(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="56.9" y="1139.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="59.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createForeignCalls (1 samples, 0.21%)</title><rect x="59.4" y="1443.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="59.4" y="1427.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="62.4" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="59.4" y="1411.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.4" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="59.4" y="1395.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="59.4" y="1379.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1363.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.4" y="1374.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1347.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1331.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="59.4" y="1315.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="59.4" y="1299.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="59.4" y="1283.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="59.4" y="1267.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="59.4" y="1251.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1235.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.4" y="1246.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1219.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1203.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="59.4" y="1187.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="59.4" y="1171.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="59.4" y="1155.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="59.4" y="1139.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="59.4" y="1123.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1107.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.4" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1091.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="59.4" y="1075.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="59.4" y="1059.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.4" y="1070.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="59.4" y="1043.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="62.4" y="1054.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="59.4" y="1027.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="62.4" y="1038.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="59.4" y="1011.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="62.4" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="59.4" y="995.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="62.4" y="1006.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="59.4" y="979.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="62.4" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="59.4" y="963.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="62.4" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="59.4" y="947.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="62.4" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createGraphBuilderPlugins (1 samples, 0.21%)</title><rect x="61.8" y="1443.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.8" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins.create (1 samples, 0.21%)</title><rect x="61.8" y="1427.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="64.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="61.8" y="1411.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.8" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="61.8" y="1395.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="64.8" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="61.8" y="1379.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.8" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="61.8" y="1363.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.8" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="61.8" y="1347.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.8" y="1358.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="61.8" y="1331.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="61.8" y="1315.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="61.8" y="1299.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="61.8" y="1283.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="61.8" y="1267.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="64.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="61.8" y="1251.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="61.8" y="1235.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="64.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="61.8" y="1219.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.8" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="61.8" y="1203.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="61.8" y="1187.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="64.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="61.8" y="1171.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.8" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="61.8" y="1155.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="64.8" y="1166.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="61.8" y="1139.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="64.8" y="1150.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="61.8" y="1123.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="64.8" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="61.8" y="1107.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="64.8" y="1118.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="61.8" y="1091.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="64.8" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="61.8" y="1075.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="64.8" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="61.8" y="1059.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="64.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createLowerer (3 samples, 0.63%)</title><rect x="64.3" y="1443.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="67.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.42%)</title><rect x="64.3" y="1427.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.42%)</title><rect x="64.3" y="1411.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="67.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.42%)</title><rect x="64.3" y="1395.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (2 samples, 0.42%)</title><rect x="64.3" y="1379.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.42%)</title><rect x="64.3" y="1363.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.3" y="1374.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.42%)</title><rect x="64.3" y="1347.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.42%)</title><rect x="64.3" y="1331.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (2 samples, 0.42%)</title><rect x="64.3" y="1315.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.42%)</title><rect x="64.3" y="1299.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.42%)</title><rect x="64.3" y="1283.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="67.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.42%)</title><rect x="64.3" y="1267.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (2 samples, 0.42%)</title><rect x="64.3" y="1251.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="67.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.42%)</title><rect x="64.3" y="1235.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.3" y="1246.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.42%)</title><rect x="64.3" y="1219.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="67.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.42%)</title><rect x="64.3" y="1203.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (2 samples, 0.42%)</title><rect x="64.3" y="1187.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.3" y="1198.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="64.3" y="1171.0" width="2.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="67.3" y="1182.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="64.3" y="1155.0" width="2.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="67.3" y="1166.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="64.3" y="1139.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="67.3" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="64.3" y="1123.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="67.3" y="1134.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="64.3" y="1107.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="67.3" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="64.3" y="1091.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="67.3" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="64.3" y="1075.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="67.3" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.21%)</title><rect x="64.3" y="1059.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="67.3" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.21%)</title><rect x="64.3" y="1043.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="67.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="66.8" y="1171.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="66.8" y="1155.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="66.8" y="1139.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findLoadedClass (1 samples, 0.21%)</title><rect x="66.8" y="1123.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkName (1 samples, 0.21%)</title><rect x="66.8" y="1107.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="66.8" y="1091.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.21%)</title><rect x="66.8" y="1075.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.21%)</title><rect x="66.8" y="1059.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="69.2" y="1427.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="69.2" y="1411.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="69.2" y="1395.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="69.2" y="1379.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="72.2" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="69.2" y="1363.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.2" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="69.2" y="1347.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.2" y="1358.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="69.2" y="1331.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="69.2" y="1315.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="69.2" y="1299.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.2" y="1310.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="69.2" y="1283.0" width="2.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="72.2" y="1294.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="69.2" y="1267.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="72.2" y="1278.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="69.2" y="1251.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="72.2" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="69.2" y="1235.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="72.2" y="1246.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="69.2" y="1219.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="72.2" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="69.2" y="1203.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="72.2" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="69.2" y="1187.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="72.2" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.21%)</title><rect x="69.2" y="1171.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="72.2" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.21%)</title><rect x="69.2" y="1155.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="72.2" y="1166.0"></text>
</g>
<g>
<title>Method::compute_from_signature(Symbol*) (1 samples, 0.21%)</title><rect x="69.2" y="1139.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="72.2" y="1150.0"></text>
</g>
<g>
<title>Fingerprinter::compute_fingerprint_and_return_type(bool) (1 samples, 0.21%)</title><rect x="69.2" y="1123.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="72.2" y="1134.0"></text>
</g>
<g>
<title>void SignatureIterator::do_parameters_on&lt;Fingerprinter&gt;(Fingerprinter*) (1 samples, 0.21%)</title><rect x="69.2" y="1107.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="72.2" y="1118.0"></text>
</g>
<g>
<title>SignatureStream::next() (1 samples, 0.21%)</title><rect x="69.2" y="1091.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="72.2" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices.loadSingle (1 samples, 0.21%)</title><rect x="71.7" y="1459.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices$1$1.next (1 samples, 0.21%)</title><rect x="71.7" y="1443.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="74.7" y="1454.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.next (1 samples, 0.21%)</title><rect x="71.7" y="1427.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.7" y="1438.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.get (1 samples, 0.21%)</title><rect x="71.7" y="1411.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.7" y="1422.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ProviderImpl.newInstance (1 samples, 0.21%)</title><rect x="71.7" y="1395.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.21%)</title><rect x="71.7" y="1379.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (1 samples, 0.21%)</title><rect x="71.7" y="1363.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="74.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.21%)</title><rect x="71.7" y="1347.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.21%)</title><rect x="71.7" y="1331.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 0.21%)</title><rect x="71.7" y="1315.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/management/HotSpotGraalManagement.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="71.7" y="1299.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="71.7" y="1283.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="71.7" y="1267.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="71.7" y="1251.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="71.7" y="1235.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="71.7" y="1219.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.21%)</title><rect x="71.7" y="1203.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.21%)</title><rect x="71.7" y="1187.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.21%)</title><rect x="71.7" y="1171.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.7" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.21%)</title><rect x="71.7" y="1155.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="74.7" y="1166.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.21%)</title><rect x="71.7" y="1139.0" width="2.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="74.7" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="71.7" y="1123.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="74.7" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="71.7" y="1107.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="74.7" y="1118.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.21%)</title><rect x="71.7" y="1091.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="74.7" y="1102.0"></text>
</g>
<g>
<title>ClassPathImageEntry::open_stream_for_loader(char const*, ClassLoaderData*, Thread*) (1 samples, 0.21%)</title><rect x="71.7" y="1075.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="74.7" y="1086.0"></text>
</g>
<g>
<title>JIMAGE_GetResource (1 samples, 0.21%)</title><rect x="71.7" y="1059.0" width="2.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="74.7" y="1070.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.21%)</title><rect x="71.7" y="1043.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="74.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod (225 samples, 47.07%)</title><rect x="74.2" y="1539.0" width="555.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.2" y="1550.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod (225 samples, 47.07%)</title><rect x="74.2" y="1523.0" width="555.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.2" y="1534.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="74.2" y="1507.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="77.2" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="74.2" y="1491.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="77.2" y="1502.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="74.2" y="1475.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="77.2" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.21%)</title><rect x="74.2" y="1459.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="77.2" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.21%)</title><rect x="74.2" y="1443.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="77.2" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.21%)</title><rect x="74.2" y="1427.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="77.2" y="1438.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="74.2" y="1411.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="77.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask.filterOptions (1 samples, 0.21%)</title><rect x="76.7" y="1507.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask.runCompilation (223 samples, 46.65%)</title><rect x="79.1" y="1507.0" width="550.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.1" y="1518.0">org/graalvm/compiler/hotspot/CompilationTask.runCompilation</text>
</g>
<g>
<title>org/graalvm/compiler/core/CompilationWrapper.run (223 samples, 46.65%)</title><rect x="79.1" y="1491.0" width="550.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="82.1" y="1502.0">org/graalvm/compiler/core/CompilationWrapper.run</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.performCompilation (223 samples, 46.65%)</title><rect x="79.1" y="1475.0" width="550.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.1" y="1486.0">org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.perfo..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.performCompilation (223 samples, 46.65%)</title><rect x="79.1" y="1459.0" width="550.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.1" y="1470.0">org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.perfo..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask.installMethod (6 samples, 1.26%)</title><rect x="79.1" y="1443.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="82.1" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/target/Backend.createInstalledCode (6 samples, 1.26%)</title><rect x="79.1" y="1427.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="82.1" y="1438.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotCodeCacheProvider.installCode (2 samples, 0.42%)</title><rect x="79.1" y="1411.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.1" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.installCode (2 samples, 0.42%)</title><rect x="79.1" y="1395.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.1" y="1406.0"></text>
</g>
<g>
<title>c2v_installCode(JNIEnv_*, _jobject*, _jobject*, _jobject*, _jobject*, long, _jbyteArray*) (2 samples, 0.42%)</title><rect x="79.1" y="1379.0" width="5.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="82.1" y="1390.0"></text>
</g>
<g>
<title>CodeInstaller::install(JVMCICompiler*, JVMCIObject, JVMCIObject, CodeBlob*&amp;, JVMCIObject, FailedSpeculation**, char*, int, JVMCIEnv*) (1 samples, 0.21%)</title><rect x="79.1" y="1363.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="82.1" y="1374.0"></text>
</g>
<g>
<title>CodeInstaller::initialize_buffer(CodeBuffer&amp;, bool, JVMCIEnv*) (1 samples, 0.21%)</title><rect x="79.1" y="1347.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="82.1" y="1358.0"></text>
</g>
<g>
<title>ImplicitExceptionTable::append(unsigned int, unsigned int) (1 samples, 0.21%)</title><rect x="79.1" y="1331.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="82.1" y="1342.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="79.1" y="1315.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="82.1" y="1326.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="81.6" y="1363.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="84.6" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotBackend.createCompiledCode (4 samples, 0.84%)</title><rect x="84.1" y="1411.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder.createCompiledCode (4 samples, 0.84%)</title><rect x="84.1" y="1395.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/code/DataSection.buildDataSection (1 samples, 0.21%)</title><rect x="84.1" y="1379.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/code/DataSection.buildDataSection (1 samples, 0.21%)</title><rect x="84.1" y="1363.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.1" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/code/DataSection$$Lambda$77.0x0000000800d4fdb0.accept (1 samples, 0.21%)</title><rect x="84.1" y="1347.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.1" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder.getSortedSites (3 samples, 0.63%)</title><rect x="86.5" y="1379.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.5" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (1 samples, 0.21%)</title><rect x="86.5" y="1363.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.5" y="1374.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.21%)</title><rect x="86.5" y="1347.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.5" y="1358.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (1 samples, 0.21%)</title><rect x="86.5" y="1331.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.5" y="1342.0"></text>
</g>
<g>
<title>java/util/TimSort.&lt;init&gt; (1 samples, 0.21%)</title><rect x="86.5" y="1315.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="89.5" y="1326.0"></text>
</g>
<g>
<title>java/util/Collections.sort (2 samples, 0.42%)</title><rect x="89.0" y="1363.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="92.0" y="1374.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (2 samples, 0.42%)</title><rect x="89.0" y="1347.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.0" y="1358.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (2 samples, 0.42%)</title><rect x="89.0" y="1331.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="92.0" y="1342.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (2 samples, 0.42%)</title><rect x="89.0" y="1315.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.0" y="1326.0"></text>
</g>
<g>
<title>java/util/TimSort.binarySort (1 samples, 0.21%)</title><rect x="89.0" y="1299.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="92.0" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="89.0" y="1283.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="92.0" y="1294.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="89.0" y="1267.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="92.0" y="1278.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="89.0" y="1251.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="92.0" y="1262.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="89.0" y="1235.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="92.0" y="1246.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="89.0" y="1219.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="92.0" y="1230.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="89.0" y="1203.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="92.0" y="1214.0"></text>
</g>
<g>
<title>MethodData::initialize() (1 samples, 0.21%)</title><rect x="89.0" y="1187.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="92.0" y="1198.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.21%)</title><rect x="89.0" y="1171.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="92.0" y="1182.0"></text>
</g>
<g>
<title>java/util/TimSort.countRunAndMakeAscending (1 samples, 0.21%)</title><rect x="91.5" y="1299.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.5" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder$SiteComparator.compare (1 samples, 0.21%)</title><rect x="91.5" y="1283.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="94.5" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder$SiteComparator.compare (1 samples, 0.21%)</title><rect x="91.5" y="1267.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.5" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder$SiteComparator.checkCollision (1 samples, 0.21%)</title><rect x="91.5" y="1251.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.5" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="91.5" y="1235.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="94.5" y="1246.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="91.5" y="1219.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="94.5" y="1230.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="91.5" y="1203.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="94.5" y="1214.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.21%)</title><rect x="91.5" y="1187.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="94.5" y="1198.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.21%)</title><rect x="91.5" y="1171.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="94.5" y="1182.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.21%)</title><rect x="91.5" y="1155.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="94.5" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.21%)</title><rect x="91.5" y="1139.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="94.5" y="1150.0"></text>
</g>
<g>
<title>CompileBroker::create_compile_task(CompileQueue*, int, methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool) (1 samples, 0.21%)</title><rect x="91.5" y="1123.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.5" y="1134.0"></text>
</g>
<g>
<title>CompileTask::allocate() (1 samples, 0.21%)</title><rect x="91.5" y="1107.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="94.5" y="1118.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="91.5" y="1091.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="94.5" y="1102.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.21%)</title><rect x="91.5" y="1075.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.5" y="1086.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.21%)</title><rect x="91.5" y="1059.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="94.5" y="1070.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.21%)</title><rect x="91.5" y="1043.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="94.5" y="1054.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="91.5" y="1027.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="94.5" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compile (217 samples, 45.40%)</title><rect x="93.9" y="1443.0" width="535.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.9" y="1454.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compile</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileHelper (206 samples, 43.10%)</title><rect x="93.9" y="1427.0" width="508.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.9" y="1438.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileHelper</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.compileGraph (204 samples, 42.68%)</title><rect x="93.9" y="1411.0" width="503.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.9" y="1422.0">org/graalvm/compiler/core/GraalCompiler.compileGraph</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.compile (204 samples, 42.68%)</title><rect x="93.9" y="1395.0" width="503.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.9" y="1406.0">org/graalvm/compiler/core/GraalCompiler.compile</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitFrontEnd (156 samples, 32.64%)</title><rect x="93.9" y="1379.0" width="385.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.9" y="1390.0">org/graalvm/compiler/core/GraalCompiler.emitFrontEnd</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (156 samples, 32.64%)</title><rect x="93.9" y="1363.0" width="385.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.9" y="1374.0">org/graalvm/compiler/phases/BasePhase.apply</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (156 samples, 32.64%)</title><rect x="93.9" y="1347.0" width="385.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.9" y="1358.0">org/graalvm/compiler/phases/BasePhase.apply</text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (156 samples, 32.64%)</title><rect x="93.9" y="1331.0" width="385.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.9" y="1342.0">org/graalvm/compiler/phases/PhaseSuite.run</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (156 samples, 32.64%)</title><rect x="93.9" y="1315.0" width="385.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.9" y="1326.0">org/graalvm/compiler/phases/BasePhase.apply</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (156 samples, 32.64%)</title><rect x="93.9" y="1299.0" width="385.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.9" y="1310.0">org/graalvm/compiler/phases/BasePhase.apply</text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.enterCompilerPhase (1 samples, 0.21%)</title><rect x="93.9" y="1283.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.enterCompilerPhase (1 samples, 0.21%)</title><rect x="93.9" y="1267.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="96.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/CompilationListenerProfiler.enterPhase (1 samples, 0.21%)</title><rect x="93.9" y="1251.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="96.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/JFRCompilerProfiler.getTicks (1 samples, 0.21%)</title><rect x="93.9" y="1235.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.9" y="1246.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/JFR$Ticks.now (1 samples, 0.21%)</title><rect x="93.9" y="1219.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.9" y="1230.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.ticksNow (1 samples, 0.21%)</title><rect x="93.9" y="1203.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.9" y="1214.0"></text>
</g>
<g>
<title>c2v_ticksNow(JNIEnv_*, _jobject*) (1 samples, 0.21%)</title><rect x="93.9" y="1187.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="96.9" y="1198.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (1 samples, 0.21%)</title><rect x="93.9" y="1171.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="96.9" y="1182.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.21%)</title><rect x="93.9" y="1155.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="96.9" y="1166.0"></text>
</g>
<g>
<title>xdrmem_ops_unaligned (1 samples, 0.21%)</title><rect x="93.9" y="1139.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="96.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (6 samples, 1.26%)</title><rect x="96.4" y="1283.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.4" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (6 samples, 1.26%)</title><rect x="96.4" y="1267.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.4" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (6 samples, 1.26%)</title><rect x="96.4" y="1251.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.4" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (5 samples, 1.05%)</title><rect x="96.4" y="1235.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="99.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="96.4" y="1219.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="96.4" y="1203.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="96.4" y="1187.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="96.4" y="1171.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="96.4" y="1155.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.4" y="1166.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="96.4" y="1139.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="96.4" y="1123.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="96.4" y="1107.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.4" y="1118.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="96.4" y="1091.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="99.4" y="1102.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="96.4" y="1075.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="99.4" y="1086.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="96.4" y="1059.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="99.4" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="96.4" y="1043.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="99.4" y="1054.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="96.4" y="1027.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="99.4" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="96.4" y="1011.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="99.4" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="96.4" y="995.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="99.4" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="96.4" y="979.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="99.4" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="96.4" y="963.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="99.4" y="974.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="96.4" y="947.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="99.4" y="958.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.21%)</title><rect x="96.4" y="931.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="99.4" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (3 samples, 0.63%)</title><rect x="98.9" y="1219.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.9" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (2 samples, 0.42%)</title><rect x="98.9" y="1203.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.9" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (2 samples, 0.42%)</title><rect x="98.9" y="1187.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (2 samples, 0.42%)</title><rect x="98.9" y="1171.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.9" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfZero (1 samples, 0.21%)</title><rect x="98.9" y="1155.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.9" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.21%)</title><rect x="98.9" y="1139.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createLogicNode (1 samples, 0.21%)</title><rect x="98.9" y="1123.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIntegerLessThan (1 samples, 0.21%)</title><rect x="98.9" y="1107.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.create (1 samples, 0.21%)</title><rect x="98.9" y="1091.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.9" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (1 samples, 0.21%)</title><rect x="98.9" y="1075.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.9" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/CompareNode$CompareOp.canonical (1 samples, 0.21%)</title><rect x="98.9" y="1059.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.9" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/CompareNode$CompareOp.canonicalizeSymmetricConstant (1 samples, 0.21%)</title><rect x="98.9" y="1043.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.9" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.optimizeNormalizeCompare (1 samples, 0.21%)</title><rect x="98.9" y="1027.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.9" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="101.3" y="1155.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="101.3" y="1139.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.21%)</title><rect x="101.3" y="1123.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="104.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="101.3" y="1107.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="104.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (1 samples, 0.21%)</title><rect x="101.3" y="1091.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="104.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.21%)</title><rect x="101.3" y="1075.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.3" y="1086.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.21%)</title><rect x="101.3" y="1059.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.3" y="1070.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.21%)</title><rect x="101.3" y="1043.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.3" y="1054.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.21%)</title><rect x="101.3" y="1027.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.3" y="1038.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.21%)</title><rect x="101.3" y="1011.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.3" y="1022.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.21%)</title><rect x="101.3" y="995.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.3" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.compute (1 samples, 0.21%)</title><rect x="103.8" y="1203.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.8" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.computeLiveness (1 samples, 0.21%)</title><rect x="103.8" y="1187.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/SmallLocalLiveness.liveOutCardinality (1 samples, 0.21%)</title><rect x="103.8" y="1171.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="106.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Long.bitCount (1 samples, 0.21%)</title><rect x="103.8" y="1155.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.&lt;init&gt; (1 samples, 0.21%)</title><rect x="106.3" y="1219.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.3" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.allocateArray (1 samples, 0.21%)</title><rect x="106.3" y="1203.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.3" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/ResolvedJavaMethodBytecode.getMaxStackSize (1 samples, 0.21%)</title><rect x="106.3" y="1187.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.createBytecodeParser (1 samples, 0.21%)</title><rect x="108.7" y="1235.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="108.7" y="1219.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="108.7" y="1203.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="111.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="108.7" y="1187.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="108.7" y="1171.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="108.7" y="1155.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.7" y="1166.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="108.7" y="1139.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="108.7" y="1123.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="108.7" y="1107.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.7" y="1118.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="108.7" y="1091.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="111.7" y="1102.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="108.7" y="1075.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="111.7" y="1086.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="108.7" y="1059.0" width="2.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="111.7" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="108.7" y="1043.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="111.7" y="1054.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="108.7" y="1027.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="111.7" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="108.7" y="1011.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="111.7" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="108.7" y="995.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="111.7" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="108.7" y="979.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="111.7" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="108.7" y="963.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="111.7" y="974.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.21%)</title><rect x="108.7" y="947.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="111.7" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopFullUnrollPhase.run (1 samples, 0.21%)</title><rect x="111.2" y="1283.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="114.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopFullUnrollPhase.run (1 samples, 0.21%)</title><rect x="111.2" y="1267.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="114.2" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopsData.&lt;init&gt; (1 samples, 0.21%)</title><rect x="111.2" y="1251.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.2" y="1262.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.21%)</title><rect x="111.2" y="1235.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="114.2" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.21%)</title><rect x="111.2" y="1219.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="114.2" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.21%)</title><rect x="111.2" y="1203.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="114.2" y="1214.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.21%)</title><rect x="111.2" y="1187.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="114.2" y="1198.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.21%)</title><rect x="111.2" y="1171.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="114.2" y="1182.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="111.2" y="1155.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="114.2" y="1166.0"></text>
</g>
<g>
<title>ClassVerifier::generate_code_data(methodHandle const&amp;, unsigned int, Thread*) (1 samples, 0.21%)</title><rect x="111.2" y="1139.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="114.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopPartialUnrollPhase.run (1 samples, 0.21%)</title><rect x="113.7" y="1283.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.7" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopPartialUnrollPhase.run (1 samples, 0.21%)</title><rect x="113.7" y="1267.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.7" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopsData.deleteUnusedNodes (1 samples, 0.21%)</title><rect x="113.7" y="1251.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="116.7" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopEx.deleteUnusedNodes (1 samples, 0.21%)</title><rect x="113.7" y="1235.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.7" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/DerivedScaledInductionVariable.deleteUnusedNodes (1 samples, 0.21%)</title><rect x="113.7" y="1219.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.7" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.tryKillUnused (1 samples, 0.21%)</title><rect x="113.7" y="1203.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.7" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.21%)</title><rect x="113.7" y="1187.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="116.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.21%)</title><rect x="113.7" y="1171.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.inputs (1 samples, 0.21%)</title><rect x="113.7" y="1155.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="116.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getInputIterable (1 samples, 0.21%)</title><rect x="113.7" y="1139.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopSafepointEliminationPhase.run (1 samples, 0.21%)</title><rect x="116.2" y="1283.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopSafepointEliminationPhase.run (1 samples, 0.21%)</title><rect x="116.2" y="1267.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.2" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopsData.&lt;init&gt; (1 samples, 0.21%)</title><rect x="116.2" y="1251.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.21%)</title><rect x="116.2" y="1235.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.2" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.identifyBlocks (1 samples, 0.21%)</title><rect x="116.2" y="1219.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (6 samples, 1.26%)</title><rect x="118.6" y="1283.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.6" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/AddressLoweringPhase.run (1 samples, 0.21%)</title><rect x="118.6" y="1267.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.6" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64AddressLowering.lower (1 samples, 0.21%)</title><rect x="118.6" y="1251.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.6" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.21%)</title><rect x="118.6" y="1235.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.21%)</title><rect x="118.6" y="1219.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.21%)</title><rect x="118.6" y="1203.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$3.iterator (1 samples, 0.21%)</title><rect x="118.6" y="1187.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="118.6" y="1171.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FrameStateAssignmentPhase.run (2 samples, 0.42%)</title><rect x="121.1" y="1267.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.21%)</title><rect x="121.1" y="1251.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FrameStateAssignmentPhase$$Lambda$49.0x0000000800d00520.accept (1 samples, 0.21%)</title><rect x="121.1" y="1235.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.1" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.21%)</title><rect x="121.1" y="1219.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.1" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.21%)</title><rect x="121.1" y="1203.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.1" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.removeUsage (1 samples, 0.21%)</title><rect x="121.1" y="1187.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (1 samples, 0.21%)</title><rect x="123.6" y="1251.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.6" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (1 samples, 0.21%)</title><rect x="123.6" y="1235.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="126.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/OptimizeDivPhase.run (1 samples, 0.21%)</title><rect x="126.0" y="1267.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.0" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerDivRemNode.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="126.0" y="1251.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.21%)</title><rect x="126.0" y="1235.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.0" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="126.0" y="1219.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.0" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="126.0" y="1203.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/FieldsScanner.scan (1 samples, 0.21%)</title><rect x="126.0" y="1187.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$NodeFieldsScanner.scanField (1 samples, 0.21%)</title><rect x="126.0" y="1171.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getAnnotationTimed (1 samples, 0.21%)</title><rect x="126.0" y="1155.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.getAnnotation (1 samples, 0.21%)</title><rect x="126.0" y="1139.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.21%)</title><rect x="126.0" y="1123.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.21%)</title><rect x="126.0" y="1107.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.0" y="1118.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.21%)</title><rect x="126.0" y="1091.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.0" y="1102.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.21%)</title><rect x="126.0" y="1075.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.0" y="1086.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.21%)</title><rect x="126.0" y="1059.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.0" y="1070.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.21%)</title><rect x="126.0" y="1043.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.0" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.21%)</title><rect x="126.0" y="1027.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.0" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.21%)</title><rect x="126.0" y="1011.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.0" y="1022.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.21%)</title><rect x="126.0" y="995.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.0" y="1006.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.21%)</title><rect x="126.0" y="979.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.0" y="990.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.21%)</title><rect x="126.0" y="963.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.0" y="974.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.21%)</title><rect x="126.0" y="947.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.0" y="958.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.21%)</title><rect x="126.0" y="931.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.0" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (1 samples, 0.21%)</title><rect x="126.0" y="915.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.21%)</title><rect x="126.0" y="899.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.21%)</title><rect x="126.0" y="883.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="129.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generateConstructor (1 samples, 0.21%)</title><rect x="126.0" y="867.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generate (1 samples, 0.21%)</title><rect x="126.0" y="851.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.0" y="862.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.21%)</title><rect x="126.0" y="835.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.0" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.21%)</title><rect x="126.0" y="819.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator$1.run (1 samples, 0.21%)</title><rect x="126.0" y="803.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="129.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator$1.run (1 samples, 0.21%)</title><rect x="126.0" y="787.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ClassDefiner.defineClass (1 samples, 0.21%)</title><rect x="126.0" y="771.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.0" y="782.0"></text>
</g>
<g>
<title>java/lang/System$2.defineClass (1 samples, 0.21%)</title><rect x="126.0" y="755.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.0" y="766.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass1 (1 samples, 0.21%)</title><rect x="126.0" y="739.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.0" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass1 (1 samples, 0.21%)</title><rect x="126.0" y="723.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="129.0" y="734.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="126.0" y="707.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="129.0" y="718.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="126.0" y="691.0" width="2.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="129.0" y="702.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="126.0" y="675.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="129.0" y="686.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.21%)</title><rect x="126.0" y="659.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="129.0" y="670.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.21%)</title><rect x="126.0" y="643.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="129.0" y="654.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.21%)</title><rect x="126.0" y="627.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="129.0" y="638.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="126.0" y="611.0" width="2.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="129.0" y="622.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="126.0" y="595.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="129.0" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (2 samples, 0.42%)</title><rect x="128.5" y="1267.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.5" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (2 samples, 0.42%)</title><rect x="128.5" y="1251.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.5" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortNodesLatestWithinBlock (2 samples, 0.42%)</title><rect x="128.5" y="1235.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.5" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortNodesLatestWithinBlock (2 samples, 0.42%)</title><rect x="128.5" y="1219.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.5" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortIntoList (2 samples, 0.42%)</title><rect x="128.5" y="1203.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.inputs (1 samples, 0.21%)</title><rect x="131.0" y="1187.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getInputIterable (1 samples, 0.21%)</title><rect x="131.0" y="1171.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (5 samples, 1.05%)</title><rect x="133.4" y="1283.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="136.4" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (5 samples, 1.05%)</title><rect x="133.4" y="1267.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.4" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (5 samples, 1.05%)</title><rect x="133.4" y="1251.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.4" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (5 samples, 1.05%)</title><rect x="133.4" y="1235.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="136.4" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (5 samples, 1.05%)</title><rect x="133.4" y="1219.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (2 samples, 0.42%)</title><rect x="133.4" y="1203.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (1 samples, 0.21%)</title><rect x="133.4" y="1187.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="136.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.21%)</title><rect x="133.4" y="1171.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="136.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.21%)</title><rect x="133.4" y="1155.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (1 samples, 0.21%)</title><rect x="133.4" y="1139.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.findSynonym (1 samples, 0.21%)</title><rect x="133.4" y="1123.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.4" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.findSynonym (1 samples, 0.21%)</title><rect x="133.4" y="1107.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonicalizeXLowerXPlusA (1 samples, 0.21%)</title><rect x="133.4" y="1091.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="136.4" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.21%)</title><rect x="133.4" y="1075.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="136.4" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.21%)</title><rect x="133.4" y="1059.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="136.4" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.simplify (1 samples, 0.21%)</title><rect x="135.9" y="1187.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="138.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.eliminateNegation (1 samples, 0.21%)</title><rect x="135.9" y="1171.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.9" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryGlobalValueNumbering (2 samples, 0.42%)</title><rect x="138.4" y="1203.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.21%)</title><rect x="140.8" y="1187.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="143.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.valueEquals (1 samples, 0.21%)</title><rect x="140.8" y="1171.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="143.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.dataEquals (1 samples, 0.21%)</title><rect x="140.8" y="1155.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryInferStamp (1 samples, 0.21%)</title><rect x="143.3" y="1203.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.3" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryNode.inferStamp (1 samples, 0.21%)</title><rect x="143.3" y="1187.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryArithmeticNode.foldStamp (1 samples, 0.21%)</title><rect x="143.3" y="1171.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="146.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp$10.foldStamp (1 samples, 0.21%)</title><rect x="143.3" y="1155.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.stampForMask (1 samples, 0.21%)</title><rect x="143.3" y="1139.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.&lt;init&gt; (1 samples, 0.21%)</title><rect x="143.3" y="1123.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.3" y="1134.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.21%)</title><rect x="143.3" y="1107.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="146.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeoptimizationGroupingPhase.run (1 samples, 0.21%)</title><rect x="145.8" y="1283.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.8" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeoptimizationGroupingPhase.run (1 samples, 0.21%)</title><rect x="145.8" y="1267.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.8" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/DeoptimizeNode.getActionAndReason (1 samples, 0.21%)</title><rect x="145.8" y="1251.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.8" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.21%)</title><rect x="145.8" y="1235.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.8" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.unique (1 samples, 0.21%)</title><rect x="145.8" y="1219.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.8" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.21%)</title><rect x="145.8" y="1203.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="148.8" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.21%)</title><rect x="145.8" y="1187.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.21%)</title><rect x="145.8" y="1171.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="148.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findNodeInCache (1 samples, 0.21%)</title><rect x="145.8" y="1155.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.21%)</title><rect x="145.8" y="1139.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.21%)</title><rect x="145.8" y="1123.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.21%)</title><rect x="145.8" y="1107.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.compareKeys (1 samples, 0.21%)</title><rect x="145.8" y="1091.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.8" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$1.equals (1 samples, 0.21%)</title><rect x="145.8" y="1075.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.8" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.valueEquals (1 samples, 0.21%)</title><rect x="145.8" y="1059.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.dataEquals (1 samples, 0.21%)</title><rect x="145.8" y="1043.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.8" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.deepEquals0 (1 samples, 0.21%)</title><rect x="145.8" y="1027.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.8" y="1038.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/PrimitiveConstant.equals (1 samples, 0.21%)</title><rect x="145.8" y="1011.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.8" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase.run (5 samples, 1.05%)</title><rect x="148.2" y="1283.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase.run (5 samples, 1.05%)</title><rect x="148.2" y="1267.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.2" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTree (2 samples, 0.42%)</title><rect x="148.2" y="1251.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDefault (2 samples, 0.42%)</title><rect x="148.2" y="1235.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.2" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.enter (2 samples, 0.42%)</title><rect x="148.2" y="1219.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.enter (2 samples, 0.42%)</title><rect x="148.2" y="1203.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.2" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.processNode (2 samples, 0.42%)</title><rect x="148.2" y="1187.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.2" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.processAbstractBegin (1 samples, 0.21%)</title><rect x="148.2" y="1171.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.registerNewCondition (1 samples, 0.21%)</title><rect x="148.2" y="1155.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.registerCondition (1 samples, 0.21%)</title><rect x="148.2" y="1139.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.registerNewStamp (1 samples, 0.21%)</title><rect x="148.2" y="1123.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeMap.setAndGrow (1 samples, 0.21%)</title><rect x="148.2" y="1107.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.2" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeMap.set (1 samples, 0.21%)</title><rect x="148.2" y="1091.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="151.2" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs (1 samples, 0.21%)</title><rect x="150.7" y="1171.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges$EdgesIterator.next (1 samples, 0.21%)</title><rect x="150.7" y="1155.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges$EdgesIterator.next (1 samples, 0.21%)</title><rect x="150.7" y="1139.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.63%)</title><rect x="153.2" y="1251.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.63%)</title><rect x="153.2" y="1235.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.2" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.63%)</title><rect x="153.2" y="1219.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="156.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (3 samples, 0.63%)</title><rect x="153.2" y="1203.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.2" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (3 samples, 0.63%)</title><rect x="153.2" y="1187.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.2" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (3 samples, 0.63%)</title><rect x="153.2" y="1171.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.21%)</title><rect x="153.2" y="1155.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.identifyBlocks (1 samples, 0.21%)</title><rect x="153.2" y="1139.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="156.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractEndNode.merge (1 samples, 0.21%)</title><rect x="153.2" y="1123.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.usages (1 samples, 0.21%)</title><rect x="153.2" y="1107.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="156.2" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlocks (1 samples, 0.21%)</title><rect x="155.6" y="1155.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlock (1 samples, 0.21%)</title><rect x="155.6" y="1139.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.selectLatestBlock (1 samples, 0.21%)</title><rect x="155.6" y="1123.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeMap.setAndGrow (1 samples, 0.21%)</title><rect x="155.6" y="1107.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.6" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeMap.set (1 samples, 0.21%)</title><rect x="155.6" y="1091.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (1 samples, 0.21%)</title><rect x="158.1" y="1155.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="161.1" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processNodes (1 samples, 0.21%)</title><rect x="158.1" y="1139.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStack (1 samples, 0.21%)</title><rect x="158.1" y="1123.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.1" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processInputs (1 samples, 0.21%)</title><rect x="158.1" y="1107.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.1" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.21%)</title><rect x="158.1" y="1091.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.1" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.forward (1 samples, 0.21%)</title><rect x="158.1" y="1075.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="161.1" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.getInput (1 samples, 0.21%)</title><rect x="158.1" y="1059.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="161.1" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase.run (1 samples, 0.21%)</title><rect x="160.6" y="1283.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.6" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase.run (1 samples, 0.21%)</title><rect x="160.6" y="1267.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.6" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase.processBlock (1 samples, 0.21%)</title><rect x="160.6" y="1251.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.6" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ScheduledNodeIterator.processNodes (1 samples, 0.21%)</title><rect x="160.6" y="1235.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase$LowerGuards.processNode (1 samples, 0.21%)</title><rect x="160.6" y="1219.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="163.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase$LowerGuards.lowerToIf (1 samples, 0.21%)</title><rect x="160.6" y="1203.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="160.6" y="1187.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.setTrueSuccessorProbability (1 samples, 0.21%)</title><rect x="160.6" y="1171.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/Math.max (1 samples, 0.21%)</title><rect x="160.6" y="1155.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="163.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (9 samples, 1.88%)</title><rect x="163.1" y="1283.0" width="22.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.1" y="1294.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (9 samples, 1.88%)</title><rect x="163.1" y="1267.0" width="22.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.1" y="1278.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (7 samples, 1.46%)</title><rect x="163.1" y="1251.0" width="17.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (7 samples, 1.46%)</title><rect x="163.1" y="1235.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.1" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (7 samples, 1.46%)</title><rect x="163.1" y="1219.0" width="17.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.1" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/ContextlessLoopPhase.run (2 samples, 0.42%)</title><rect x="163.1" y="1203.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.1" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/ContextlessLoopPhase.run (2 samples, 0.42%)</title><rect x="163.1" y="1187.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopUnswitchingPhase.run (2 samples, 0.42%)</title><rect x="163.1" y="1171.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopsData.&lt;init&gt; (1 samples, 0.21%)</title><rect x="163.1" y="1155.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.1" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.21%)</title><rect x="163.1" y="1139.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.identifyBlocks (1 samples, 0.21%)</title><rect x="163.1" y="1123.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.1" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.next (1 samples, 0.21%)</title><rect x="163.1" y="1107.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.1" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.next (1 samples, 0.21%)</title><rect x="163.1" y="1091.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.1" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.findUnswitchable (1 samples, 0.21%)</title><rect x="165.5" y="1155.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="168.5" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterator.hasNext (1 samples, 0.21%)</title><rect x="165.5" y="1139.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.5" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator.forward (1 samples, 0.21%)</title><rect x="165.5" y="1123.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.5" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/ConvertDeoptimizeToGuardPhase.run (1 samples, 0.21%)</title><rect x="168.0" y="1203.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/ConvertDeoptimizeToGuardPhase.run (1 samples, 0.21%)</title><rect x="168.0" y="1187.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/DeoptimizeNode.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="168.0" y="1171.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.21%)</title><rect x="168.0" y="1155.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="171.0" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="168.0" y="1139.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="171.0" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="168.0" y="1123.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="171.0" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getAnnotationTimed (1 samples, 0.21%)</title><rect x="168.0" y="1107.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/Class.getAnnotation (1 samples, 0.21%)</title><rect x="168.0" y="1091.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Class.annotationData (1 samples, 0.21%)</title><rect x="168.0" y="1075.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="171.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/Class.createAnnotationData (1 samples, 0.21%)</title><rect x="168.0" y="1059.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="171.0" y="1070.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.21%)</title><rect x="168.0" y="1043.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.0" y="1054.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.21%)</title><rect x="168.0" y="1027.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.0" y="1038.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.21%)</title><rect x="168.0" y="1011.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.0" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.&lt;init&gt; (1 samples, 0.21%)</title><rect x="168.0" y="995.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.putMapEntries (1 samples, 0.21%)</title><rect x="168.0" y="979.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.0" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap$EntryIterator.next (1 samples, 0.21%)</title><rect x="168.0" y="963.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap$EntryIterator.next (1 samples, 0.21%)</title><rect x="168.0" y="947.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopPeelingPhase.run (2 samples, 0.42%)</title><rect x="170.5" y="1203.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="173.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopPeelingPhase.run (2 samples, 0.42%)</title><rect x="170.5" y="1187.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.5" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopEx.canDuplicateLoop (2 samples, 0.42%)</title><rect x="170.5" y="1171.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="173.5" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.nodes (2 samples, 0.42%)</title><rect x="170.5" y="1155.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="173.5" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentWhole.nodes (2 samples, 0.42%)</title><rect x="170.5" y="1139.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="173.5" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.computeNodes (2 samples, 0.42%)</title><rect x="170.5" y="1123.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="173.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.21%)</title><rect x="170.5" y="1107.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.21%)</title><rect x="170.5" y="1091.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="173.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.21%)</title><rect x="170.5" y="1075.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.21%)</title><rect x="170.5" y="1059.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="173.5" y="1070.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance(JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.21%)</title><rect x="170.5" y="1043.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="173.5" y="1054.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.21%)</title><rect x="170.5" y="1027.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="173.5" y="1038.0"></text>
</g>
<g>
<title>JavaThread::is_terminated() const (1 samples, 0.21%)</title><rect x="170.5" y="1011.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="173.5" y="1022.0"></text>
</g>
<g>
<title>int Atomic::load_acquire&lt;int&gt;(int const volatile*) (1 samples, 0.21%)</title><rect x="170.5" y="995.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="173.5" y="1006.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;int, Atomic::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;, void&gt;::operator()(int const volatile*) const (1 samples, 0.21%)</title><rect x="170.5" y="979.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="173.5" y="990.0"></text>
</g>
<g>
<title>int Atomic::PlatformOrderedLoad&lt;4ul, (ScopedFenceType)0&gt;::operator()&lt;int&gt;(int const volatile*) const (1 samples, 0.21%)</title><rect x="170.5" y="963.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="173.5" y="974.0"></text>
</g>
<g>
<title>int Atomic::load&lt;int&gt;(int const volatile*) (1 samples, 0.21%)</title><rect x="170.5" y="947.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="173.5" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.markFloating (1 samples, 0.21%)</title><rect x="172.9" y="1107.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="175.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (2 samples, 0.42%)</title><rect x="175.4" y="1203.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="178.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase.run (2 samples, 0.42%)</title><rect x="175.4" y="1187.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (2 samples, 0.42%)</title><rect x="175.4" y="1171.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (2 samples, 0.42%)</title><rect x="175.4" y="1155.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processLoop (1 samples, 0.21%)</title><rect x="175.4" y="1139.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processLoop (1 samples, 0.21%)</title><rect x="175.4" y="1123.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.4" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.processLoop (1 samples, 0.21%)</title><rect x="175.4" y="1107.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterable.count (1 samples, 0.21%)</title><rect x="175.4" y="1091.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="178.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterator.hasNext (1 samples, 0.21%)</title><rect x="175.4" y="1075.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator.forward (1 samples, 0.21%)</title><rect x="175.4" y="1059.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.4" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.21%)</title><rect x="177.9" y="1139.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="180.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.21%)</title><rect x="177.9" y="1123.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="180.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processAccess (1 samples, 0.21%)</title><rect x="177.9" y="1107.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/memory/FixedAccessNode.setLastLocationAccess (1 samples, 0.21%)</title><rect x="177.9" y="1091.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="180.9" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.updateUsagesInterface (1 samples, 0.21%)</title><rect x="177.9" y="1075.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.9" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.updateUsages (1 samples, 0.21%)</title><rect x="177.9" y="1059.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.9" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.maybeNotifyInputChanged (1 samples, 0.21%)</title><rect x="177.9" y="1043.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.9" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.21%)</title><rect x="177.9" y="1027.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.9" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$ChainedNodeEventListener.changed (1 samples, 0.21%)</title><rect x="177.9" y="1011.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="180.9" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (2 samples, 0.42%)</title><rect x="180.3" y="1251.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="183.3" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.42%)</title><rect x="180.3" y="1235.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.3" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (2 samples, 0.42%)</title><rect x="180.3" y="1219.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.3" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (2 samples, 0.42%)</title><rect x="180.3" y="1203.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.3" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (2 samples, 0.42%)</title><rect x="180.3" y="1187.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (2 samples, 0.42%)</title><rect x="180.3" y="1171.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (2 samples, 0.42%)</title><rect x="180.3" y="1155.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (2 samples, 0.42%)</title><rect x="180.3" y="1139.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.3" y="1150.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.21%)</title><rect x="180.3" y="1123.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="183.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.simplify (1 samples, 0.21%)</title><rect x="182.8" y="1123.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="185.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (7 samples, 1.46%)</title><rect x="185.3" y="1283.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.3" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (7 samples, 1.46%)</title><rect x="185.3" y="1267.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.3" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (5 samples, 1.05%)</title><rect x="185.3" y="1251.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.3" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (5 samples, 1.05%)</title><rect x="185.3" y="1235.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.3" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (5 samples, 1.05%)</title><rect x="185.3" y="1219.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.3" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (5 samples, 1.05%)</title><rect x="185.3" y="1203.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="188.3" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.21%)</title><rect x="185.3" y="1187.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.identifyBlocks (1 samples, 0.21%)</title><rect x="185.3" y="1171.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.hasNext (1 samples, 0.21%)</title><rect x="185.3" y="1155.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.findNext (1 samples, 0.21%)</title><rect x="185.3" y="1139.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="188.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.forward (1 samples, 0.21%)</title><rect x="185.3" y="1123.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.setCurrent (1 samples, 0.21%)</title><rect x="185.3" y="1107.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTree (3 samples, 0.63%)</title><rect x="187.7" y="1187.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDefault (1 samples, 0.21%)</title><rect x="187.7" y="1171.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="190.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (1 samples, 0.21%)</title><rect x="187.7" y="1155.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (1 samples, 0.21%)</title><rect x="187.7" y="1139.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="190.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNodes (1 samples, 0.21%)</title><rect x="187.7" y="1123.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNode (1 samples, 0.21%)</title><rect x="187.7" y="1107.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processGuard (1 samples, 0.21%)</title><rect x="187.7" y="1091.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="190.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.tryProveGuardCondition (1 samples, 0.21%)</title><rect x="187.7" y="1075.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.tryProveGuardCondition (1 samples, 0.21%)</title><rect x="187.7" y="1059.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.tryProveGuardCondition (1 samples, 0.21%)</title><rect x="187.7" y="1043.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.rewireGuards (1 samples, 0.21%)</title><rect x="187.7" y="1027.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil$$Lambda$131.0x0000000800d87650.rewire (1 samples, 0.21%)</title><rect x="187.7" y="1011.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.lambda$tryProveGuardCondition$1 (1 samples, 0.21%)</title><rect x="187.7" y="995.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.7" y="1006.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="187.7" y="979.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="190.7" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="187.7" y="963.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="190.7" y="974.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="187.7" y="947.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="190.7" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.21%)</title><rect x="187.7" y="931.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="190.7" y="942.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="187.7" y="915.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="190.7" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDeferLoopExits (2 samples, 0.42%)</title><rect x="190.2" y="1171.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (2 samples, 0.42%)</title><rect x="190.2" y="1155.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (2 samples, 0.42%)</title><rect x="190.2" y="1139.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNodes (2 samples, 0.42%)</title><rect x="190.2" y="1123.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.2" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.21%)</title><rect x="190.2" y="1107.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.2" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNode (1 samples, 0.21%)</title><rect x="192.7" y="1107.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processGuard (1 samples, 0.21%)</title><rect x="192.7" y="1091.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="195.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.tryProveGuardCondition (1 samples, 0.21%)</title><rect x="192.7" y="1075.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.tryProveGuardCondition (1 samples, 0.21%)</title><rect x="192.7" y="1059.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/LogicNode.implies (1 samples, 0.21%)</title><rect x="192.7" y="1043.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="195.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (1 samples, 0.21%)</title><rect x="195.1" y="1187.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (1 samples, 0.21%)</title><rect x="195.1" y="1171.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (1 samples, 0.21%)</title><rect x="195.1" y="1155.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="198.1" y="1166.0"></text>
</g>
<g>
<title>java/util/EnumMap$ValueIterator.next (1 samples, 0.21%)</title><rect x="195.1" y="1139.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (2 samples, 0.42%)</title><rect x="197.6" y="1251.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.6" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (2 samples, 0.42%)</title><rect x="197.6" y="1235.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.42%)</title><rect x="197.6" y="1219.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (2 samples, 0.42%)</title><rect x="197.6" y="1203.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (2 samples, 0.42%)</title><rect x="197.6" y="1187.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (2 samples, 0.42%)</title><rect x="197.6" y="1171.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="200.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (2 samples, 0.42%)</title><rect x="197.6" y="1155.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="200.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (2 samples, 0.42%)</title><rect x="197.6" y="1139.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (2 samples, 0.42%)</title><rect x="197.6" y="1123.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="200.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.withNodeSourcePosition (1 samples, 0.21%)</title><rect x="200.1" y="1107.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.1" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.withNodeSourcePosition (1 samples, 0.21%)</title><rect x="200.1" y="1091.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="203.1" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.getNodeSourcePosition (1 samples, 0.21%)</title><rect x="200.1" y="1075.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="203.1" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.getNodeInfo (1 samples, 0.21%)</title><rect x="200.1" y="1059.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.1" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (30 samples, 6.28%)</title><rect x="202.6" y="1283.0" width="74.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.6" y="1294.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (30 samples, 6.28%)</title><rect x="202.6" y="1267.0" width="74.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.6" y="1278.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.lower (30 samples, 6.28%)</title><rect x="202.6" y="1251.0" width="74.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.6" y="1262.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (30 samples, 6.28%)</title><rect x="202.6" y="1235.0" width="74.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.6" y="1246.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (30 samples, 6.28%)</title><rect x="202.6" y="1219.0" width="74.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="205.6" y="1230.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (30 samples, 6.28%)</title><rect x="202.6" y="1203.0" width="74.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.6" y="1214.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (30 samples, 6.28%)</title><rect x="202.6" y="1187.0" width="74.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.6" y="1198.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (25 samples, 5.23%)</title><rect x="202.6" y="1171.0" width="61.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.6" y="1182.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (25 samples, 5.23%)</title><rect x="202.6" y="1155.0" width="61.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.6" y="1166.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (25 samples, 5.23%)</title><rect x="202.6" y="1139.0" width="61.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.6" y="1150.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (25 samples, 5.23%)</title><rect x="202.6" y="1123.0" width="61.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.6" y="1134.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.run (25 samples, 5.23%)</title><rect x="202.6" y="1107.0" width="61.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.6" y="1118.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.63%)</title><rect x="202.6" y="1091.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.63%)</title><rect x="202.6" y="1075.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (3 samples, 0.63%)</title><rect x="202.6" y="1059.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="205.6" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (3 samples, 0.63%)</title><rect x="202.6" y="1043.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="205.6" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (3 samples, 0.63%)</title><rect x="202.6" y="1027.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.6" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlocks (3 samples, 0.63%)</title><rect x="202.6" y="1011.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.6" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.subList (1 samples, 0.21%)</title><rect x="202.6" y="995.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.6" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlock (2 samples, 0.42%)</title><rect x="205.0" y="995.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="208.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcBlockForUsage (1 samples, 0.21%)</title><rect x="207.5" y="979.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.5" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.processBlock (22 samples, 4.60%)</title><rect x="210.0" y="1091.0" width="54.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.0" y="1102.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round$ProcessFrame.preprocess (22 samples, 4.60%)</title><rect x="210.0" y="1075.0" width="54.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.0" y="1086.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.process (22 samples, 4.60%)</title><rect x="210.0" y="1059.0" width="54.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.0" y="1070.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/gc/WriteBarrier.lower (6 samples, 1.26%)</title><rect x="210.0" y="1043.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="213.0" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (6 samples, 1.26%)</title><rect x="210.0" y="1027.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.0" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (6 samples, 1.26%)</title><rect x="210.0" y="1011.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.0" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/HotSpotG1WriteBarrierSnippets$Templates.lower (6 samples, 1.26%)</title><rect x="210.0" y="995.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/gc/G1WriteBarrierSnippets$G1WriteBarrierLowerer.lower (6 samples, 1.26%)</title><rect x="210.0" y="979.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (4 samples, 0.84%)</title><rect x="210.0" y="963.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="213.0" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.get (1 samples, 0.21%)</title><rect x="210.0" y="947.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="213.0" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.21%)</title><rect x="210.0" y="931.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.21%)</title><rect x="210.0" y="915.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (3 samples, 0.63%)</title><rect x="212.4" y="947.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="215.4" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (3 samples, 0.63%)</title><rect x="212.4" y="931.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.4" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (3 samples, 0.63%)</title><rect x="212.4" y="915.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.4" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (3 samples, 0.63%)</title><rect x="212.4" y="899.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="215.4" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (3 samples, 0.63%)</title><rect x="212.4" y="883.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.4" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (3 samples, 0.63%)</title><rect x="212.4" y="867.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.4" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.63%)</title><rect x="212.4" y="851.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.4" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.63%)</title><rect x="212.4" y="835.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.4" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.63%)</title><rect x="212.4" y="819.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.4" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (3 samples, 0.63%)</title><rect x="212.4" y="803.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="215.4" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (3 samples, 0.63%)</title><rect x="212.4" y="787.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.4" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (2 samples, 0.42%)</title><rect x="212.4" y="771.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.4" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="212.4" y="755.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.4" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="212.4" y="739.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.4" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="212.4" y="723.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.4" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="212.4" y="707.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.4" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="212.4" y="691.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="215.4" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="212.4" y="675.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.4" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.21%)</title><rect x="212.4" y="659.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.4" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="212.4" y="643.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.4" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="212.4" y="627.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.4" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="212.4" y="611.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="215.4" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="212.4" y="595.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.4" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="212.4" y="579.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.4" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.compute (1 samples, 0.21%)</title><rect x="212.4" y="563.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.4" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.computeLiveness (1 samples, 0.21%)</title><rect x="212.4" y="547.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="215.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (1 samples, 0.21%)</title><rect x="212.4" y="531.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.4" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.cleanupFinalGraph (1 samples, 0.21%)</title><rect x="214.9" y="755.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.9" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.predecessor (1 samples, 0.21%)</title><rect x="214.9" y="739.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="217.9" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.createBytecodeParser (1 samples, 0.21%)</title><rect x="217.4" y="771.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.4" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.&lt;init&gt; (1 samples, 0.21%)</title><rect x="217.4" y="755.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.4" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.getBytecode (1 samples, 0.21%)</title><rect x="217.4" y="739.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.4" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.getClassfile (1 samples, 0.21%)</title><rect x="217.4" y="723.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.4" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/Classfile.&lt;init&gt; (1 samples, 0.21%)</title><rect x="217.4" y="707.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="220.4" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/Classfile.readMethods (1 samples, 0.21%)</title><rect x="217.4" y="691.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.4" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/Classfile.findCodeAttribute (1 samples, 0.21%)</title><rect x="217.4" y="675.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.4" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.findMethod (1 samples, 0.21%)</title><rect x="217.4" y="659.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.4" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider$MethodsCache.lookup (1 samples, 0.21%)</title><rect x="217.4" y="643.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.4" y="654.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getDeclaredMethods (1 samples, 0.21%)</title><rect x="217.4" y="627.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.4" y="638.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getDeclaredMethods (1 samples, 0.21%)</title><rect x="217.4" y="611.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.4" y="622.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.fromMetaspace (1 samples, 0.21%)</title><rect x="217.4" y="595.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.4" y="606.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getHolder (1 samples, 0.21%)</title><rect x="217.4" y="579.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.4" y="590.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getResolvedJavaType (1 samples, 0.21%)</title><rect x="217.4" y="563.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.4" y="574.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getResolvedJavaType0 (1 samples, 0.21%)</title><rect x="217.4" y="547.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.4" y="558.0"></text>
</g>
<g>
<title>c2v_getResolvedJavaType0(JNIEnv_*, _jobject*, _jobject*, long, unsigned char) (1 samples, 0.21%)</title><rect x="217.4" y="531.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="220.4" y="542.0"></text>
</g>
<g>
<title>JVMCIEnv::get_jvmci_type(JVMCIKlassHandle const&amp;, JVMCIEnv*) (1 samples, 0.21%)</title><rect x="217.4" y="515.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="220.4" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="217.4" y="499.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="220.4" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="217.4" y="483.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="220.4" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$Arguments.&lt;init&gt; (1 samples, 0.21%)</title><rect x="219.8" y="963.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.8" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$CacheKey.&lt;init&gt; (1 samples, 0.21%)</title><rect x="219.8" y="947.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.8" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$SnippetInfo.getParameterCount (1 samples, 0.21%)</title><rect x="219.8" y="931.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.8" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$LazySnippetInfo.info (1 samples, 0.21%)</title><rect x="219.8" y="915.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.8" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.21%)</title><rect x="222.3" y="963.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.3" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.21%)</title><rect x="222.3" y="947.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="225.3" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (1 samples, 0.21%)</title><rect x="222.3" y="931.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.3" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePosition (1 samples, 0.21%)</title><rect x="222.3" y="915.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.3" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/Lowerable.lower (16 samples, 3.35%)</title><rect x="224.8" y="1043.0" width="39.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.8" y="1054.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (16 samples, 3.35%)</title><rect x="224.8" y="1027.0" width="39.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.8" y="1038.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (16 samples, 3.35%)</title><rect x="224.8" y="1011.0" width="39.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.8" y="1022.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/HotSpotAllocationSnippets$Templates.lower (9 samples, 1.88%)</title><rect x="224.8" y="995.0" width="22.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.8" y="1006.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (7 samples, 1.46%)</title><rect x="224.8" y="979.0" width="17.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="227.8" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (7 samples, 1.46%)</title><rect x="224.8" y="963.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.8" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (5 samples, 1.05%)</title><rect x="224.8" y="947.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="227.8" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (5 samples, 1.05%)</title><rect x="224.8" y="931.0" width="12.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.8" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (5 samples, 1.05%)</title><rect x="224.8" y="915.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.8" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (5 samples, 1.05%)</title><rect x="224.8" y="899.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.8" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (5 samples, 1.05%)</title><rect x="224.8" y="883.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.8" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="224.8" y="867.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.8" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="224.8" y="851.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.8" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.21%)</title><rect x="224.8" y="835.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.8" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.21%)</title><rect x="224.8" y="819.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.8" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (1 samples, 0.21%)</title><rect x="224.8" y="803.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.8" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (1 samples, 0.21%)</title><rect x="224.8" y="787.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.8" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (1 samples, 0.21%)</title><rect x="224.8" y="771.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.8" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (1 samples, 0.21%)</title><rect x="224.8" y="755.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.8" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (1 samples, 0.21%)</title><rect x="224.8" y="739.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.8" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerBelowNode.canonical (1 samples, 0.21%)</title><rect x="224.8" y="723.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.8" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerBelowNode.canonical (1 samples, 0.21%)</title><rect x="224.8" y="707.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.8" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (1 samples, 0.21%)</title><rect x="224.8" y="691.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.8" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerBelowNode$BelowOp.findSynonym (1 samples, 0.21%)</title><rect x="224.8" y="675.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.8" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.findSynonym (1 samples, 0.21%)</title><rect x="224.8" y="659.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.8" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.create (1 samples, 0.21%)</title><rect x="224.8" y="643.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.8" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerBelowNode$BelowOp.findSynonym (1 samples, 0.21%)</title><rect x="224.8" y="627.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.8" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValueNode.stamp (1 samples, 0.21%)</title><rect x="224.8" y="611.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.8" y="622.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.21%)</title><rect x="224.8" y="595.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="227.8" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 0.84%)</title><rect x="227.2" y="867.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.2" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 0.84%)</title><rect x="227.2" y="851.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.2" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (4 samples, 0.84%)</title><rect x="227.2" y="835.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.2" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (4 samples, 0.84%)</title><rect x="227.2" y="819.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.2" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (4 samples, 0.84%)</title><rect x="227.2" y="803.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.2" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (4 samples, 0.84%)</title><rect x="227.2" y="787.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="230.2" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (4 samples, 0.84%)</title><rect x="227.2" y="771.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.2" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (4 samples, 0.84%)</title><rect x="227.2" y="755.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.2" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (4 samples, 0.84%)</title><rect x="227.2" y="739.0" width="9.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.2" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (4 samples, 0.84%)</title><rect x="227.2" y="723.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.2" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="227.2" y="707.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.2" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="227.2" y="691.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.2" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="227.2" y="675.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.2" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="227.2" y="659.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.2" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="227.2" y="643.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.2" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="227.2" y="627.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.2" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="227.2" y="611.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.2" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="227.2" y="595.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="230.2" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="227.2" y="579.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="230.2" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="227.2" y="563.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.2" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="227.2" y="547.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.2" y="558.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="227.2" y="531.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="230.2" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="227.2" y="515.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="230.2" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.21%)</title><rect x="227.2" y="499.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.2" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/Plugin_HotSpotReplacementsUtil_hubOffset.execute (1 samples, 0.21%)</title><rect x="227.2" y="483.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.2" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/GraphBuilderContext.isPluginEnabled (1 samples, 0.21%)</title><rect x="227.2" y="467.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.2" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (3 samples, 0.63%)</title><rect x="229.7" y="707.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.7" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (3 samples, 0.63%)</title><rect x="229.7" y="691.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.7" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (3 samples, 0.63%)</title><rect x="229.7" y="675.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.7" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (3 samples, 0.63%)</title><rect x="229.7" y="659.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="232.7" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (3 samples, 0.63%)</title><rect x="229.7" y="643.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.7" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (3 samples, 0.63%)</title><rect x="229.7" y="627.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="232.7" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (3 samples, 0.63%)</title><rect x="229.7" y="611.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.7" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (3 samples, 0.63%)</title><rect x="229.7" y="595.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.7" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (3 samples, 0.63%)</title><rect x="229.7" y="579.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.7" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (3 samples, 0.63%)</title><rect x="229.7" y="563.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.7" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (3 samples, 0.63%)</title><rect x="229.7" y="547.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.7" y="558.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (3 samples, 0.63%)</title><rect x="229.7" y="531.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.7" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (3 samples, 0.63%)</title><rect x="229.7" y="515.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.7" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (3 samples, 0.63%)</title><rect x="229.7" y="499.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.7" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (3 samples, 0.63%)</title><rect x="229.7" y="483.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.7" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (3 samples, 0.63%)</title><rect x="229.7" y="467.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.7" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (3 samples, 0.63%)</title><rect x="229.7" y="451.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.7" y="462.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (3 samples, 0.63%)</title><rect x="229.7" y="435.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.7" y="446.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (3 samples, 0.63%)</title><rect x="229.7" y="419.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.7" y="430.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.create (1 samples, 0.21%)</title><rect x="229.7" y="403.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.7" y="414.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.build (1 samples, 0.21%)</title><rect x="229.7" y="387.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="232.7" y="398.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.iterateOverBytecodes (1 samples, 0.21%)</title><rect x="229.7" y="371.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.7" y="382.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.makeBlock (1 samples, 0.21%)</title><rect x="229.7" y="355.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.7" y="366.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping$BciBlock.clearSucccessors (1 samples, 0.21%)</title><rect x="229.7" y="339.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.7" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.21%)</title><rect x="229.7" y="323.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.7" y="334.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (2 samples, 0.42%)</title><rect x="232.2" y="403.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.2" y="414.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (2 samples, 0.42%)</title><rect x="232.2" y="387.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.2" y="398.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (2 samples, 0.42%)</title><rect x="232.2" y="371.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.2" y="382.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (2 samples, 0.42%)</title><rect x="232.2" y="355.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.2" y="366.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (2 samples, 0.42%)</title><rect x="232.2" y="339.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.2" y="350.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (2 samples, 0.42%)</title><rect x="232.2" y="323.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.2" y="334.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (2 samples, 0.42%)</title><rect x="232.2" y="307.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="235.2" y="318.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (2 samples, 0.42%)</title><rect x="232.2" y="291.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.2" y="302.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (2 samples, 0.42%)</title><rect x="232.2" y="275.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="235.2" y="286.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (2 samples, 0.42%)</title><rect x="232.2" y="259.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.2" y="270.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (2 samples, 0.42%)</title><rect x="232.2" y="243.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.2" y="254.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (2 samples, 0.42%)</title><rect x="232.2" y="227.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.2" y="238.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (2 samples, 0.42%)</title><rect x="232.2" y="211.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.2" y="222.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (2 samples, 0.42%)</title><rect x="232.2" y="195.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.2" y="206.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BytecodeStream.readCPI (1 samples, 0.21%)</title><rect x="232.2" y="179.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.2" y="190.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/Bytes.beU2 (1 samples, 0.21%)</title><rect x="232.2" y="163.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.2" y="174.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="234.6" y="179.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.6" y="190.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="234.6" y="163.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.6" y="174.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="234.6" y="147.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.6" y="158.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="234.6" y="131.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.6" y="142.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="234.6" y="115.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="237.6" y="126.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="234.6" y="99.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.6" y="110.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.createBytecodeParser (1 samples, 0.21%)</title><rect x="234.6" y="83.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.6" y="94.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.&lt;init&gt; (1 samples, 0.21%)</title><rect x="234.6" y="67.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.6" y="78.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.getBytecode (1 samples, 0.21%)</title><rect x="234.6" y="51.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.6" y="62.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/Classfile.getCode (1 samples, 0.21%)</title><rect x="234.6" y="35.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.6" y="46.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.explodeLoops (2 samples, 0.42%)</title><rect x="237.1" y="947.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="240.1" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.fullUnroll (2 samples, 0.42%)</title><rect x="237.1" y="931.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.1" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.simplify (1 samples, 0.21%)</title><rect x="239.6" y="915.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.6" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil$DefaultSimplifierTool.deleteBranch (1 samples, 0.21%)</title><rect x="239.6" y="899.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.6" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killCFG (1 samples, 0.21%)</title><rect x="239.6" y="883.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.6" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killCFGInner (1 samples, 0.21%)</title><rect x="239.6" y="867.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.6" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.tryKillUnused (1 samples, 0.21%)</title><rect x="239.6" y="851.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="242.6" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.21%)</title><rect x="239.6" y="835.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="242.6" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.21%)</title><rect x="239.6" y="819.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.6" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.removeUsage (1 samples, 0.21%)</title><rect x="239.6" y="803.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.6" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.movUsageFromEndToExtraUsages (1 samples, 0.21%)</title><rect x="239.6" y="787.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.6" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$Arguments.&lt;init&gt; (1 samples, 0.21%)</title><rect x="242.1" y="979.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.1" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$CacheKey.&lt;init&gt; (1 samples, 0.21%)</title><rect x="242.1" y="963.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.1" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$SnippetInfo.getParameterCount (1 samples, 0.21%)</title><rect x="242.1" y="947.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="245.1" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$LazySnippetInfo.info (1 samples, 0.21%)</title><rect x="242.1" y="931.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.1" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/SnippetParameterInfo.&lt;init&gt; (1 samples, 0.21%)</title><rect x="242.1" y="915.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="245.1" y="926.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaMethod.getParameterAnnotation (1 samples, 0.21%)</title><rect x="242.1" y="899.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.1" y="910.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getParameterAnnotations (1 samples, 0.21%)</title><rect x="242.1" y="883.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="245.1" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.21%)</title><rect x="244.5" y="979.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.5" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.21%)</title><rect x="244.5" y="963.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="247.5" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (1 samples, 0.21%)</title><rect x="244.5" y="947.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.5" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePosition (1 samples, 0.21%)</title><rect x="244.5" y="931.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.contains (1 samples, 0.21%)</title><rect x="244.5" y="915.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.containsKey (1 samples, 0.21%)</title><rect x="244.5" y="899.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="247.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.21%)</title><rect x="244.5" y="883.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.21%)</title><rect x="244.5" y="867.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.21%)</title><rect x="244.5" y="851.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.5" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/MonitorSnippets$Templates.lower (1 samples, 0.21%)</title><rect x="247.0" y="995.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (1 samples, 0.21%)</title><rect x="247.0" y="979.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (1 samples, 0.21%)</title><rect x="247.0" y="963.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.0" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (1 samples, 0.21%)</title><rect x="247.0" y="947.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.21%)</title><rect x="247.0" y="931.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="250.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.21%)</title><rect x="247.0" y="915.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.21%)</title><rect x="247.0" y="899.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.0" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.21%)</title><rect x="247.0" y="883.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.0" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="247.0" y="867.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="250.0" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="247.0" y="851.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.0" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="247.0" y="835.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.0" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.21%)</title><rect x="247.0" y="819.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.0" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.21%)</title><rect x="247.0" y="803.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.0" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.21%)</title><rect x="247.0" y="787.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="250.0" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="247.0" y="771.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.0" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="247.0" y="755.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.0" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="247.0" y="739.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.0" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="247.0" y="723.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.0" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="247.0" y="707.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.0" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="247.0" y="691.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.0" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="247.0" y="675.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="250.0" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="247.0" y="659.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.0" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="247.0" y="643.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="250.0" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="247.0" y="627.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.0" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="247.0" y="611.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.0" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="247.0" y="595.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.0" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="247.0" y="579.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="250.0" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="247.0" y="563.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="250.0" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="247.0" y="547.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.0" y="558.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="247.0" y="531.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="250.0" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.21%)</title><rect x="247.0" y="515.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.0" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="247.0" y="499.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.0" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryNodePluginForInvocation (1 samples, 0.21%)</title><rect x="247.0" y="483.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.0" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleInvoke (1 samples, 0.21%)</title><rect x="247.0" y="467.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.0" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotWordOperationPlugin.handleInvoke (1 samples, 0.21%)</title><rect x="247.0" y="451.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="250.0" y="462.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BridgeMethodUtils.getAnnotation (1 samples, 0.21%)</title><rect x="247.0" y="435.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.0" y="446.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lower (1 samples, 0.21%)</title><rect x="249.5" y="995.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.5" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lowerStoreIndexedNode (1 samples, 0.21%)</title><rect x="249.5" y="979.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.5" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createNullCheckedValue (1 samples, 0.21%)</title><rect x="249.5" y="963.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.5" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createNullCheck (1 samples, 0.21%)</title><rect x="249.5" y="947.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.5" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/ObjectStamp.copyWith (1 samples, 0.21%)</title><rect x="249.5" y="931.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="252.5" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/InstanceOfSnippetsTemplates.lower (3 samples, 0.63%)</title><rect x="251.9" y="995.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.9" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/InstanceOfSnippets$Templates.makeArguments (1 samples, 0.21%)</title><rect x="251.9" y="979.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.9" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$Arguments.&lt;init&gt; (1 samples, 0.21%)</title><rect x="251.9" y="963.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="254.9" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$CacheKey.&lt;init&gt; (1 samples, 0.21%)</title><rect x="251.9" y="947.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.9" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$SnippetInfo.getParameterCount (1 samples, 0.21%)</title><rect x="251.9" y="931.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.9" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$LazySnippetInfo.info (1 samples, 0.21%)</title><rect x="251.9" y="915.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="254.9" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/SnippetParameterInfo.&lt;init&gt; (1 samples, 0.21%)</title><rect x="251.9" y="899.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.9" y="910.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaMethod.getParameterAnnotation (1 samples, 0.21%)</title><rect x="251.9" y="883.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="254.9" y="894.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getParameterAnnotations (1 samples, 0.21%)</title><rect x="251.9" y="867.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.9" y="878.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJDKReflection.getParameterAnnotations (1 samples, 0.21%)</title><rect x="251.9" y="851.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.9" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterAnnotations (1 samples, 0.21%)</title><rect x="251.9" y="835.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.9" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.sharedGetParameterAnnotations (1 samples, 0.21%)</title><rect x="251.9" y="819.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.9" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.parseParameterAnnotations (1 samples, 0.21%)</title><rect x="251.9" y="803.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.9" y="814.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseParameterAnnotations (1 samples, 0.21%)</title><rect x="251.9" y="787.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.9" y="798.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseParameterAnnotations2 (1 samples, 0.21%)</title><rect x="251.9" y="771.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.9" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (2 samples, 0.42%)</title><rect x="254.4" y="979.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.4" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (2 samples, 0.42%)</title><rect x="254.4" y="963.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.4" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (1 samples, 0.21%)</title><rect x="254.4" y="947.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.4" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.21%)</title><rect x="254.4" y="931.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.4" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.21%)</title><rect x="254.4" y="915.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="257.4" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.21%)</title><rect x="254.4" y="899.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.4" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.21%)</title><rect x="254.4" y="883.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.4" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="254.4" y="867.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.4" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="254.4" y="851.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.4" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="254.4" y="835.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.4" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.21%)</title><rect x="254.4" y="819.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.4" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.21%)</title><rect x="254.4" y="803.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.4" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.21%)</title><rect x="254.4" y="787.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.4" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="254.4" y="771.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.4" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="254.4" y="755.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.4" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="254.4" y="739.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.4" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="254.4" y="723.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.4" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="254.4" y="707.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.4" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="254.4" y="691.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.4" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.21%)</title><rect x="254.4" y="675.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="257.4" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="254.4" y="659.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.4" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="254.4" y="643.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.4" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="254.4" y="627.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.4" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="254.4" y="611.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.4" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="254.4" y="595.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.4" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="254.4" y="579.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.4" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="254.4" y="563.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.4" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="254.4" y="547.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.4" y="558.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="254.4" y="531.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.4" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethod (1 samples, 0.21%)</title><rect x="254.4" y="515.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.4" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.maybeEagerlyResolve (1 samples, 0.21%)</title><rect x="254.4" y="499.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.4" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstantPool.loadReferencedType (1 samples, 0.21%)</title><rect x="254.4" y="483.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.4" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstant$MemberRef.loadReferencedType (1 samples, 0.21%)</title><rect x="254.4" y="467.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.4" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstant$ClassRef.loadReferencedType (1 samples, 0.21%)</title><rect x="254.4" y="451.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.4" y="462.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="254.4" y="435.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="257.4" y="446.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="254.4" y="419.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="257.4" y="430.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="254.4" y="403.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="257.4" y="414.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.21%)</title><rect x="254.4" y="387.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="257.4" y="398.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.21%)</title><rect x="254.4" y="371.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="257.4" y="382.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.21%)</title><rect x="254.4" y="355.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="257.4" y="366.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.21%)</title><rect x="254.4" y="339.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="257.4" y="350.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.21%)</title><rect x="254.4" y="323.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="257.4" y="334.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.21%)</title><rect x="254.4" y="307.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="257.4" y="318.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="254.4" y="291.0" width="2.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="257.4" y="302.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="254.4" y="275.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="257.4" y="286.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="256.9" y="947.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="259.9" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="256.9" y="931.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.9" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (1 samples, 0.21%)</title><rect x="256.9" y="915.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.9" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (1 samples, 0.21%)</title><rect x="256.9" y="899.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.9" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.lower (1 samples, 0.21%)</title><rect x="256.9" y="883.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.9" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="256.9" y="867.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="259.9" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="256.9" y="851.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.9" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (1 samples, 0.21%)</title><rect x="256.9" y="835.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="259.9" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (1 samples, 0.21%)</title><rect x="256.9" y="819.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.9" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (1 samples, 0.21%)</title><rect x="256.9" y="803.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.9" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="256.9" y="787.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.9" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="256.9" y="771.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.9" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.21%)</title><rect x="256.9" y="755.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.9" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.run (1 samples, 0.21%)</title><rect x="256.9" y="739.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.9" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="256.9" y="723.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.9" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="256.9" y="707.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.9" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.21%)</title><rect x="256.9" y="691.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.9" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (1 samples, 0.21%)</title><rect x="256.9" y="675.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="259.9" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (1 samples, 0.21%)</title><rect x="256.9" y="659.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.9" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortNodesLatestWithinBlock (1 samples, 0.21%)</title><rect x="256.9" y="643.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.9" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortNodesLatestWithinBlock (1 samples, 0.21%)</title><rect x="256.9" y="627.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.9" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortIntoList (1 samples, 0.21%)</title><rect x="256.9" y="611.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="259.9" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.21%)</title><rect x="256.9" y="595.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.9" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.21%)</title><rect x="256.9" y="579.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.9" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopySnippets$Templates.lower (2 samples, 0.42%)</title><rect x="259.3" y="995.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.3" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopySnippets$Templates.lower (2 samples, 0.42%)</title><rect x="259.3" y="979.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.3" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopySnippets$Templates.instantiate (2 samples, 0.42%)</title><rect x="259.3" y="963.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.3" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (2 samples, 0.42%)</title><rect x="259.3" y="947.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.3" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (2 samples, 0.42%)</title><rect x="259.3" y="931.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.3" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="261.8" y="915.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.8" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="261.8" y="899.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.8" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (1 samples, 0.21%)</title><rect x="261.8" y="883.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.8" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (1 samples, 0.21%)</title><rect x="261.8" y="867.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.8" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="261.8" y="851.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.8" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="261.8" y="835.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.8" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (1 samples, 0.21%)</title><rect x="261.8" y="819.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.8" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (1 samples, 0.21%)</title><rect x="261.8" y="803.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.8" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTree (1 samples, 0.21%)</title><rect x="261.8" y="787.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.8" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDefault (1 samples, 0.21%)</title><rect x="261.8" y="771.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.8" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (1 samples, 0.21%)</title><rect x="261.8" y="755.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.8" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (1 samples, 0.21%)</title><rect x="261.8" y="739.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="264.8" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNodes (1 samples, 0.21%)</title><rect x="261.8" y="723.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.8" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processBlock (1 samples, 0.21%)</title><rect x="261.8" y="707.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.8" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNode (1 samples, 0.21%)</title><rect x="261.8" y="691.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.8" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processIf (1 samples, 0.21%)</title><rect x="261.8" y="675.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.8" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.21%)</title><rect x="261.8" y="659.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="264.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.21%)</title><rect x="261.8" y="643.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="264.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.21%)</title><rect x="261.8" y="627.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.21%)</title><rect x="261.8" y="611.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.8" y="622.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance(JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.21%)</title><rect x="261.8" y="595.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="264.8" y="606.0"></text>
</g>
<g>
<title>OrderAccess::fence() (1 samples, 0.21%)</title><rect x="261.8" y="579.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="264.8" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (5 samples, 1.05%)</title><rect x="264.3" y="1171.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (5 samples, 1.05%)</title><rect x="264.3" y="1155.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="267.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (5 samples, 1.05%)</title><rect x="264.3" y="1139.0" width="12.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (5 samples, 1.05%)</title><rect x="264.3" y="1123.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (5 samples, 1.05%)</title><rect x="264.3" y="1107.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (5 samples, 1.05%)</title><rect x="264.3" y="1091.0" width="12.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="267.3" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList$1.next (1 samples, 0.21%)</title><rect x="264.3" y="1075.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList$1.next (1 samples, 0.21%)</title><rect x="264.3" y="1059.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.3" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.remove (1 samples, 0.21%)</title><rect x="264.3" y="1043.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.3" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.removeFirst (1 samples, 0.21%)</title><rect x="264.3" y="1027.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.3" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.21%)</title><rect x="264.3" y="1011.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.3" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (4 samples, 0.84%)</title><rect x="266.7" y="1075.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="269.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (3 samples, 0.63%)</title><rect x="266.7" y="1059.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="269.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (1 samples, 0.21%)</title><rect x="266.7" y="1043.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.21%)</title><rect x="266.7" y="1027.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.21%)</title><rect x="266.7" y="1011.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (1 samples, 0.21%)</title><rect x="266.7" y="995.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.findSynonym (1 samples, 0.21%)</title><rect x="266.7" y="979.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.7" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.21%)</title><rect x="266.7" y="963.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="269.7" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.21%)</title><rect x="266.7" y="947.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="269.7" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.21%)</title><rect x="266.7" y="931.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="269.7" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.21%)</title><rect x="266.7" y="915.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="269.7" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.21%)</title><rect x="266.7" y="899.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="269.7" y="910.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="266.7" y="883.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="269.7" y="894.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="266.7" y="867.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="269.7" y="878.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_special_method(CallInfo&amp;, LinkInfo const&amp;, methodHandle const&amp;, Handle, Thread*) (1 samples, 0.21%)</title><rect x="266.7" y="851.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="269.7" y="862.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="266.7" y="835.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="269.7" y="846.0"></text>
</g>
<g>
<title>Method::is_not_compilable(int) const (1 samples, 0.21%)</title><rect x="266.7" y="819.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="269.7" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/word/PointerCastNode.canonical (1 samples, 0.21%)</title><rect x="269.2" y="1043.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.2" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/memory/FloatingReadNode.canonical (1 samples, 0.21%)</title><rect x="271.7" y="1043.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/memory/ReadNode.canonicalizeRead (1 samples, 0.21%)</title><rect x="271.7" y="1027.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/HotSpotReplacementsUtil$3.canonicalizeRead (1 samples, 0.21%)</title><rect x="271.7" y="1011.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.typeReferenceOrNull (1 samples, 0.21%)</title><rect x="271.7" y="995.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.typeReferenceOrNull (1 samples, 0.21%)</title><rect x="271.7" y="979.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="274.7" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.createTrustedWithoutAssumptions (1 samples, 0.21%)</title><rect x="271.7" y="963.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.7" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.createTrusted (1 samples, 0.21%)</title><rect x="271.7" y="947.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.7" y="958.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaType.isLeaf (1 samples, 0.21%)</title><rect x="271.7" y="931.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.7" y="942.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaType.getElementalType (1 samples, 0.21%)</title><rect x="271.7" y="915.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.7" y="926.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getComponentType (1 samples, 0.21%)</title><rect x="271.7" y="899.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.7" y="910.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getComponentType (1 samples, 0.21%)</title><rect x="271.7" y="883.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.7" y="894.0"></text>
</g>
<g>
<title>JVMCIEnv::get_jvmci_type(JVMCIKlassHandle const&amp;, JVMCIEnv*) (1 samples, 0.21%)</title><rect x="271.7" y="867.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="274.7" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryInferStamp (1 samples, 0.21%)</title><rect x="274.1" y="1059.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="277.1" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/word/WordCastNode.inferStamp (1 samples, 0.21%)</title><rect x="274.1" y="1043.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.1" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/UseTrappingNullChecksPhase.run (1 samples, 0.21%)</title><rect x="276.6" y="1283.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.6" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/UseTrappingNullChecksPhase.run (1 samples, 0.21%)</title><rect x="276.6" y="1267.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.6" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/UseTrappingNullChecksPhase.tryUseTrappingNullCheck (1 samples, 0.21%)</title><rect x="276.6" y="1251.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="279.6" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.decodeSpeculation (1 samples, 0.21%)</title><rect x="276.6" y="1235.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.6" y="1246.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/PrimitiveConstant.equals (1 samples, 0.21%)</title><rect x="276.6" y="1219.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningPhase.run (69 samples, 14.44%)</title><rect x="279.1" y="1283.0" width="170.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.1" y="1294.0">org/graalvm/compiler/p..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningPhase.run (69 samples, 14.44%)</title><rect x="279.1" y="1267.0" width="170.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.1" y="1278.0">org/graalvm/compiler/p..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.&lt;init&gt; (2 samples, 0.42%)</title><rect x="279.1" y="1251.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/CallsiteHolderExplorable.&lt;init&gt; (2 samples, 0.42%)</title><rect x="279.1" y="1235.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="282.1" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/CallsiteHolderExplorable.computeProbabilities (2 samples, 0.42%)</title><rect x="279.1" y="1219.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.1" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance.compute (2 samples, 0.42%)</title><rect x="279.1" y="1203.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="279.1" y="1187.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="279.1" y="1171.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="279.1" y="1155.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="279.1" y="1139.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="279.1" y="1123.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.1" y="1134.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="279.1" y="1107.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="282.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="279.1" y="1091.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.21%)</title><rect x="279.1" y="1075.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.21%)</title><rect x="279.1" y="1059.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.21%)</title><rect x="279.1" y="1043.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.21%)</title><rect x="279.1" y="1027.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.21%)</title><rect x="279.1" y="1011.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.21%)</title><rect x="279.1" y="995.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.1" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance$Scope.process (1 samples, 0.21%)</title><rect x="281.5" y="1187.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.5" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$SingletonNodeWorkList$1.next (1 samples, 0.21%)</title><rect x="281.5" y="1171.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.5" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$SingletonNodeWorkList$1.next (1 samples, 0.21%)</title><rect x="281.5" y="1155.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.5" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.remove (1 samples, 0.21%)</title><rect x="281.5" y="1139.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="284.5" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.removeFirst (1 samples, 0.21%)</title><rect x="281.5" y="1123.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="284.5" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.21%)</title><rect x="281.5" y="1107.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="284.5" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="281.5" y="1091.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="284.5" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="281.5" y="1075.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="284.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.moveForward (67 samples, 14.02%)</title><rect x="284.0" y="1251.0" width="165.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.0" y="1262.0">org/graalvm/compiler/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/GreedyInliningPolicy.isWorthInlining (12 samples, 2.51%)</title><rect x="284.0" y="1235.0" width="29.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="287.0" y="1246.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/AbstractInliningPolicy.determineInvokeProbability (1 samples, 0.21%)</title><rect x="284.0" y="1219.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.0" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph$1$1.hasNext (1 samples, 0.21%)</title><rect x="284.0" y="1203.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.hasNext (1 samples, 0.21%)</title><rect x="284.0" y="1187.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.findNext (1 samples, 0.21%)</title><rect x="284.0" y="1171.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/InliningPolicy$Decision.withReason (11 samples, 2.30%)</title><rect x="286.5" y="1219.0" width="27.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.5" y="1230.0">o..</text>
</g>
<g>
<title>java/lang/String.format (11 samples, 2.30%)</title><rect x="286.5" y="1203.0" width="27.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.5" y="1214.0">j..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="286.5" y="1187.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.5" y="1198.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="286.5" y="1171.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.5" y="1182.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.21%)</title><rect x="286.5" y="1155.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="289.5" y="1166.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.21%)</title><rect x="286.5" y="1139.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.5" y="1150.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.21%)</title><rect x="286.5" y="1123.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.5" y="1134.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.21%)</title><rect x="286.5" y="1107.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.5" y="1118.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.21%)</title><rect x="286.5" y="1091.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.5" y="1102.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.21%)</title><rect x="286.5" y="1075.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.5" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.21%)</title><rect x="286.5" y="1059.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.5" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="286.5" y="1043.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.5" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.21%)</title><rect x="286.5" y="1027.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.5" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.21%)</title><rect x="286.5" y="1011.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="289.5" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.21%)</title><rect x="286.5" y="995.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.5" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.21%)</title><rect x="286.5" y="979.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="289.5" y="990.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (1 samples, 0.21%)</title><rect x="286.5" y="963.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.5" y="974.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.tryAdvance (1 samples, 0.21%)</title><rect x="286.5" y="947.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$9$1.accept (1 samples, 0.21%)</title><rect x="286.5" y="931.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.5" y="942.0"></text>
</g>
<g>
<title>java/util/Formatter.format (9 samples, 1.88%)</title><rect x="289.0" y="1187.0" width="22.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.0" y="1198.0">j..</text>
</g>
<g>
<title>java/util/Formatter.format (9 samples, 1.88%)</title><rect x="289.0" y="1171.0" width="22.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="292.0" y="1182.0">j..</text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.21%)</title><rect x="289.0" y="1155.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.0" y="1166.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (6 samples, 1.26%)</title><rect x="291.4" y="1155.0" width="14.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="294.4" y="1166.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printFloat (6 samples, 1.26%)</title><rect x="291.4" y="1139.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.4" y="1150.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (6 samples, 1.26%)</title><rect x="291.4" y="1123.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.4" y="1134.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (6 samples, 1.26%)</title><rect x="291.4" y="1107.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.addZeros (1 samples, 0.21%)</title><rect x="291.4" y="1091.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="294.4" y="1102.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.trailingZeros (1 samples, 0.21%)</title><rect x="291.4" y="1075.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="294.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.21%)</title><rect x="291.4" y="1059.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.21%)</title><rect x="291.4" y="1043.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.21%)</title><rect x="291.4" y="1027.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.4" y="1038.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.localizedMagnitude (2 samples, 0.42%)</title><rect x="293.9" y="1091.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.9" y="1102.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 0.42%)</title><rect x="293.9" y="1075.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.9" y="1086.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.42%)</title><rect x="293.9" y="1059.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.9" y="1070.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.42%)</title><rect x="293.9" y="1043.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="296.9" y="1054.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (2 samples, 0.42%)</title><rect x="293.9" y="1027.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.9" y="1038.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (2 samples, 0.42%)</title><rect x="293.9" y="1011.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.21%)</title><rect x="293.9" y="995.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.9" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.21%)</title><rect x="296.4" y="995.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.4" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="296.4" y="979.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.21%)</title><rect x="296.4" y="963.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="299.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.21%)</title><rect x="296.4" y="947.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.4" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.21%)</title><rect x="296.4" y="931.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.21%)</title><rect x="296.4" y="915.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (1 samples, 0.21%)</title><rect x="296.4" y="899.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="299.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.tryAdvance (1 samples, 0.21%)</title><rect x="296.4" y="883.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/math/FormattedFloatingDecimal.valueOf (3 samples, 0.63%)</title><rect x="298.8" y="1091.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.getBinaryToASCIIConverter (3 samples, 0.63%)</title><rect x="298.8" y="1075.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="301.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer.dtoa (3 samples, 0.63%)</title><rect x="298.8" y="1059.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.8" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::lrem(long, long) (1 samples, 0.21%)</title><rect x="298.8" y="1043.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="301.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/math/FDBigInteger.quoRemIteration (1 samples, 0.21%)</title><rect x="301.3" y="1043.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/math/FDBigInteger.multAndCarryBy10 (1 samples, 0.21%)</title><rect x="301.3" y="1027.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer.developLongDigits (1 samples, 0.21%)</title><rect x="303.8" y="1043.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.8" y="1054.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (2 samples, 0.42%)</title><rect x="306.2" y="1155.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="309.2" y="1166.0"></text>
</g>
<g>
<title>java/util/Formatter.checkText (1 samples, 0.21%)</title><rect x="308.7" y="1139.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="311.7" y="1150.0"></text>
</g>
<g>
<title>java/util/Formatter.toString (1 samples, 0.21%)</title><rect x="311.2" y="1187.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.21%)</title><rect x="311.2" y="1171.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.21%)</title><rect x="311.2" y="1155.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="314.2" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.21%)</title><rect x="311.2" y="1139.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.processNextInvoke (34 samples, 7.11%)</title><rect x="313.6" y="1235.0" width="84.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.6" y="1246.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.populateInlinableElements (33 samples, 6.90%)</title><rect x="313.6" y="1219.0" width="81.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.6" y="1230.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/Inlineable.getInlineableElement (33 samples, 6.90%)</title><rect x="313.6" y="1203.0" width="81.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.6" y="1214.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.&lt;init&gt; (33 samples, 6.90%)</title><rect x="313.6" y="1187.0" width="81.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="316.6" y="1198.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.parseBytecodes (31 samples, 6.49%)</title><rect x="313.6" y="1171.0" width="76.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="316.6" y="1182.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (30 samples, 6.28%)</title><rect x="313.6" y="1155.0" width="74.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="316.6" y="1166.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (30 samples, 6.28%)</title><rect x="313.6" y="1139.0" width="74.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.6" y="1150.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.getEnclosingPhase (1 samples, 0.21%)</title><rect x="313.6" y="1123.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (27 samples, 5.65%)</title><rect x="316.1" y="1123.0" width="66.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.1" y="1134.0">org/gra..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (27 samples, 5.65%)</title><rect x="316.1" y="1107.0" width="66.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.1" y="1118.0">org/gra..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (27 samples, 5.65%)</title><rect x="316.1" y="1091.0" width="66.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.1" y="1102.0">org/gra..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (27 samples, 5.65%)</title><rect x="316.1" y="1075.0" width="66.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.1" y="1086.0">org/gra..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (27 samples, 5.65%)</title><rect x="316.1" y="1059.0" width="66.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.1" y="1070.0">org/gra..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (27 samples, 5.65%)</title><rect x="316.1" y="1043.0" width="66.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.1" y="1054.0">org/gra..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (27 samples, 5.65%)</title><rect x="316.1" y="1027.0" width="66.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.1" y="1038.0">org/gra..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (24 samples, 5.02%)</title><rect x="316.1" y="1011.0" width="59.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.1" y="1022.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (24 samples, 5.02%)</title><rect x="316.1" y="995.0" width="59.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.1" y="1006.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (24 samples, 5.02%)</title><rect x="316.1" y="979.0" width="59.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="319.1" y="990.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (24 samples, 5.02%)</title><rect x="316.1" y="963.0" width="59.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="319.1" y="974.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genArithmeticOp (1 samples, 0.21%)</title><rect x="318.6" y="947.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="321.6" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.append (1 samples, 0.21%)</title><rect x="318.6" y="931.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.6" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addOrUniqueWithInputs (1 samples, 0.21%)</title><rect x="318.6" y="915.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="321.6" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.21%)</title><rect x="318.6" y="899.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.6" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.21%)</title><rect x="318.6" y="883.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="321.6" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.inputs (1 samples, 0.21%)</title><rect x="318.6" y="867.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.6" y="878.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.21%)</title><rect x="318.6" y="851.0" width="2.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="321.6" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.21%)</title><rect x="321.0" y="947.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (1 samples, 0.21%)</title><rect x="321.0" y="931.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.0" y="942.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupField (1 samples, 0.21%)</title><rect x="321.0" y="915.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.0" y="926.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.getSignatureRefIndexAt (1 samples, 0.21%)</title><rect x="321.0" y="899.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="324.0" y="910.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.getNameAndTypeAt (1 samples, 0.21%)</title><rect x="321.0" y="883.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.0" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="321.0" y="867.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="324.0" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="321.0" y="851.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="324.0" y="862.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="321.0" y="835.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="324.0" y="846.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="321.0" y="819.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="324.0" y="830.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(methodHandle const&amp;, CompLevel, JavaThread*) (1 samples, 0.21%)</title><rect x="321.0" y="803.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="324.0" y="814.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, methodHandle const&amp;), methodHandle const&amp;, CompLevel, bool) (1 samples, 0.21%)</title><rect x="321.0" y="787.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="324.0" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfSame (1 samples, 0.21%)</title><rect x="323.5" y="947.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.5" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.21%)</title><rect x="323.5" y="931.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.5" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.21%)</title><rect x="323.5" y="915.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.5" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FixedGuardNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="323.5" y="899.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.5" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FixedGuardNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="323.5" y="883.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.5" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractFixedGuardNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="323.5" y="867.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.5" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractFixedGuardNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="323.5" y="851.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="326.5" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/DeoptimizingFixedWithNextNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="323.5" y="835.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.5" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FixedWithNextNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="323.5" y="819.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.5" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfZero (1 samples, 0.21%)</title><rect x="326.0" y="947.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="329.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendConstant (1 samples, 0.21%)</title><rect x="326.0" y="931.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="329.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/CoreProvidersDelegate.getMetaAccess (1 samples, 0.21%)</title><rect x="326.0" y="915.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeDynamic (1 samples, 0.21%)</title><rect x="328.5" y="947.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.5" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeDynamic (1 samples, 0.21%)</title><rect x="328.5" y="931.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.5" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.21%)</title><rect x="328.5" y="915.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.5" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="328.5" y="899.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.5" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="328.5" y="883.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.5" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="328.5" y="867.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.5" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="328.5" y="851.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.5" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="328.5" y="835.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.5" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="328.5" y="819.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.5" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="328.5" y="803.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.5" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="328.5" y="787.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.5" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="328.5" y="771.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.5" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="328.5" y="755.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.5" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.21%)</title><rect x="328.5" y="739.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.5" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="328.5" y="723.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="331.5" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryNodePluginForInvocation (1 samples, 0.21%)</title><rect x="328.5" y="707.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.5" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/MethodHandlePlugin.handleInvoke (1 samples, 0.21%)</title><rect x="328.5" y="691.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.5" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/nodes/MethodHandleNode.tryResolveTargetInvoke (1 samples, 0.21%)</title><rect x="328.5" y="675.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.5" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/nodes/MethodHandleNode.getInvokeBasicTarget (1 samples, 0.21%)</title><rect x="328.5" y="659.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.5" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/nodes/MethodHandleNode.getTargetInvokeNode (1 samples, 0.21%)</title><rect x="328.5" y="643.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="331.5" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/nodes/MethodHandleNode.createTargetInvokeNode (1 samples, 0.21%)</title><rect x="328.5" y="627.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.5" y="638.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="328.5" y="611.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="328.5" y="595.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="328.5" y="579.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="328.5" y="563.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="331.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="328.5" y="547.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.5" y="558.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="328.5" y="531.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="331.5" y="542.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="328.5" y="515.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="331.5" y="526.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="328.5" y="499.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.5" y="510.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="328.5" y="483.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="331.5" y="494.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="328.5" y="467.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="331.5" y="478.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="328.5" y="451.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="331.5" y="462.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="328.5" y="435.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="331.5" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.21%)</title><rect x="328.5" y="419.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="331.5" y="430.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.21%)</title><rect x="328.5" y="403.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="331.5" y="414.0"></text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 0.21%)</title><rect x="328.5" y="387.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="331.5" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::mark_dependent_nmethods(KlassDepChange&amp;) (1 samples, 0.21%)</title><rect x="328.5" y="371.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="331.5" y="382.0"></text>
</g>
<g>
<title>DependencyContext::mark_dependent_nmethods(DepChange&amp;) (1 samples, 0.21%)</title><rect x="328.5" y="355.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="331.5" y="366.0"></text>
</g>
<g>
<title>nmethod::check_dependency_on(DepChange&amp;) (1 samples, 0.21%)</title><rect x="328.5" y="339.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="331.5" y="350.0"></text>
</g>
<g>
<title>Dependencies::DepStream::next() (1 samples, 0.21%)</title><rect x="328.5" y="323.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="331.5" y="334.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeInterface (1 samples, 0.21%)</title><rect x="330.9" y="947.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.9" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeInterface (1 samples, 0.21%)</title><rect x="330.9" y="931.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.9" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="330.9" y="915.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.9" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (1 samples, 0.21%)</title><rect x="330.9" y="899.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.21%)</title><rect x="330.9" y="883.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="333.9" y="894.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="330.9" y="867.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.9" y="878.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="330.9" y="851.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="333.9" y="862.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.21%)</title><rect x="330.9" y="835.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="333.9" y="846.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.21%)</title><rect x="330.9" y="819.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.9" y="830.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.21%)</title><rect x="330.9" y="803.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="333.9" y="814.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.21%)</title><rect x="330.9" y="787.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="333.9" y="798.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.21%)</title><rect x="330.9" y="771.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.9" y="782.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (1 samples, 0.21%)</title><rect x="330.9" y="755.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.9" y="766.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (1 samples, 0.21%)</title><rect x="330.9" y="739.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.9" y="750.0"></text>
</g>
<g>
<title>sun/util/locale/LocaleUtils.isAlphaNumericString (1 samples, 0.21%)</title><rect x="330.9" y="723.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.21%)</title><rect x="330.9" y="707.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.21%)</title><rect x="330.9" y="691.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.9" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (4 samples, 0.84%)</title><rect x="333.4" y="947.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="336.4" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (3 samples, 0.63%)</title><rect x="333.4" y="931.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.4" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (3 samples, 0.63%)</title><rect x="333.4" y="915.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.4" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createNonInlinedInvoke (1 samples, 0.21%)</title><rect x="333.4" y="899.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="336.4" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forDeclaredType (1 samples, 0.21%)</title><rect x="333.4" y="883.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.4" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.create (1 samples, 0.21%)</title><rect x="333.4" y="867.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="336.4" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.createTrusted (1 samples, 0.21%)</title><rect x="333.4" y="851.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="336.4" y="862.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/Assumptions$AssumptionResult.canRecordTo (1 samples, 0.21%)</title><rect x="333.4" y="835.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="336.4" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.21%)</title><rect x="335.9" y="899.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.9" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/MethodSubstitutionPlugin.execute (1 samples, 0.21%)</title><rect x="335.9" y="883.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.9" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.intrinsify (1 samples, 0.21%)</title><rect x="335.9" y="867.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.9" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="335.9" y="851.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.9" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="335.9" y="835.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.9" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="335.9" y="819.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="338.9" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="335.9" y="803.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.9" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="335.9" y="787.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.9" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="335.9" y="771.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="338.9" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="335.9" y="755.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.9" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="335.9" y="739.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.9" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="335.9" y="723.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.9" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="335.9" y="707.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.9" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="335.9" y="691.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.9" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (1 samples, 0.21%)</title><rect x="335.9" y="675.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.21%)</title><rect x="335.9" y="659.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.9" y="670.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="335.9" y="643.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.9" y="654.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="335.9" y="627.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.9" y="638.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.21%)</title><rect x="335.9" y="611.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.9" y="622.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.21%)</title><rect x="335.9" y="595.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.9" y="606.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.21%)</title><rect x="335.9" y="579.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="338.9" y="590.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.21%)</title><rect x="335.9" y="563.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="338.9" y="574.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.21%)</title><rect x="335.9" y="547.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="338.9" y="558.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.21%)</title><rect x="335.9" y="531.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.9" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (1 samples, 0.21%)</title><rect x="338.3" y="899.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.21%)</title><rect x="338.3" y="883.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="341.3" y="894.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="338.3" y="867.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.3" y="878.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="338.3" y="851.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.3" y="862.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.21%)</title><rect x="338.3" y="835.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.3" y="846.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.21%)</title><rect x="338.3" y="819.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="341.3" y="830.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.21%)</title><rect x="338.3" y="803.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="341.3" y="814.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.21%)</title><rect x="338.3" y="787.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.3" y="798.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.21%)</title><rect x="338.3" y="771.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="341.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.21%)</title><rect x="338.3" y="755.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="341.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.21%)</title><rect x="338.3" y="739.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.3" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethod (1 samples, 0.21%)</title><rect x="340.8" y="931.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="343.8" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethodInPool (1 samples, 0.21%)</title><rect x="340.8" y="915.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.8" y="926.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupMethod (1 samples, 0.21%)</title><rect x="340.8" y="899.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="343.8" y="910.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.lookupMethodInPool (1 samples, 0.21%)</title><rect x="340.8" y="883.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.8" y="894.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.fromMetaspace (1 samples, 0.21%)</title><rect x="340.8" y="867.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="343.8" y="878.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getHolder (1 samples, 0.21%)</title><rect x="340.8" y="851.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.8" y="862.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getResolvedJavaType (1 samples, 0.21%)</title><rect x="340.8" y="835.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.8" y="846.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getResolvedJavaType0 (1 samples, 0.21%)</title><rect x="340.8" y="819.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.8" y="830.0"></text>
</g>
<g>
<title>c2v_getResolvedJavaType0(JNIEnv_*, _jobject*, _jobject*, long, unsigned char) (1 samples, 0.21%)</title><rect x="340.8" y="803.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="343.8" y="814.0"></text>
</g>
<g>
<title>JVMCIEnv::get_jvmci_type(JVMCIKlassHandle const&amp;, JVMCIEnv*) (1 samples, 0.21%)</title><rect x="340.8" y="787.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="343.8" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.21%)</title><rect x="340.8" y="771.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="343.8" y="782.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.21%)</title><rect x="340.8" y="755.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="343.8" y="766.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_static_method(LinkInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="340.8" y="739.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="343.8" y="750.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="340.8" y="723.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="343.8" y="734.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.21%)</title><rect x="340.8" y="707.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="343.8" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.21%)</title><rect x="340.8" y="691.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="343.8" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (4 samples, 0.84%)</title><rect x="343.3" y="947.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.3" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (3 samples, 0.63%)</title><rect x="343.3" y="931.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.3" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (3 samples, 0.63%)</title><rect x="343.3" y="915.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.3" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (3 samples, 0.63%)</title><rect x="343.3" y="899.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.3" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="343.3" y="883.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="346.3" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="343.3" y="867.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.3" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="343.3" y="851.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.3" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="343.3" y="835.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.3" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="343.3" y="819.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="346.3" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="343.3" y="803.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.3" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="343.3" y="787.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.3" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.loadLocalObject (1 samples, 0.21%)</title><rect x="343.3" y="771.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="346.3" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.21%)</title><rect x="343.3" y="755.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.3" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.21%)</title><rect x="343.3" y="739.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="346.3" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.21%)</title><rect x="343.3" y="723.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.3" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/options/OptionKey.getValue (1 samples, 0.21%)</title><rect x="343.3" y="707.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.3" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/options/OptionValues.get (1 samples, 0.21%)</title><rect x="343.3" y="691.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.3" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/options/OptionValues.get (1 samples, 0.21%)</title><rect x="343.3" y="675.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="346.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.21%)</title><rect x="343.3" y="659.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.3" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.21%)</title><rect x="345.7" y="883.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.7" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/MethodSubstitutionPlugin.execute (1 samples, 0.21%)</title><rect x="345.7" y="867.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.7" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.intrinsify (1 samples, 0.21%)</title><rect x="345.7" y="851.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.7" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="345.7" y="835.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.7" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="345.7" y="819.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.7" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="345.7" y="803.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.7" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="345.7" y="787.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.7" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="345.7" y="771.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.7" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="345.7" y="755.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.7" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="345.7" y="739.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.7" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.21%)</title><rect x="345.7" y="723.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.7" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.21%)</title><rect x="345.7" y="707.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.7" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="345.7" y="691.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.7" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryNodePluginForInvocation (1 samples, 0.21%)</title><rect x="345.7" y="675.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.7" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleInvoke (1 samples, 0.21%)</title><rect x="345.7" y="659.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.7" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotWordOperationPlugin.handleInvoke (1 samples, 0.21%)</title><rect x="345.7" y="643.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.7" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BridgeMethodUtils.getAnnotation (1 samples, 0.21%)</title><rect x="345.7" y="627.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.7" y="638.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getAnnotation (1 samples, 0.21%)</title><rect x="345.7" y="611.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.7" y="622.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJDKReflection.getMethodAnnotation (1 samples, 0.21%)</title><rect x="345.7" y="595.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.7" y="606.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.21%)</title><rect x="345.7" y="579.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="348.7" y="590.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.21%)</title><rect x="345.7" y="563.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.7" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.21%)</title><rect x="345.7" y="547.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="348.7" y="558.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.21%)</title><rect x="345.7" y="531.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.7" y="542.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.21%)</title><rect x="345.7" y="515.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.7" y="526.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.21%)</title><rect x="345.7" y="499.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.7" y="510.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseMemberValue (1 samples, 0.21%)</title><rect x="345.7" y="483.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.7" y="494.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseEnumValue (1 samples, 0.21%)</title><rect x="345.7" y="467.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.7" y="478.0"></text>
</g>
<g>
<title>java/lang/Enum.valueOf (1 samples, 0.21%)</title><rect x="345.7" y="451.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.7" y="462.0"></text>
</g>
<g>
<title>java/lang/Class.enumConstantDirectory (1 samples, 0.21%)</title><rect x="345.7" y="435.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.7" y="446.0"></text>
</g>
<g>
<title>java/lang/Class.getEnumConstantsShared (1 samples, 0.21%)</title><rect x="345.7" y="419.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.7" y="430.0"></text>
</g>
<g>
<title>java/lang/Class.getMethod (1 samples, 0.21%)</title><rect x="345.7" y="403.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="348.7" y="414.0"></text>
</g>
<g>
<title>java/lang/Class.getMethod0 (1 samples, 0.21%)</title><rect x="345.7" y="387.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.7" y="398.0"></text>
</g>
<g>
<title>java/lang/Class.getMethodsRecursive (1 samples, 0.21%)</title><rect x="345.7" y="371.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="348.7" y="382.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredMethods (1 samples, 0.21%)</title><rect x="345.7" y="355.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.7" y="366.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods0 (1 samples, 0.21%)</title><rect x="345.7" y="339.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.7" y="350.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredMethods (1 samples, 0.21%)</title><rect x="345.7" y="323.0" width="2.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="348.7" y="334.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (1 samples, 0.21%)</title><rect x="345.7" y="307.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="348.7" y="318.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.21%)</title><rect x="345.7" y="291.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="348.7" y="302.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.21%)</title><rect x="345.7" y="275.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="348.7" y="286.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.21%)</title><rect x="345.7" y="259.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="348.7" y="270.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.21%)</title><rect x="345.7" y="243.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="348.7" y="254.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="345.7" y="227.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="348.7" y="238.0"></text>
</g>
<g>
<title>ClassVerifier::verify_anewarray(unsigned short, unsigned short, constantPoolHandle const&amp;, StackMapFrame*, Thread*) (1 samples, 0.21%)</title><rect x="345.7" y="211.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="348.7" y="222.0"></text>
</g>
<g>
<title>ClassVerifier::create_temporary_symbol(char const*, int) (1 samples, 0.21%)</title><rect x="345.7" y="195.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="348.7" y="206.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (1 samples, 0.21%)</title><rect x="348.2" y="883.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.21%)</title><rect x="348.2" y="867.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.2" y="878.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="348.2" y="851.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="351.2" y="862.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="348.2" y="835.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.2" y="846.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.21%)</title><rect x="348.2" y="819.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="351.2" y="830.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.21%)</title><rect x="348.2" y="803.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.2" y="814.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.21%)</title><rect x="348.2" y="787.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="351.2" y="798.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.21%)</title><rect x="348.2" y="771.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.2" y="782.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.21%)</title><rect x="348.2" y="755.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.2" y="766.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.21%)</title><rect x="348.2" y="739.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.21%)</title><rect x="348.2" y="723.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.2" y="734.0"></text>
</g>
<g>
<title>java/util/stream/FindOps.makeInt (1 samples, 0.21%)</title><rect x="348.2" y="707.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.2" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethod (1 samples, 0.21%)</title><rect x="350.7" y="931.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.7" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethodInPool (1 samples, 0.21%)</title><rect x="350.7" y="915.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.7" y="926.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupMethod (1 samples, 0.21%)</title><rect x="350.7" y="899.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.7" y="910.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="350.7" y="883.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="353.7" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="350.7" y="867.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="353.7" y="878.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="350.7" y="851.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="353.7" y="862.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.21%)</title><rect x="350.7" y="835.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="353.7" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.21%)</title><rect x="350.7" y="819.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="353.7" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.21%)</title><rect x="350.7" y="803.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="353.7" y="814.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.21%)</title><rect x="350.7" y="787.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="353.7" y="798.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.21%)</title><rect x="350.7" y="771.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="353.7" y="782.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.21%)</title><rect x="350.7" y="755.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="353.7" y="766.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="350.7" y="739.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="353.7" y="750.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="350.7" y="723.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="353.7" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genLoadIndexed (2 samples, 0.42%)</title><rect x="353.1" y="947.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.1" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.maybeEmitExplicitBoundsCheck (1 samples, 0.21%)</title><rect x="353.1" y="931.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.1" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.maybeEmitExplicitNullCheck (1 samples, 0.21%)</title><rect x="355.6" y="931.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="358.6" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.needsExplicitNullCheckException (1 samples, 0.21%)</title><rect x="355.6" y="915.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="358.6" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.needsExplicitException (1 samples, 0.21%)</title><rect x="355.6" y="899.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.6" y="910.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.getExceptionSeen (1 samples, 0.21%)</title><rect x="355.6" y="883.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.6" y="894.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.findBCI (1 samples, 0.21%)</title><rect x="355.6" y="867.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.6" y="878.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMethodDataAccessor.getSize (1 samples, 0.21%)</title><rect x="355.6" y="851.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="358.6" y="862.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.methodDataProfileDataSize (1 samples, 0.21%)</title><rect x="355.6" y="835.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="358.6" y="846.0"></text>
</g>
<g>
<title>c2v_methodDataProfileDataSize(JNIEnv_*, _jobject*, long, int) (1 samples, 0.21%)</title><rect x="355.6" y="819.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="358.6" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genReturn (1 samples, 0.21%)</title><rect x="358.1" y="947.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.1" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.beforeReturn (1 samples, 0.21%)</title><rect x="358.1" y="931.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="361.1" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.synchronizedEpilogue (1 samples, 0.21%)</title><rect x="358.1" y="915.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.1" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.openNodeContext (1 samples, 0.21%)</title><rect x="358.1" y="899.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.1" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.createBytecodePosition (1 samples, 0.21%)</title><rect x="358.1" y="883.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.1" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.create (1 samples, 0.21%)</title><rect x="358.1" y="867.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="361.1" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeSourcePosition.&lt;init&gt; (1 samples, 0.21%)</title><rect x="358.1" y="851.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.1" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeSourcePosition.&lt;init&gt; (1 samples, 0.21%)</title><rect x="358.1" y="835.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.1" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeSourcePosition.&lt;init&gt; (1 samples, 0.21%)</title><rect x="358.1" y="819.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="361.1" y="830.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/BytecodePosition.&lt;init&gt; (1 samples, 0.21%)</title><rect x="358.1" y="803.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.1" y="814.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getCodeSize (1 samples, 0.21%)</title><rect x="358.1" y="787.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.1" y="798.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotVMConfig.config (1 samples, 0.21%)</title><rect x="358.1" y="771.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.1" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genStoreIndexed (1 samples, 0.21%)</title><rect x="360.5" y="947.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="363.5" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genStoreIndexed (1 samples, 0.21%)</title><rect x="360.5" y="931.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.5" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/StoreIndexedNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="360.5" y="915.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.5" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/AccessIndexedNode.&lt;init&gt; (1 samples, 0.21%)</title><rect x="360.5" y="899.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.5" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.loadLocalObject (5 samples, 1.05%)</title><rect x="363.0" y="947.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (5 samples, 1.05%)</title><rect x="363.0" y="931.0" width="12.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (2 samples, 0.42%)</title><rect x="363.0" y="915.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="366.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (2 samples, 0.42%)</title><rect x="363.0" y="899.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.0" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genLoadField (2 samples, 0.42%)</title><rect x="363.0" y="883.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.0" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/GraphBuilderConfiguration$Plugins.getOverridingStamp (1 samples, 0.21%)</title><rect x="363.0" y="867.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="366.0" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.create (1 samples, 0.21%)</title><rect x="365.5" y="867.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="368.5" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forDeclaredType (1 samples, 0.21%)</title><rect x="365.5" y="851.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.5" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.object (1 samples, 0.21%)</title><rect x="365.5" y="835.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="368.5" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="365.5" y="819.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="368.5" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="365.5" y="803.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="368.5" y="814.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="365.5" y="787.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="368.5" y="798.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.21%)</title><rect x="365.5" y="771.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="368.5" y="782.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.21%)</title><rect x="365.5" y="755.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="368.5" y="766.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.21%)</title><rect x="365.5" y="739.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="368.5" y="750.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.21%)</title><rect x="365.5" y="723.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="368.5" y="734.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.21%)</title><rect x="365.5" y="707.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="368.5" y="718.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.21%)</title><rect x="365.5" y="691.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="368.5" y="702.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="365.5" y="675.0" width="2.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="368.5" y="686.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="365.5" y="659.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="368.5" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (3 samples, 0.63%)</title><rect x="367.9" y="915.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.9" y="926.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupField (2 samples, 0.42%)</title><rect x="370.4" y="899.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="373.4" y="910.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.getKlassRefIndexAt (1 samples, 0.21%)</title><rect x="370.4" y="883.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="373.4" y="894.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.lookupKlassRefIndexInPool (1 samples, 0.21%)</title><rect x="370.4" y="867.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="373.4" y="878.0"></text>
</g>
<g>
<title>c2v_lookupKlassRefIndexInPool(JNIEnv_*, _jobject*, _jobject*, int) (1 samples, 0.21%)</title><rect x="370.4" y="851.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="373.4" y="862.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.createField (1 samples, 0.21%)</title><rect x="372.9" y="883.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="375.9" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.cleanupFinalGraph (1 samples, 0.21%)</title><rect x="375.4" y="1011.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="378.4" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.normalizeLoops (1 samples, 0.21%)</title><rect x="375.4" y="995.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="378.4" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.normalizeLoopBegin (1 samples, 0.21%)</title><rect x="375.4" y="979.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.4" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.phis (1 samples, 0.21%)</title><rect x="375.4" y="963.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="378.4" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.21%)</title><rect x="375.4" y="947.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="378.4" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.21%)</title><rect x="375.4" y="931.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.21%)</title><rect x="375.4" y="915.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.21%)</title><rect x="375.4" y="899.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="378.4" y="910.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance(JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.21%)</title><rect x="375.4" y="883.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="378.4" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(oopDesc*, Thread*) (1 samples, 0.21%)</title><rect x="375.4" y="867.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="378.4" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::should_be_initialized() const (1 samples, 0.21%)</title><rect x="375.4" y="851.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="378.4" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.initializeForMethodStart (2 samples, 0.42%)</title><rect x="377.8" y="1011.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.8" y="1022.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotSignature.getParameterType (1 samples, 0.21%)</title><rect x="377.8" y="995.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.8" y="1006.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.lookupType (1 samples, 0.21%)</title><rect x="377.8" y="979.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.8" y="990.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.lookupTypeInternal (1 samples, 0.21%)</title><rect x="377.8" y="963.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="380.8" y="974.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.lookupType (1 samples, 0.21%)</title><rect x="377.8" y="947.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.8" y="958.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.fromMetaspace (1 samples, 0.21%)</title><rect x="377.8" y="931.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="380.8" y="942.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.fromMetaspace (1 samples, 0.21%)</title><rect x="377.8" y="915.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.8" y="926.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (1 samples, 0.21%)</title><rect x="377.8" y="899.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.8" y="910.0"></text>
</g>
<g>
<title>java/lang/Long.&lt;init&gt; (1 samples, 0.21%)</title><rect x="377.8" y="883.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.8" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forDeclaredType (1 samples, 0.21%)</title><rect x="380.3" y="995.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.3" y="1006.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getSingleImplementor (1 samples, 0.21%)</title><rect x="380.3" y="979.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.3" y="990.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getSingleImplementor (1 samples, 0.21%)</title><rect x="380.3" y="963.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.3" y="974.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getImplementor (1 samples, 0.21%)</title><rect x="380.3" y="947.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.3" y="958.0"></text>
</g>
<g>
<title>c2v_getImplementor(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.21%)</title><rect x="380.3" y="931.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="383.3" y="942.0"></text>
</g>
<g>
<title>Mutex::lock() (1 samples, 0.21%)</title><rect x="380.3" y="915.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="383.3" y="926.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.21%)</title><rect x="380.3" y="899.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="383.3" y="910.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="380.3" y="883.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="383.3" y="894.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="380.3" y="867.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="383.3" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (2 samples, 0.42%)</title><rect x="382.8" y="1123.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (2 samples, 0.42%)</title><rect x="382.8" y="1107.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="385.8" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (2 samples, 0.42%)</title><rect x="382.8" y="1091.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="385.8" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (2 samples, 0.42%)</title><rect x="382.8" y="1075.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.8" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (2 samples, 0.42%)</title><rect x="382.8" y="1059.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="385.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (2 samples, 0.42%)</title><rect x="382.8" y="1043.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="385.8" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (1 samples, 0.21%)</title><rect x="382.8" y="1027.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="385.8" y="1038.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.21%)</title><rect x="382.8" y="1011.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="385.8" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.simplify (1 samples, 0.21%)</title><rect x="385.2" y="1027.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.2" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.reduceTrivialMerge (1 samples, 0.21%)</title><rect x="385.2" y="1011.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.2" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="387.7" y="1155.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="390.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="387.7" y="1139.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="387.7" y="1123.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="390.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.specializeGraphToArguments (2 samples, 0.42%)</title><rect x="390.2" y="1171.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="393.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (1 samples, 0.21%)</title><rect x="390.2" y="1155.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (1 samples, 0.21%)</title><rect x="390.2" y="1139.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="390.2" y="1123.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="390.2" y="1107.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.2" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.21%)</title><rect x="390.2" y="1091.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="393.2" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (1 samples, 0.21%)</title><rect x="390.2" y="1075.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.2" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (1 samples, 0.21%)</title><rect x="390.2" y="1059.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (1 samples, 0.21%)</title><rect x="390.2" y="1043.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.2" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (1 samples, 0.21%)</title><rect x="390.2" y="1027.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="393.2" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (1 samples, 0.21%)</title><rect x="390.2" y="1011.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="393.2" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerBelowNode.canonical (1 samples, 0.21%)</title><rect x="390.2" y="995.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.2" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerBelowNode.canonical (1 samples, 0.21%)</title><rect x="390.2" y="979.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="393.2" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (1 samples, 0.21%)</title><rect x="390.2" y="963.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="393.2" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/CompareNode$CompareOp.canonical (1 samples, 0.21%)</title><rect x="390.2" y="947.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="393.2" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/CompareNode.tryConstantFold (1 samples, 0.21%)</title><rect x="390.2" y="931.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.2" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.replaceParamsWithMoreInformativeArguments (1 samples, 0.21%)</title><rect x="392.6" y="1155.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.trackParameterUsages (1 samples, 0.21%)</title><rect x="392.6" y="1139.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterable.snapshotTo (1 samples, 0.21%)</title><rect x="392.6" y="1123.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeUsageIterator.next (1 samples, 0.21%)</title><rect x="392.6" y="1107.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.6" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.getInlineInfo (1 samples, 0.21%)</title><rect x="395.1" y="1219.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.1" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.checkInvokeConditions (1 samples, 0.21%)</title><rect x="395.1" y="1203.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.1" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.tryToInline (21 samples, 4.39%)</title><rect x="397.6" y="1235.0" width="51.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="400.6" y="1246.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/GreedyInliningPolicy.isWorthInlining (9 samples, 1.88%)</title><rect x="397.6" y="1219.0" width="22.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.6" y="1230.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/InliningPolicy$Decision.withReason (9 samples, 1.88%)</title><rect x="397.6" y="1203.0" width="22.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.6" y="1214.0">o..</text>
</g>
<g>
<title>java/lang/String.format (9 samples, 1.88%)</title><rect x="397.6" y="1187.0" width="22.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.6" y="1198.0">j..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="397.6" y="1171.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.6" y="1182.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.21%)</title><rect x="397.6" y="1155.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.6" y="1166.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.21%)</title><rect x="397.6" y="1139.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="400.6" y="1150.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.21%)</title><rect x="397.6" y="1123.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.6" y="1134.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.21%)</title><rect x="397.6" y="1107.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.6" y="1118.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.21%)</title><rect x="397.6" y="1091.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.6" y="1102.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.21%)</title><rect x="397.6" y="1075.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.6" y="1086.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.21%)</title><rect x="397.6" y="1059.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="400.6" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.21%)</title><rect x="397.6" y="1043.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.6" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.21%)</title><rect x="397.6" y="1027.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.6" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.21%)</title><rect x="397.6" y="1011.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="400.6" y="1022.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 1.67%)</title><rect x="400.0" y="1171.0" width="19.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.0" y="1182.0"></text>
</g>
<g>
<title>java/util/Formatter.format (8 samples, 1.67%)</title><rect x="400.0" y="1155.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="403.0" y="1166.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.21%)</title><rect x="400.0" y="1139.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="403.0" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.21%)</title><rect x="400.0" y="1123.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="403.0" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.21%)</title><rect x="400.0" y="1107.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="403.0" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper_internal(methodHandle, frame const&amp;, CompiledMethod*, bool, bool, Handle, CallInfo&amp;, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="400.0" y="1091.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="403.0" y="1102.0"></text>
</g>
<g>
<title>CompiledIC::CompiledIC(CompiledMethod*, NativeCall*) (1 samples, 0.21%)</title><rect x="400.0" y="1075.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="403.0" y="1086.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (6 samples, 1.26%)</title><rect x="402.5" y="1139.0" width="14.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.5" y="1150.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printFloat (6 samples, 1.26%)</title><rect x="402.5" y="1123.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.5" y="1134.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (6 samples, 1.26%)</title><rect x="402.5" y="1107.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.5" y="1118.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.appendJustified (1 samples, 0.21%)</title><rect x="402.5" y="1091.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="405.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.21%)</title><rect x="402.5" y="1075.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.21%)</title><rect x="402.5" y="1059.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="405.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.21%)</title><rect x="402.5" y="1043.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.21%)</title><rect x="402.5" y="1027.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="405.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.21%)</title><rect x="402.5" y="1011.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="405.5" y="1022.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.21%)</title><rect x="402.5" y="995.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="405.5" y="1006.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (5 samples, 1.05%)</title><rect x="405.0" y="1091.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="408.0" y="1102.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.localizedMagnitude (4 samples, 0.84%)</title><rect x="405.0" y="1075.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.0" y="1086.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (4 samples, 0.84%)</title><rect x="405.0" y="1059.0" width="9.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="408.0" y="1070.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (4 samples, 0.84%)</title><rect x="405.0" y="1043.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="408.0" y="1054.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (4 samples, 0.84%)</title><rect x="405.0" y="1027.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="408.0" y="1038.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (4 samples, 0.84%)</title><rect x="405.0" y="1011.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.0" y="1022.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (3 samples, 0.63%)</title><rect x="405.0" y="995.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="408.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.21%)</title><rect x="405.0" y="979.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.0" y="990.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (1 samples, 0.21%)</title><rect x="405.0" y="963.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="408.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$Head.&lt;init&gt; (1 samples, 0.21%)</title><rect x="405.0" y="947.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.0" y="958.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (2 samples, 0.42%)</title><rect x="407.4" y="979.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.42%)</title><rect x="407.4" y="963.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.42%)</title><rect x="407.4" y="947.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.4" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.42%)</title><rect x="407.4" y="931.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="410.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.42%)</title><rect x="407.4" y="915.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="410.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.42%)</title><rect x="407.4" y="899.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="410.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (2 samples, 0.42%)</title><rect x="407.4" y="883.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.tryAdvance (1 samples, 0.21%)</title><rect x="407.4" y="867.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.adapt (1 samples, 0.21%)</title><rect x="409.9" y="867.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.9" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="409.9" y="851.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="412.9" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="409.9" y="835.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="412.9" y="846.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="409.9" y="819.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="412.9" y="830.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="409.9" y="803.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="412.9" y="814.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(methodHandle const&amp;, CompLevel, JavaThread*) (1 samples, 0.21%)</title><rect x="409.9" y="787.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="412.9" y="798.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, methodHandle const&amp;), methodHandle const&amp;, CompLevel, bool) (1 samples, 0.21%)</title><rect x="409.9" y="771.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="412.9" y="782.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.21%)</title><rect x="409.9" y="755.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="412.9" y="766.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (1 samples, 0.21%)</title><rect x="412.4" y="995.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.4" y="1006.0"></text>
</g>
<g>
<title>java/util/Locale.hasExtensions (1 samples, 0.21%)</title><rect x="412.4" y="979.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.4" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="412.4" y="963.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="415.4" y="974.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="412.4" y="947.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="415.4" y="958.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="412.4" y="931.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="415.4" y="942.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="412.4" y="915.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="415.4" y="926.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compiler_count(CompLevel) (1 samples, 0.21%)</title><rect x="412.4" y="899.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="415.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/math/FormattedFloatingDecimal.valueOf (1 samples, 0.21%)</title><rect x="414.9" y="1075.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/math/FormattedFloatingDecimal.&lt;init&gt; (1 samples, 0.21%)</title><rect x="414.9" y="1059.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (1 samples, 0.21%)</title><rect x="417.3" y="1139.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.3" y="1150.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (1 samples, 0.21%)</title><rect x="417.3" y="1123.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="420.3" y="1134.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (1 samples, 0.21%)</title><rect x="417.3" y="1107.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.3" y="1118.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (1 samples, 0.21%)</title><rect x="417.3" y="1091.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.3" y="1102.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.21%)</title><rect x="417.3" y="1075.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="420.3" y="1086.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.21%)</title><rect x="417.3" y="1059.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.3" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.doInline (12 samples, 2.51%)</title><rect x="419.8" y="1219.0" width="29.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.8" y="1230.0">or..</text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicSet.addAll (1 samples, 0.21%)</title><rect x="419.8" y="1203.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="422.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicSet.addAll (1 samples, 0.21%)</title><rect x="419.8" y="1187.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (4 samples, 0.84%)</title><rect x="422.3" y="1203.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.3" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (4 samples, 0.84%)</title><rect x="422.3" y="1187.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.63%)</title><rect x="422.3" y="1171.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.63%)</title><rect x="422.3" y="1155.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (3 samples, 0.63%)</title><rect x="422.3" y="1139.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (3 samples, 0.63%)</title><rect x="422.3" y="1123.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList.addAll (2 samples, 0.42%)</title><rect x="422.3" y="1107.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.add (2 samples, 0.42%)</title><rect x="422.3" y="1091.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="425.3" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.21%)</title><rect x="422.3" y="1075.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.3" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.21%)</title><rect x="422.3" y="1059.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.3" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.inflateToBitMap (1 samples, 0.21%)</title><rect x="424.7" y="1075.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (1 samples, 0.21%)</title><rect x="427.2" y="1107.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.2" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (1 samples, 0.21%)</title><rect x="427.2" y="1091.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.2" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.getNodeClass (1 samples, 0.21%)</title><rect x="427.2" y="1075.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.2" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.&lt;init&gt; (1 samples, 0.21%)</title><rect x="429.7" y="1171.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.&lt;init&gt; (1 samples, 0.21%)</title><rect x="429.7" y="1155.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.&lt;init&gt; (1 samples, 0.21%)</title><rect x="429.7" y="1139.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.&lt;init&gt; (1 samples, 0.21%)</title><rect x="429.7" y="1123.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.getBasePhaseStatistics (1 samples, 0.21%)</title><rect x="429.7" y="1107.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassValue.get (1 samples, 0.21%)</title><rect x="429.7" y="1091.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassValue.match (1 samples, 0.21%)</title><rect x="429.7" y="1075.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/ExactInlineInfo.inline (4 samples, 0.84%)</title><rect x="432.1" y="1203.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.1" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.inline (4 samples, 0.84%)</title><rect x="432.1" y="1187.0" width="9.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (4 samples, 0.84%)</title><rect x="432.1" y="1171.0" width="9.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (4 samples, 0.84%)</title><rect x="432.1" y="1155.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.1" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inline (4 samples, 0.84%)</title><rect x="432.1" y="1139.0" width="9.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (2 samples, 0.42%)</title><rect x="432.1" y="1123.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.1" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.getDebug (1 samples, 0.21%)</title><rect x="432.1" y="1107.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.1" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.21%)</title><rect x="434.6" y="1107.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.6" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateInputSuccInPlace (1 samples, 0.21%)</title><rect x="434.6" y="1091.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateEdgesInPlace (1 samples, 0.21%)</title><rect x="434.6" y="1075.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.initializeList (1 samples, 0.21%)</title><rect x="434.6" y="1059.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="437.6" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.verifyUpdateValid (1 samples, 0.21%)</title><rect x="434.6" y="1043.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.6" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.finishInlining (1 samples, 0.21%)</title><rect x="437.1" y="1123.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.1" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtUsages (1 samples, 0.21%)</title><rect x="437.1" y="1107.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.1" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtAllUsages (1 samples, 0.21%)</title><rect x="437.1" y="1091.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="440.1" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtUsage (1 samples, 0.21%)</title><rect x="437.1" y="1075.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.1" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.replaceFirstInput (1 samples, 0.21%)</title><rect x="437.1" y="1059.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.1" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.replaceFirstEdge (1 samples, 0.21%)</title><rect x="437.1" y="1043.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="440.1" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.21%)</title><rect x="437.1" y="1027.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.1" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.nonNullReceiver (1 samples, 0.21%)</title><rect x="439.5" y="1123.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="442.5" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.join (1 samples, 0.21%)</title><rect x="439.5" y="1107.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="442.5" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.join0 (1 samples, 0.21%)</title><rect x="439.5" y="1091.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.5" y="1102.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.isAssignableFrom (1 samples, 0.21%)</title><rect x="439.5" y="1075.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="442.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/MultiTypeGuardInlineInfo.inline (1 samples, 0.21%)</title><rect x="442.0" y="1203.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/MultiTypeGuardInlineInfo.inlineMultipleMethods (1 samples, 0.21%)</title><rect x="442.0" y="1187.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicSet.addAll (1 samples, 0.21%)</title><rect x="442.0" y="1171.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicSet.addAll (1 samples, 0.21%)</title><rect x="442.0" y="1155.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.21%)</title><rect x="442.0" y="1139.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.21%)</title><rect x="442.0" y="1123.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.21%)</title><rect x="442.0" y="1107.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.21%)</title><rect x="442.0" y="1091.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="445.0" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/TypeGuardInlineInfo.inline (2 samples, 0.42%)</title><rect x="444.5" y="1203.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.inline (2 samples, 0.42%)</title><rect x="444.5" y="1187.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="447.5" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (2 samples, 0.42%)</title><rect x="444.5" y="1171.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="447.5" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (2 samples, 0.42%)</title><rect x="444.5" y="1155.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="447.5" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inline (2 samples, 0.42%)</title><rect x="444.5" y="1139.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.5" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.21%)</title><rect x="444.5" y="1123.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.5" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.21%)</title><rect x="444.5" y="1107.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="447.5" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (1 samples, 0.21%)</title><rect x="444.5" y="1091.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (1 samples, 0.21%)</title><rect x="444.5" y="1075.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.copyOrClearEdgesForClone (1 samples, 0.21%)</title><rect x="444.5" y="1059.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="447.5" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.copy (1 samples, 0.21%)</title><rect x="444.5" y="1043.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="447.5" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeInputList.&lt;init&gt; (1 samples, 0.21%)</title><rect x="444.5" y="1027.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="447.5" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeList.&lt;init&gt; (1 samples, 0.21%)</title><rect x="444.5" y="1011.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="447.5" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.processFrameStates (1 samples, 0.21%)</title><rect x="446.9" y="1123.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeMap.replaceAll (1 samples, 0.21%)</title><rect x="446.9" y="1107.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil$$Lambda$100.0x0000000800d6e5d0.apply (1 samples, 0.21%)</title><rect x="446.9" y="1091.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="449.9" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.lambda$processFrameStates$1 (1 samples, 0.21%)</title><rect x="446.9" y="1075.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.containsKey (1 samples, 0.21%)</title><rect x="446.9" y="1059.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.21%)</title><rect x="446.9" y="1043.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.9" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EarlyReadEliminationPhase.run (1 samples, 0.21%)</title><rect x="449.4" y="1283.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="452.4" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EarlyReadEliminationPhase.run (1 samples, 0.21%)</title><rect x="449.4" y="1267.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="452.4" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsPhase.runAnalysis (1 samples, 0.21%)</title><rect x="449.4" y="1251.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.4" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (1 samples, 0.21%)</title><rect x="449.4" y="1235.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="452.4" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (1 samples, 0.21%)</title><rect x="449.4" y="1219.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processBlock (1 samples, 0.21%)</title><rect x="449.4" y="1203.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processBlock (1 samples, 0.21%)</title><rect x="449.4" y="1187.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/ReadEliminationClosure.processNode (1 samples, 0.21%)</title><rect x="449.4" y="1171.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/ReadEliminationClosure.processNode (1 samples, 0.21%)</title><rect x="449.4" y="1155.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StartNode.getKilledLocationIdentity (1 samples, 0.21%)</title><rect x="449.4" y="1139.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.run (11 samples, 2.30%)</title><rect x="451.9" y="1283.0" width="27.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.9" y="1294.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.run (11 samples, 2.30%)</title><rect x="451.9" y="1267.0" width="27.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.9" y="1278.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsPhase.runAnalysis (11 samples, 2.30%)</title><rect x="451.9" y="1251.0" width="27.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.9" y="1262.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="451.9" y="1235.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.9" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="451.9" y="1219.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.9" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="451.9" y="1203.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.9" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.21%)</title><rect x="451.9" y="1187.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.run (1 samples, 0.21%)</title><rect x="451.9" y="1171.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.9" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.iterateSuccessorsAndInputs (1 samples, 0.21%)</title><rect x="451.9" y="1155.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.9" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.applyInputs (1 samples, 0.21%)</title><rect x="451.9" y="1139.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.applyInputs (1 samples, 0.21%)</title><rect x="451.9" y="1123.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (7 samples, 1.46%)</title><rect x="454.4" y="1235.0" width="17.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="457.4" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (7 samples, 1.46%)</title><rect x="454.4" y="1219.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="457.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.processMultipleSuccessors (1 samples, 0.21%)</title><rect x="454.4" y="1203.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.cloneState (1 samples, 0.21%)</title><rect x="454.4" y="1187.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="457.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.cloneState (1 samples, 0.21%)</title><rect x="454.4" y="1171.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationBlockState.&lt;init&gt; (1 samples, 0.21%)</title><rect x="454.4" y="1155.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMap.create (1 samples, 0.21%)</title><rect x="454.4" y="1139.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.create (1 samples, 0.21%)</title><rect x="454.4" y="1123.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.&lt;init&gt; (1 samples, 0.21%)</title><rect x="454.4" y="1107.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.initFrom (1 samples, 0.21%)</title><rect x="454.4" y="1091.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.21%)</title><rect x="454.4" y="1075.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.4" y="1086.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.21%)</title><rect x="454.4" y="1059.0" width="2.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="457.4" y="1070.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="454.4" y="1043.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="457.4" y="1054.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="454.4" y="1027.0" width="2.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="457.4" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processBlock (6 samples, 1.26%)</title><rect x="456.8" y="1203.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="459.8" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processBlock (6 samples, 1.26%)</title><rect x="456.8" y="1187.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processNode (6 samples, 1.26%)</title><rect x="456.8" y="1171.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processNode (6 samples, 1.26%)</title><rect x="456.8" y="1155.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processLoadField (1 samples, 0.21%)</title><rect x="456.8" y="1139.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="459.8" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processLoad (1 samples, 0.21%)</title><rect x="456.8" y="1123.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationBlockState.getReadCache (1 samples, 0.21%)</title><rect x="456.8" y="1107.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.8" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processNode (5 samples, 1.05%)</title><rect x="459.3" y="1139.0" width="12.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processNodeInternal (5 samples, 1.05%)</title><rect x="459.3" y="1123.0" width="12.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processNodeInputs (1 samples, 0.21%)</title><rect x="459.3" y="1107.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processNodeWithState (1 samples, 0.21%)</title><rect x="459.3" y="1091.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.3" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.addVirtualMappings (1 samples, 0.21%)</title><rect x="459.3" y="1075.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/ObjectState.createEscapeObjectState (1 samples, 0.21%)</title><rect x="459.3" y="1059.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.21%)</title><rect x="459.3" y="1043.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.3" y="1054.0"></text>
</g>
<g>
<title>G1BarrierSet::write_region(MemRegion) (1 samples, 0.21%)</title><rect x="459.3" y="1027.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="462.3" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processNodeWithScalarReplacedInputs (2 samples, 0.42%)</title><rect x="461.8" y="1107.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.8" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode.canonical (1 samples, 0.21%)</title><rect x="461.8" y="1091.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.8" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode.canonical (1 samples, 0.21%)</title><rect x="461.8" y="1075.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.8" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode$IntegerEqualsOp.canonical (1 samples, 0.21%)</title><rect x="461.8" y="1059.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/Stamp.alwaysDistinct (1 samples, 0.21%)</title><rect x="461.8" y="1043.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.8" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.hasValues (1 samples, 0.21%)</title><rect x="461.8" y="1027.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="464.8" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.21%)</title><rect x="464.2" y="1091.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.2" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.21%)</title><rect x="464.2" y="1075.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.2" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.21%)</title><rect x="464.2" y="1059.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="467.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processVirtualizable (2 samples, 0.42%)</title><rect x="466.7" y="1107.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.virtualize (2 samples, 0.42%)</title><rect x="466.7" y="1091.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="469.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/NewInstanceNode.virtualize (2 samples, 0.42%)</title><rect x="466.7" y="1075.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.defaultForKind (1 samples, 0.21%)</title><rect x="466.7" y="1059.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.unique (1 samples, 0.21%)</title><rect x="466.7" y="1043.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.21%)</title><rect x="466.7" y="1027.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.21%)</title><rect x="466.7" y="1011.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.21%)</title><rect x="466.7" y="995.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findNodeInCache (1 samples, 0.21%)</title><rect x="466.7" y="979.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.21%)</title><rect x="466.7" y="963.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.21%)</title><rect x="466.7" y="947.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.21%)</title><rect x="466.7" y="931.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.compareKeys (1 samples, 0.21%)</title><rect x="466.7" y="915.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.7" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$1.equals (1 samples, 0.21%)</title><rect x="466.7" y="899.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.valueEquals (1 samples, 0.21%)</title><rect x="466.7" y="883.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.7" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.dataEquals (1 samples, 0.21%)</title><rect x="466.7" y="867.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.7" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.deepEquals0 (1 samples, 0.21%)</title><rect x="466.7" y="851.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.7" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.equals (1 samples, 0.21%)</title><rect x="466.7" y="835.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.7" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/VirtualizerToolImpl.replaceWithVirtual (1 samples, 0.21%)</title><rect x="469.2" y="1059.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/GraphEffectList.deleteNode (1 samples, 0.21%)</title><rect x="469.2" y="1043.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="469.2" y="1027.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="469.2" y="1011.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="469.2" y="995.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="469.2" y="979.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="469.2" y="963.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.2" y="974.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="469.2" y="947.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.2" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="469.2" y="931.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.2" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="469.2" y="915.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.2" y="926.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="469.2" y="899.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="472.2" y="910.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="469.2" y="883.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="472.2" y="894.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="469.2" y="867.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="472.2" y="878.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="469.2" y="851.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="472.2" y="862.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="469.2" y="835.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="472.2" y="846.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="469.2" y="819.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="472.2" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="469.2" y="803.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="472.2" y="814.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="469.2" y="787.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="472.2" y="798.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="469.2" y="771.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="472.2" y="782.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="469.2" y="755.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="472.2" y="766.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.21%)</title><rect x="469.2" y="739.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="472.2" y="750.0"></text>
</g>
<g>
<title>_platform_memcmp (1 samples, 0.21%)</title><rect x="469.2" y="723.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="472.2" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.applyEffects (2 samples, 0.42%)</title><rect x="471.6" y="1235.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectList.apply (2 samples, 0.42%)</title><rect x="471.6" y="1219.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeBlockState$1.apply (2 samples, 0.42%)</title><rect x="471.6" y="1203.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeList.add (1 samples, 0.21%)</title><rect x="474.1" y="1187.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeList.add (1 samples, 0.21%)</title><rect x="474.1" y="1171.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.createEffectsClosure (1 samples, 0.21%)</title><rect x="476.6" y="1235.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="476.6" y="1219.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="476.6" y="1203.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="476.6" y="1187.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="476.6" y="1171.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="476.6" y="1155.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.6" y="1166.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="476.6" y="1139.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="476.6" y="1123.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="476.6" y="1107.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.6" y="1118.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="476.6" y="1091.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="479.6" y="1102.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="476.6" y="1075.0" width="2.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="479.6" y="1086.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="476.6" y="1059.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="479.6" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="476.6" y="1043.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="479.6" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.21%)</title><rect x="476.6" y="1027.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="479.6" y="1038.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.21%)</title><rect x="476.6" y="1011.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="479.6" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::check_constraints(unsigned int, InstanceKlass*, Handle, bool, Thread*) (1 samples, 0.21%)</title><rect x="476.6" y="995.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="479.6" y="1006.0"></text>
</g>
<g>
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.21%)</title><rect x="476.6" y="979.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="479.6" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/target/Backend.emitBackEnd (48 samples, 10.04%)</title><rect x="479.0" y="1379.0" width="118.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.0" y="1390.0">org/graalvm/co..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitBackEnd (48 samples, 10.04%)</title><rect x="479.0" y="1363.0" width="118.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.0" y="1374.0">org/graalvm/co..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitCode (7 samples, 1.46%)</title><rect x="479.0" y="1347.0" width="17.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.0" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCode (7 samples, 1.46%)</title><rect x="479.0" y="1331.0" width="17.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCodeBody (3 samples, 0.63%)</title><rect x="479.0" y="1315.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.0" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emit (3 samples, 0.63%)</title><rect x="479.0" y="1299.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.0" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emitBlock (3 samples, 0.63%)</title><rect x="479.0" y="1283.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.0" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emitOp (2 samples, 0.42%)</title><rect x="479.0" y="1267.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.0" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64BlockEndOp.emitCode (2 samples, 0.42%)</title><rect x="479.0" y="1251.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotReturnOp.emitCode (1 samples, 0.21%)</title><rect x="479.0" y="1235.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.0" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotSafepointOp.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="479.0" y="1219.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.0" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.create (1 samples, 0.21%)</title><rect x="479.0" y="1203.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="479.0" y="1187.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="479.0" y="1171.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="482.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scan (1 samples, 0.21%)</title><rect x="479.0" y="1155.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="482.0" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/FieldsScanner.scan (1 samples, 0.21%)</title><rect x="479.0" y="1139.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.0" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scanField (1 samples, 0.21%)</title><rect x="479.0" y="1123.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.0" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$LIRFieldsScanner.scanField (1 samples, 0.21%)</title><rect x="479.0" y="1107.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.0" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$LIRFieldsScanner.getOperandModeAnnotation (1 samples, 0.21%)</title><rect x="479.0" y="1091.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.getAnnotation (1 samples, 0.21%)</title><rect x="479.0" y="1075.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="482.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.21%)</title><rect x="479.0" y="1059.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.21%)</title><rect x="479.0" y="1043.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="482.0" y="1054.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.21%)</title><rect x="479.0" y="1027.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.0" y="1038.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.21%)</title><rect x="479.0" y="1011.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.0" y="1022.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.21%)</title><rect x="479.0" y="995.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="482.0" y="1006.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.21%)</title><rect x="479.0" y="979.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.0" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.21%)</title><rect x="479.0" y="963.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="482.0" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.21%)</title><rect x="479.0" y="947.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.0" y="958.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.21%)</title><rect x="479.0" y="931.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.0" y="942.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.21%)</title><rect x="479.0" y="915.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="482.0" y="926.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.21%)</title><rect x="479.0" y="899.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.0" y="910.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.21%)</title><rect x="479.0" y="883.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.21%)</title><rect x="479.0" y="867.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.21%)</title><rect x="479.0" y="851.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.0" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$32.0x0000000800b6b8b8.apply (1 samples, 0.21%)</title><rect x="479.0" y="835.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.0" y="846.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.21%)</title><rect x="479.0" y="819.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.0" y="830.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.21%)</title><rect x="479.0" y="803.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="482.0" y="814.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.defineProxyClass (1 samples, 0.21%)</title><rect x="479.0" y="787.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.0" y="798.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateProxyClass (1 samples, 0.21%)</title><rect x="479.0" y="771.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="482.0" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateClassFile (1 samples, 0.21%)</title><rect x="479.0" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.0" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator$ProxyMethod.generateMethod (1 samples, 0.21%)</title><rect x="479.0" y="739.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="482.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMaxs (1 samples, 0.21%)</title><rect x="479.0" y="723.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.computeAllFrames (1 samples, 0.21%)</title><rect x="479.0" y="707.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.merge (1 samples, 0.21%)</title><rect x="479.0" y="691.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.0" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ControlFlow$CmpBranchOp.emitCode (1 samples, 0.21%)</title><rect x="481.5" y="1235.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.5" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LabelRef.label (1 samples, 0.21%)</title><rect x="481.5" y="1219.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.5" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.21%)</title><rect x="481.5" y="1203.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="484.5" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (1 samples, 0.21%)</title><rect x="481.5" y="1187.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.5" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/options/OptionKey.getValue (1 samples, 0.21%)</title><rect x="484.0" y="1267.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.0" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/options/OptionValues.get (1 samples, 0.21%)</title><rect x="484.0" y="1251.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/options/OptionValues.get (1 samples, 0.21%)</title><rect x="484.0" y="1235.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.21%)</title><rect x="484.0" y="1219.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="487.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.21%)</title><rect x="484.0" y="1203.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="487.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCodePrefix (1 samples, 0.21%)</title><rect x="486.4" y="1315.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.4" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64MacroAssembler.cmpqAndJcc (1 samples, 0.21%)</title><rect x="486.4" y="1299.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.4" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64MacroAssembler.applyRMOpAndJcc (1 samples, 0.21%)</title><rect x="486.4" y="1283.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.4" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64MacroAssembler.alignFusedPair (1 samples, 0.21%)</title><rect x="486.4" y="1267.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.4" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.testAndAlign (1 samples, 0.21%)</title><rect x="486.4" y="1251.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="489.4" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.nop (1 samples, 0.21%)</title><rect x="486.4" y="1235.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.4" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.intelNops (1 samples, 0.21%)</title><rect x="486.4" y="1219.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.addrNop8 (1 samples, 0.21%)</title><rect x="486.4" y="1203.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="489.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Assembler.emitInt (1 samples, 0.21%)</title><rect x="486.4" y="1187.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Buffer.emitInt (1 samples, 0.21%)</title><rect x="486.4" y="1171.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.4" y="1182.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (1 samples, 0.21%)</title><rect x="486.4" y="1155.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="489.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putIntUnaligned (1 samples, 0.21%)</title><rect x="486.4" y="1139.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="489.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCodeSuffix (3 samples, 0.63%)</title><rect x="488.9" y="1315.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (3 samples, 0.63%)</title><rect x="488.9" y="1299.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (3 samples, 0.63%)</title><rect x="488.9" y="1283.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.finalizeAddress (3 samples, 0.63%)</title><rect x="488.9" y="1267.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.getCode (3 samples, 0.63%)</title><rect x="488.9" y="1251.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder.createCompiledCode (1 samples, 0.21%)</title><rect x="488.9" y="1235.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.21%)</title><rect x="488.9" y="1219.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.21%)</title><rect x="488.9" y="1203.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.21%)</title><rect x="488.9" y="1187.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.21%)</title><rect x="488.9" y="1171.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.21%)</title><rect x="488.9" y="1155.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.21%)</title><rect x="488.9" y="1139.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="488.9" y="1123.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="491.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="488.9" y="1107.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="488.9" y="1091.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="491.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.21%)</title><rect x="488.9" y="1075.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.21%)</title><rect x="488.9" y="1059.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.21%)</title><rect x="488.9" y="1043.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.21%)</title><rect x="488.9" y="1027.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.21%)</title><rect x="488.9" y="1011.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.classData (1 samples, 0.21%)</title><rect x="488.9" y="995.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.21%)</title><rect x="488.9" y="979.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.9" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.21%)</title><rect x="488.9" y="963.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="491.9" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.buildCompilationResult (2 samples, 0.42%)</title><rect x="491.4" y="1235.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.4" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.getGraph (2 samples, 0.42%)</title><rect x="491.4" y="1219.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.buildInitialGraph (2 samples, 0.42%)</title><rect x="491.4" y="1203.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (2 samples, 0.42%)</title><rect x="491.4" y="1187.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (2 samples, 0.42%)</title><rect x="491.4" y="1171.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (2 samples, 0.42%)</title><rect x="491.4" y="1155.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (2 samples, 0.42%)</title><rect x="491.4" y="1139.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (2 samples, 0.42%)</title><rect x="491.4" y="1123.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.4" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.42%)</title><rect x="491.4" y="1107.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.42%)</title><rect x="491.4" y="1091.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (2 samples, 0.42%)</title><rect x="491.4" y="1075.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (2 samples, 0.42%)</title><rect x="491.4" y="1059.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.4" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (2 samples, 0.42%)</title><rect x="491.4" y="1043.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.4" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (2 samples, 0.42%)</title><rect x="491.4" y="1027.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.4" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (2 samples, 0.42%)</title><rect x="491.4" y="1011.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="494.4" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (2 samples, 0.42%)</title><rect x="491.4" y="995.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.4" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (2 samples, 0.42%)</title><rect x="491.4" y="979.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.4" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (2 samples, 0.42%)</title><rect x="491.4" y="963.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="494.4" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.21%)</title><rect x="491.4" y="947.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.4" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.21%)</title><rect x="491.4" y="931.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.4" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleLoadStaticField (1 samples, 0.21%)</title><rect x="491.4" y="915.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.4" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryReadField (1 samples, 0.21%)</title><rect x="491.4" y="899.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.4" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryConstantFold (1 samples, 0.21%)</title><rect x="491.4" y="883.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.4" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.21%)</title><rect x="491.4" y="867.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.4" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.21%)</title><rect x="491.4" y="851.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="494.4" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.putNodeIntoCache (1 samples, 0.21%)</title><rect x="491.4" y="835.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="494.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.21%)</title><rect x="491.4" y="819.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.21%)</title><rect x="491.4" y="803.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="494.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.setRawValue (1 samples, 0.21%)</title><rect x="491.4" y="787.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.4" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="493.8" y="947.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.8" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="493.8" y="931.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.8" y="942.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="493.8" y="915.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="496.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="493.8" y="899.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="493.8" y="883.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="493.8" y="867.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="493.8" y="851.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.8" y="862.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="493.8" y="835.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.8" y="846.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="493.8" y="819.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.8" y="830.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="493.8" y="803.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.8" y="814.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="493.8" y="787.0" width="2.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="496.8" y="798.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="493.8" y="771.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="496.8" y="782.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="755.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="496.8" y="766.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="739.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="496.8" y="750.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="723.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="496.8" y="734.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="707.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="496.8" y="718.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="691.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="496.8" y="702.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="675.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="496.8" y="686.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="659.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="496.8" y="670.0"></text>
</g>
<g>
<title>ConstMethod::copy_stackmap_data(ClassLoaderData*, unsigned char*, int, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="643.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="496.8" y="654.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.21%)</title><rect x="493.8" y="627.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="496.8" y="638.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.21%)</title><rect x="493.8" y="611.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="496.8" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitLIR (41 samples, 8.58%)</title><rect x="496.3" y="1347.0" width="101.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.3" y="1358.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitLIR0 (41 samples, 8.58%)</title><rect x="496.3" y="1331.0" width="101.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.3" y="1342.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.computeCodeEmittingOrder (1 samples, 0.21%)</title><rect x="496.3" y="1315.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.computeCodeEmittingOrder (1 samples, 0.21%)</title><rect x="496.3" y="1299.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="499.3" y="1310.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.21%)</title><rect x="496.3" y="1283.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.3" y="1294.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (1 samples, 0.21%)</title><rect x="496.3" y="1267.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="499.3" y="1278.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.21%)</title><rect x="496.3" y="1251.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="499.3" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitLowLevel (22 samples, 4.60%)</title><rect x="498.8" y="1315.0" width="54.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.8" y="1326.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (22 samples, 4.60%)</title><rect x="498.8" y="1299.0" width="54.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.8" y="1310.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (22 samples, 4.60%)</title><rect x="498.8" y="1283.0" width="54.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.8" y="1294.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhaseSuite.run (22 samples, 4.60%)</title><rect x="498.8" y="1267.0" width="54.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="501.8" y="1278.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (22 samples, 4.60%)</title><rect x="498.8" y="1251.0" width="54.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.8" y="1262.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (22 samples, 4.60%)</title><rect x="498.8" y="1235.0" width="54.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="501.8" y="1246.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/ControlFlowOptimizer.run (1 samples, 0.21%)</title><rect x="498.8" y="1219.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.8" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ControlFlowOptimizer.run (1 samples, 0.21%)</title><rect x="498.8" y="1203.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="501.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="498.8" y="1187.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="498.8" y="1171.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="498.8" y="1155.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="501.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="498.8" y="1139.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="498.8" y="1123.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="501.8" y="1134.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="498.8" y="1107.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="498.8" y="1091.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="498.8" y="1075.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.8" y="1086.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="498.8" y="1059.0" width="2.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="501.8" y="1070.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="498.8" y="1043.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="501.8" y="1054.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="498.8" y="1027.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="501.8" y="1038.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.21%)</title><rect x="498.8" y="1011.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="501.8" y="1022.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="498.8" y="995.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="501.8" y="1006.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.21%)</title><rect x="498.8" y="979.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="501.8" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanPhase.run (12 samples, 2.51%)</title><rect x="501.3" y="1219.0" width="29.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.3" y="1230.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanPhase.run (12 samples, 2.51%)</title><rect x="501.3" y="1203.0" width="29.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="504.3" y="1214.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.allocate (12 samples, 2.51%)</title><rect x="501.3" y="1187.0" width="29.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.3" y="1198.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.apply (12 samples, 2.51%)</title><rect x="501.3" y="1171.0" width="29.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.3" y="1182.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.apply (12 samples, 2.51%)</title><rect x="501.3" y="1155.0" width="29.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.3" y="1166.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.getName (1 samples, 0.21%)</title><rect x="501.3" y="1139.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="504.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.createName (1 samples, 0.21%)</title><rect x="501.3" y="1123.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.21%)</title><rect x="501.3" y="1107.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="504.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.21%)</title><rect x="501.3" y="1091.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="504.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.21%)</title><rect x="501.3" y="1075.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanEliminateSpillMovePhase.run (1 samples, 0.21%)</title><rect x="503.7" y="1139.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="506.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanEliminateSpillMovePhase.eliminateSpillMoves (1 samples, 0.21%)</title><rect x="503.7" y="1123.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.createUnhandledLists (1 samples, 0.21%)</title><rect x="503.7" y="1107.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanEliminateSpillMovePhase$1.apply (1 samples, 0.21%)</title><rect x="503.7" y="1091.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="506.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Interval.isSplitParent (1 samples, 0.21%)</title><rect x="503.7" y="1075.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="506.7" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="503.7" y="1059.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="506.7" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="503.7" y="1043.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="506.7" y="1054.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="503.7" y="1027.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="506.7" y="1038.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.21%)</title><rect x="503.7" y="1011.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="506.7" y="1022.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.21%)</title><rect x="503.7" y="995.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="506.7" y="1006.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.21%)</title><rect x="503.7" y="979.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="506.7" y="990.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.21%)</title><rect x="503.7" y="963.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="506.7" y="974.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.21%)</title><rect x="503.7" y="947.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="506.7" y="958.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.21%)</title><rect x="503.7" y="931.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="506.7" y="942.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="503.7" y="915.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="506.7" y="926.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="503.7" y="899.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="506.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.run (6 samples, 1.26%)</title><rect x="506.2" y="1139.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.buildIntervals (3 samples, 0.63%)</title><rect x="506.2" y="1123.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachOutput (3 samples, 0.63%)</title><rect x="506.2" y="1107.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.2" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachDef (3 samples, 0.63%)</title><rect x="506.2" y="1091.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.2" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (3 samples, 0.63%)</title><rect x="506.2" y="1075.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.2" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase$$Lambda$59.0x0000000800d35f00.visitValue (3 samples, 0.63%)</title><rect x="506.2" y="1059.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="509.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$6 (3 samples, 0.63%)</title><rect x="506.2" y="1043.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.2" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.addDef (1 samples, 0.21%)</title><rect x="506.2" y="1027.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="509.2" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.changeSpillDefinitionPos (1 samples, 0.21%)</title><rect x="506.2" y="1011.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="509.2" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Interval.setSpillState (1 samples, 0.21%)</title><rect x="506.2" y="995.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.2" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/ssa/SSALinearScanLifetimeAnalysisPhase.addRegisterHint (2 samples, 0.42%)</title><rect x="508.7" y="1027.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.addRegisterHint (2 samples, 0.42%)</title><rect x="508.7" y="1011.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800ba3440.linkToTargetMethod (1 samples, 0.21%)</title><rect x="508.7" y="995.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="511.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800ba3c40.newInvokeSpecial (1 samples, 0.21%)</title><rect x="508.7" y="979.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="511.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.21%)</title><rect x="508.7" y="963.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.21%)</title><rect x="508.7" y="947.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="511.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance(JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.21%)</title><rect x="508.7" y="931.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="511.7" y="942.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.21%)</title><rect x="508.7" y="915.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="511.7" y="926.0"></text>
</g>
<g>
<title>Chunk::next() const (1 samples, 0.21%)</title><rect x="508.7" y="899.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="511.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.forEachRegisterHint (1 samples, 0.21%)</title><rect x="511.1" y="995.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.1" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.forEachRegisterHint (1 samples, 0.21%)</title><rect x="511.1" y="979.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.1" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueProcedure.doValue (1 samples, 0.21%)</title><rect x="511.1" y="963.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="514.1" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase$$Lambda$66.0x0000000800d37660.doValue (1 samples, 0.21%)</title><rect x="511.1" y="947.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="514.1" y="958.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="511.1" y="931.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="514.1" y="942.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.21%)</title><rect x="511.1" y="915.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="514.1" y="926.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.21%)</title><rect x="511.1" y="899.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="514.1" y="910.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.21%)</title><rect x="511.1" y="883.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="514.1" y="894.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.21%)</title><rect x="511.1" y="867.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="514.1" y="878.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.21%)</title><rect x="511.1" y="851.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="514.1" y="862.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.21%)</title><rect x="511.1" y="835.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="514.1" y="846.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.21%)</title><rect x="511.1" y="819.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="514.1" y="830.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.21%)</title><rect x="511.1" y="803.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="514.1" y="814.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="511.1" y="787.0" width="2.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="514.1" y="798.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="511.1" y="771.0" width="2.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="514.1" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets (1 samples, 0.21%)</title><rect x="513.6" y="1123.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.6" y="1134.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.21%)</title><rect x="513.6" y="1107.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="516.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.21%)</title><rect x="513.6" y="1091.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="516.6" y="1102.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.21%)</title><rect x="513.6" y="1075.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="516.6" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.21%)</title><rect x="513.6" y="1059.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="516.6" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::check_out_of_memory() (1 samples, 0.21%)</title><rect x="513.6" y="1043.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="516.6" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.computeLocalLiveSets (1 samples, 0.21%)</title><rect x="516.1" y="1123.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.21%)</title><rect x="516.1" y="1107.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.21%)</title><rect x="516.1" y="1091.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.21%)</title><rect x="516.1" y="1075.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.21%)</title><rect x="516.1" y="1059.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.21%)</title><rect x="516.1" y="1043.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.21%)</title><rect x="516.1" y="1027.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="516.1" y="1011.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="516.1" y="995.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="516.1" y="979.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.1" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.21%)</title><rect x="516.1" y="963.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.1" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.21%)</title><rect x="516.1" y="947.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.21%)</title><rect x="516.1" y="931.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (1 samples, 0.21%)</title><rect x="516.1" y="915.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassDefiner.defineClass (1 samples, 0.21%)</title><rect x="516.1" y="899.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.1" y="910.0"></text>
</g>
<g>
<title>java/lang/System$2.defineClass (1 samples, 0.21%)</title><rect x="516.1" y="883.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass0 (1 samples, 0.21%)</title><rect x="516.1" y="867.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.1" y="878.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass0 (1 samples, 0.21%)</title><rect x="516.1" y="851.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="519.1" y="862.0"></text>
</g>
<g>
<title>JVM_LookupDefineClass (1 samples, 0.21%)</title><rect x="516.1" y="835.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="519.1" y="846.0"></text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, ClassFileStream*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="516.1" y="819.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="519.1" y="830.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.21%)</title><rect x="516.1" y="803.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="519.1" y="814.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.21%)</title><rect x="516.1" y="787.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="519.1" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.numberInstructions (1 samples, 0.21%)</title><rect x="518.5" y="1123.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.5" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachOutput (1 samples, 0.21%)</title><rect x="518.5" y="1107.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="521.5" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachDef (1 samples, 0.21%)</title><rect x="518.5" y="1091.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="521.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.21%)</title><rect x="518.5" y="1075.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueConsumer.visitValue (1 samples, 0.21%)</title><rect x="518.5" y="1059.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.5" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase$$Lambda$55.0x0000000800d34fa8.visitValue (1 samples, 0.21%)</title><rect x="518.5" y="1043.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.5" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.lambda$numberInstructions$0 (1 samples, 0.21%)</title><rect x="518.5" y="1027.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.5" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.getOrCreateInterval (1 samples, 0.21%)</title><rect x="518.5" y="1011.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.5" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.createInterval (1 samples, 0.21%)</title><rect x="518.5" y="995.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.5" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Interval.&lt;init&gt; (1 samples, 0.21%)</title><rect x="518.5" y="979.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.5" y="990.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/ValueUtil.isRegister (1 samples, 0.21%)</title><rect x="518.5" y="963.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.5" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanRegisterAllocationPhase.run (1 samples, 0.21%)</title><rect x="521.0" y="1139.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.0" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanRegisterAllocationPhase.allocateRegisters (1 samples, 0.21%)</title><rect x="521.0" y="1123.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="524.0" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/IntervalWalker.walk (1 samples, 0.21%)</title><rect x="521.0" y="1107.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="524.0" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/IntervalWalker.walkTo (1 samples, 0.21%)</title><rect x="521.0" y="1091.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.0" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.activateCurrent (1 samples, 0.21%)</title><rect x="521.0" y="1075.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.0" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.noAllocationPossible (1 samples, 0.21%)</title><rect x="521.0" y="1059.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.0" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.hasCall (1 samples, 0.21%)</title><rect x="521.0" y="1043.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.0" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Call$ForeignCallOp.destroysCallerSavedRegisters (1 samples, 0.21%)</title><rect x="521.0" y="1027.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="524.0" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.run (3 samples, 0.63%)</title><rect x="523.5" y="1139.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.5" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.resolveDataFlow (3 samples, 0.63%)</title><rect x="523.5" y="1123.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="526.5" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.optimizeEmptyBlocks (2 samples, 0.42%)</title><rect x="523.5" y="1107.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.5" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.resolveAndAppendMoves (1 samples, 0.21%)</title><rect x="523.5" y="1091.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.resolveMappings (1 samples, 0.21%)</title><rect x="523.5" y="1075.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="526.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.safeToProcessMove (1 samples, 0.21%)</title><rect x="523.5" y="1059.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.5" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/ssa/SSAMoveResolver.valueBlocked (1 samples, 0.21%)</title><rect x="523.5" y="1043.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.5" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/ssa/SSALinearScanResolveDataFlowPhase.resolveCollectMappings (1 samples, 0.21%)</title><rect x="525.9" y="1091.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.9" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.resolveCollectMappings (1 samples, 0.21%)</title><rect x="525.9" y="1075.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.9" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.splitChildAtOpId (1 samples, 0.21%)</title><rect x="525.9" y="1059.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="528.9" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Interval.getSplitChildAtOpId (1 samples, 0.21%)</title><rect x="525.9" y="1043.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="528.9" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/util/Util.atPutGrow (1 samples, 0.21%)</title><rect x="525.9" y="1027.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.9" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.set (1 samples, 0.21%)</title><rect x="525.9" y="1011.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.9" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.resolveDataFlow0 (1 samples, 0.21%)</title><rect x="528.4" y="1107.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.resolveAndAppendMoves (1 samples, 0.21%)</title><rect x="528.4" y="1091.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="531.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.appendInsertionBuffer (1 samples, 0.21%)</title><rect x="528.4" y="1075.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInsertionBuffer.finish (1 samples, 0.21%)</title><rect x="528.4" y="1059.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.4" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization.run (2 samples, 0.42%)</title><rect x="530.9" y="1219.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.9" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization.run (2 samples, 0.42%)</title><rect x="530.9" y="1203.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.9" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.apply (2 samples, 0.42%)</title><rect x="530.9" y="1187.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.analyzeBlock (1 samples, 0.21%)</title><rect x="530.9" y="1171.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.9" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachOutput (1 samples, 0.21%)</title><rect x="530.9" y="1155.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.9" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachDef (1 samples, 0.21%)</title><rect x="530.9" y="1139.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.21%)</title><rect x="530.9" y="1123.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization$$Lambda$50.0x0000000800d2f800.visitValue (1 samples, 0.21%)</title><rect x="530.9" y="1107.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.lambda$analyzeBlock$2 (1 samples, 0.21%)</title><rect x="530.9" y="1091.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="533.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="530.9" y="1075.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="530.9" y="1059.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="530.9" y="1043.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="530.9" y="1027.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="530.9" y="1011.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.9" y="1022.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="530.9" y="995.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="530.9" y="979.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.9" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="530.9" y="963.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.9" y="974.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="530.9" y="947.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="533.9" y="958.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="530.9" y="931.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="533.9" y="942.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="530.9" y="915.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="533.9" y="926.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="530.9" y="899.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="533.9" y="910.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="530.9" y="883.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="533.9" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="530.9" y="867.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="533.9" y="878.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="530.9" y="851.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="533.9" y="862.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="530.9" y="835.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="533.9" y="846.0"></text>
</g>
<g>
<title>java_lang_Class::initialize_mirror_fields(Klass*, Handle, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="530.9" y="819.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="533.9" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::do_local_static_fields(void (*)(fieldDescriptor*, Handle, Thread*), Handle, Thread*) (1 samples, 0.21%)</title><rect x="530.9" y="803.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="533.9" y="814.0"></text>
</g>
<g>
<title>fieldDescriptor::reinitialize(InstanceKlass*, int) (1 samples, 0.21%)</title><rect x="530.9" y="787.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="533.9" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/VariableMap.forEach (1 samples, 0.21%)</title><rect x="533.3" y="1171.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="536.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization$$Lambda$54.0x0000000800d30718.accept (1 samples, 0.21%)</title><rect x="533.3" y="1155.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.createConstantTree (1 samples, 0.21%)</title><rect x="533.3" y="1139.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="536.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.createLoads (1 samples, 0.21%)</title><rect x="533.3" y="1123.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.insertLoad (1 samples, 0.21%)</title><rect x="533.3" y="1107.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/UseEntry.setValue (1 samples, 0.21%)</title><rect x="533.3" y="1091.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.3" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/UseEntry.replaceValue (1 samples, 0.21%)</title><rect x="533.3" y="1075.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase.run (4 samples, 0.84%)</title><rect x="535.8" y="1219.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.8" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase.run (4 samples, 0.84%)</title><rect x="535.8" y="1203.0" width="9.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.8" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.build (4 samples, 0.84%)</title><rect x="535.8" y="1187.0" width="9.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="538.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processBlock (3 samples, 0.63%)</title><rect x="535.8" y="1171.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/cfg/BlockMap.get (1 samples, 0.21%)</title><rect x="535.8" y="1155.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processInstructionBottomUp (1 samples, 0.21%)</title><rect x="538.3" y="1155.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="541.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachInput (1 samples, 0.21%)</title><rect x="538.3" y="1139.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="541.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachUse (1 samples, 0.21%)</title><rect x="538.3" y="1123.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.21%)</title><rect x="538.3" y="1107.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueConsumer.visitValue (1 samples, 0.21%)</title><rect x="538.3" y="1091.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.3" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker$2.visitValue (1 samples, 0.21%)</title><rect x="538.3" y="1075.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase$Marker.shouldProcessValue (1 samples, 0.21%)</title><rect x="538.3" y="1059.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="541.3" y="1070.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/ValueUtil.asRegister (1 samples, 0.21%)</title><rect x="538.3" y="1043.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="541.3" y="1054.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/ValueUtil.asRegisterValue (1 samples, 0.21%)</title><rect x="538.3" y="1027.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.3" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/LIRKind.equals (1 samples, 0.21%)</title><rect x="538.3" y="1011.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.3" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.updateOutBlock (1 samples, 0.21%)</title><rect x="540.8" y="1155.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/cfg/AbstractBlockBase.getSuccessors (1 samples, 0.21%)</title><rect x="540.8" y="1139.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.8" y="1150.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.21%)</title><rect x="540.8" y="1123.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="543.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/UniqueWorkList.poll (1 samples, 0.21%)</title><rect x="543.2" y="1171.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.2" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.poll (1 samples, 0.21%)</title><rect x="543.2" y="1155.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="546.2" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.21%)</title><rect x="543.2" y="1139.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/MarkBasePointersPhase.run (1 samples, 0.21%)</title><rect x="545.7" y="1219.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.7" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/MarkBasePointersPhase.run (1 samples, 0.21%)</title><rect x="545.7" y="1203.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.7" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.build (1 samples, 0.21%)</title><rect x="545.7" y="1187.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processBlock (1 samples, 0.21%)</title><rect x="545.7" y="1171.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processInstructionBottomUp (1 samples, 0.21%)</title><rect x="545.7" y="1155.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachInput (1 samples, 0.21%)</title><rect x="545.7" y="1139.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachUse (1 samples, 0.21%)</title><rect x="545.7" y="1123.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.21%)</title><rect x="545.7" y="1107.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64AddressValue.visitEachComponent (1 samples, 0.21%)</title><rect x="545.7" y="1091.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="548.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueConsumer.visitValue (1 samples, 0.21%)</title><rect x="545.7" y="1075.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="548.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker$2.visitValue (1 samples, 0.21%)</title><rect x="545.7" y="1059.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/MarkBasePointersPhase$Marker$BasePointersSet.put (1 samples, 0.21%)</title><rect x="545.7" y="1043.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.21%)</title><rect x="545.7" y="1027.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="548.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.21%)</title><rect x="545.7" y="1011.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.21%)</title><rect x="545.7" y="995.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/Variable.hashCode (1 samples, 0.21%)</title><rect x="545.7" y="979.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.7" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/LIRKind.hashCode (1 samples, 0.21%)</title><rect x="545.7" y="963.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.7" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator.run (2 samples, 0.42%)</title><rect x="548.2" y="1219.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="551.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator.run (2 samples, 0.42%)</title><rect x="548.2" y="1203.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.2" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator.allocateStackSlots (2 samples, 0.42%)</title><rect x="548.2" y="1187.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.2" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator$Allocator.allocate (2 samples, 0.42%)</title><rect x="548.2" y="1171.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator$Allocator.buildIntervals (2 samples, 0.42%)</title><rect x="548.2" y="1155.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/FixPointIntervalBuilder.build (2 samples, 0.42%)</title><rect x="548.2" y="1139.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="551.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/FixPointIntervalBuilder.processBlock (2 samples, 0.42%)</title><rect x="548.2" y="1123.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.2" y="1134.0"></text>
</g>
<g>
<title>java/util/BitSet.clone (1 samples, 0.21%)</title><rect x="548.2" y="1107.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.21%)</title><rect x="548.2" y="1091.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="551.2" y="1102.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.21%)</title><rect x="548.2" y="1075.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="551.2" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;270448ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)9, 270448ull&gt;::access_barrier(oopDesc*, oopDesc*, unsigned long) (1 samples, 0.21%)</title><rect x="548.2" y="1059.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="551.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/FixPointIntervalBuilder.markInInterval (1 samples, 0.21%)</title><rect x="550.6" y="1107.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.6" y="1118.0"></text>
</g>
<g>
<title>java/util/BitSet.nextSetBit (1 samples, 0.21%)</title><rect x="550.6" y="1091.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.6" y="1102.0"></text>
</g>
<g>
<title>java/util/BitSet.checkInvariants (1 samples, 0.21%)</title><rect x="550.6" y="1075.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newLIRGenerator (2 samples, 0.42%)</title><rect x="553.1" y="1315.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="553.1" y="1299.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="556.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="553.1" y="1283.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="553.1" y="1267.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="553.1" y="1251.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="553.1" y="1235.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.1" y="1246.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="553.1" y="1219.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="553.1" y="1203.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="553.1" y="1187.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="556.1" y="1198.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="553.1" y="1171.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="556.1" y="1182.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="553.1" y="1155.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="556.1" y="1166.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="553.1" y="1139.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="556.1" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="553.1" y="1123.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="556.1" y="1134.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="553.1" y="1107.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="556.1" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="553.1" y="1091.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="556.1" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="553.1" y="1075.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="556.1" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="553.1" y="1059.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="556.1" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="553.1" y="1043.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="556.1" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="555.6" y="1299.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="558.6" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.&lt;init&gt; (1 samples, 0.21%)</title><rect x="555.6" y="1283.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="555.6" y="1267.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="555.6" y="1251.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="558.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="555.6" y="1235.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="555.6" y="1219.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="555.6" y="1203.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.6" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="555.6" y="1187.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="555.6" y="1171.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="558.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="555.6" y="1155.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="558.6" y="1166.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="555.6" y="1139.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="558.6" y="1150.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="555.6" y="1123.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="558.6" y="1134.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="555.6" y="1107.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="558.6" y="1118.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="555.6" y="1091.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="558.6" y="1102.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="555.6" y="1075.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="558.6" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="555.6" y="1059.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="558.6" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="555.6" y="1043.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="558.6" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="555.6" y="1027.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="558.6" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="555.6" y="1011.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="558.6" y="1022.0"></text>
</g>
<g>
<title>SymbolTable::new_symbols(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*) (1 samples, 0.21%)</title><rect x="555.6" y="995.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="558.6" y="1006.0"></text>
</g>
<g>
<title>SymbolTable::do_add_if_needed(char const*, int, unsigned long, bool) (1 samples, 0.21%)</title><rect x="555.6" y="979.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="558.6" y="990.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::internal_insert&lt;SymbolTableLookup&gt;(Thread*, SymbolTableLookup&amp;, Symbol* const&amp;, bool*, bool*) (1 samples, 0.21%)</title><rect x="555.6" y="963.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="558.6" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newNodeLIRBuilder (3 samples, 0.63%)</title><rect x="558.0" y="1315.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="561.0" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotNodeLIRBuilder.&lt;init&gt; (3 samples, 0.63%)</title><rect x="558.0" y="1299.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.0" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeLIRBuilder.&lt;init&gt; (3 samples, 0.63%)</title><rect x="558.0" y="1283.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.0" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.&lt;init&gt; (3 samples, 0.63%)</title><rect x="558.0" y="1267.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.0" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchRuleRegistry.lookup (2 samples, 0.42%)</title><rect x="558.0" y="1251.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchRuleRegistry.createRules (2 samples, 0.42%)</title><rect x="558.0" y="1235.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.0" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeMatchRules_MatchStatementSet.statements (2 samples, 0.42%)</title><rect x="558.0" y="1219.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.0" y="1230.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="558.0" y="1203.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="561.0" y="1214.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="558.0" y="1187.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="561.0" y="1198.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="558.0" y="1171.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="561.0" y="1182.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.21%)</title><rect x="558.0" y="1155.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="561.0" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.21%)</title><rect x="558.0" y="1139.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="561.0" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.21%)</title><rect x="558.0" y="1123.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="561.0" y="1134.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.21%)</title><rect x="558.0" y="1107.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="561.0" y="1118.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.21%)</title><rect x="558.0" y="1091.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="561.0" y="1102.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="558.0" y="1075.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="561.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="560.5" y="1203.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="560.5" y="1187.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="563.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="560.5" y="1171.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="560.5" y="1155.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="560.5" y="1139.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.5" y="1150.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="560.5" y="1123.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="560.5" y="1107.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="560.5" y="1091.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.5" y="1102.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="560.5" y="1075.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="563.5" y="1086.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="560.5" y="1059.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="563.5" y="1070.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="560.5" y="1043.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="563.5" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="560.5" y="1027.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="563.5" y="1038.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="560.5" y="1011.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="563.5" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="560.5" y="995.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="563.5" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="560.5" y="979.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="563.5" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="560.5" y="963.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="563.5" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="560.5" y="947.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="563.5" y="958.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.21%)</title><rect x="560.5" y="931.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.5" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotNodeLIRBuilder.createDebugInfoBuilder (1 samples, 0.21%)</title><rect x="563.0" y="1251.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotLockStack.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="563.0" y="1235.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.0" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.create (1 samples, 0.21%)</title><rect x="563.0" y="1219.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.0" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="563.0" y="1203.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="563.0" y="1187.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="566.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$Values.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="563.0" y="1171.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$Values.&lt;init&gt; (1 samples, 0.21%)</title><rect x="563.0" y="1155.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.0" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.21%)</title><rect x="563.0" y="1139.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="566.0" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.21%)</title><rect x="563.0" y="1123.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="566.0" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.21%)</title><rect x="563.0" y="1107.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="566.0" y="1118.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate_objArray_klass(ClassLoaderData*, int, Klass*, Thread*) (1 samples, 0.21%)</title><rect x="563.0" y="1091.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="566.0" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.21%)</title><rect x="563.0" y="1075.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="566.0" y="1086.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate_objArray_klass(ClassLoaderData*, int, Klass*, Thread*) (1 samples, 0.21%)</title><rect x="563.0" y="1059.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="566.0" y="1070.0"></text>
</g>
<g>
<title>ArrayKlass::complete_create_array_klass(ArrayKlass*, Klass*, ModuleEntry*, Thread*) (1 samples, 0.21%)</title><rect x="563.0" y="1043.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="566.0" y="1054.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="563.0" y="1027.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="566.0" y="1038.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="563.0" y="1011.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="566.0" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="563.0" y="995.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="566.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (13 samples, 2.72%)</title><rect x="565.4" y="1315.0" width="32.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="568.4" y="1326.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (13 samples, 2.72%)</title><rect x="565.4" y="1299.0" width="32.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.4" y="1310.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.run (13 samples, 2.72%)</title><rect x="565.4" y="1283.0" width="32.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="568.4" y="1294.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.run (13 samples, 2.72%)</title><rect x="565.4" y="1267.0" width="32.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.4" y="1278.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.emitBlock (10 samples, 2.09%)</title><rect x="565.4" y="1251.0" width="24.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.4" y="1262.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.doBlock (10 samples, 2.09%)</title><rect x="565.4" y="1235.0" width="24.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="568.4" y="1246.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.doRoot (10 samples, 2.09%)</title><rect x="565.4" y="1219.0" width="24.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="568.4" y="1230.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitNode (10 samples, 2.09%)</title><rect x="565.4" y="1203.0" width="24.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.4" y="1214.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64AddressNode.generate (1 samples, 0.21%)</title><rect x="565.4" y="1187.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="568.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/LIRKind.derivedBaseFromValue (1 samples, 0.21%)</title><rect x="565.4" y="1171.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="568.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractEndNode.generate (1 samples, 0.21%)</title><rect x="567.9" y="1187.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="570.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.visitEndNode (1 samples, 0.21%)</title><rect x="567.9" y="1171.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.9" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.createPhiOut (1 samples, 0.21%)</title><rect x="567.9" y="1155.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="570.9" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/PhiNode.valueAt (1 samples, 0.21%)</title><rect x="567.9" y="1139.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="570.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InvokeNode.generate (1 samples, 0.21%)</title><rect x="570.4" y="1187.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitInvoke (1 samples, 0.21%)</title><rect x="570.4" y="1171.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotNodeLIRBuilder.emitDirectCall (1 samples, 0.21%)</title><rect x="570.4" y="1155.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Call$DirectCallOp.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="570.4" y="1139.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.create (1 samples, 0.21%)</title><rect x="570.4" y="1123.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.4" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="570.4" y="1107.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.21%)</title><rect x="570.4" y="1091.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scan (1 samples, 0.21%)</title><rect x="570.4" y="1075.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/Class.getAnnotation (1 samples, 0.21%)</title><rect x="570.4" y="1059.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/Class.annotationData (1 samples, 0.21%)</title><rect x="570.4" y="1043.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="573.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/Class.createAnnotationData (1 samples, 0.21%)</title><rect x="570.4" y="1027.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.4" y="1038.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.21%)</title><rect x="570.4" y="1011.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="573.4" y="1022.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.21%)</title><rect x="570.4" y="995.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.4" y="1006.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.21%)</title><rect x="570.4" y="979.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ConstantPool.getUTF8At (1 samples, 0.21%)</title><rect x="570.4" y="963.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="573.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ConstantPool.getUTF8At0 (1 samples, 0.21%)</title><rect x="570.4" y="947.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.4" y="958.0"></text>
</g>
<g>
<title>JVM_ConstantPoolGetUTF8At (1 samples, 0.21%)</title><rect x="570.4" y="931.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="573.4" y="942.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (1 samples, 0.21%)</title><rect x="570.4" y="915.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="573.4" y="926.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.21%)</title><rect x="570.4" y="899.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="573.4" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.21%)</title><rect x="570.4" y="883.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="573.4" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ConditionalNode.generate (1 samples, 0.21%)</title><rect x="572.8" y="1187.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitConditional (1 samples, 0.21%)</title><rect x="572.8" y="1171.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ConditionalNode.falseValue (1 samples, 0.21%)</title><rect x="572.8" y="1155.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/FixedValueAnchorNode.generate (1 samples, 0.21%)</title><rect x="575.3" y="1187.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.setResult (1 samples, 0.21%)</title><rect x="575.3" y="1171.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/ForeignCall.generate (3 samples, 0.63%)</title><rect x="577.8" y="1187.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitForeignCall (3 samples, 0.63%)</title><rect x="577.8" y="1171.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="580.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.emitForeignCall (1 samples, 0.21%)</title><rect x="577.8" y="1155.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/LIRGenerator.emitForeignCall (1 samples, 0.21%)</title><rect x="577.8" y="1139.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.8" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.emitForeignCallOp (1 samples, 0.21%)</title><rect x="577.8" y="1123.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.emitForeignCallOp (1 samples, 0.21%)</title><rect x="577.8" y="1107.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.8" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (2 samples, 0.42%)</title><rect x="580.3" y="1155.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (2 samples, 0.42%)</title><rect x="580.3" y="1139.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="583.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.finalizeAddress (2 samples, 0.42%)</title><rect x="580.3" y="1123.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.getCode (2 samples, 0.42%)</title><rect x="580.3" y="1107.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="583.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.buildCompilationResult (2 samples, 0.42%)</title><rect x="580.3" y="1091.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.3" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/ForeignCallStub.getGraph (1 samples, 0.21%)</title><rect x="580.3" y="1075.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="580.3" y="1059.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="580.3" y="1043.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="583.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="580.3" y="1027.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="583.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="580.3" y="1011.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="580.3" y="995.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.3" y="1006.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="580.3" y="979.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="583.3" y="990.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="580.3" y="963.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.3" y="974.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="580.3" y="947.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="583.3" y="958.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="580.3" y="931.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="583.3" y="942.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="580.3" y="915.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="583.3" y="926.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="580.3" y="899.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="583.3" y="910.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="580.3" y="883.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="583.3" y="894.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="580.3" y="867.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="583.3" y="878.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="580.3" y="851.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="583.3" y="862.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="580.3" y="835.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="583.3" y="846.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="580.3" y="819.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="583.3" y="830.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="580.3" y="803.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="583.3" y="814.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="580.3" y="787.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="583.3" y="798.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.21%)</title><rect x="580.3" y="771.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="583.3" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.getGraph (1 samples, 0.21%)</title><rect x="582.7" y="1075.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.buildInitialGraph (1 samples, 0.21%)</title><rect x="582.7" y="1059.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (1 samples, 0.21%)</title><rect x="582.7" y="1043.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.21%)</title><rect x="582.7" y="1027.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.21%)</title><rect x="582.7" y="1011.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="585.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.21%)</title><rect x="582.7" y="995.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.21%)</title><rect x="582.7" y="979.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.7" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="582.7" y="963.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.7" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.21%)</title><rect x="582.7" y="947.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.7" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.21%)</title><rect x="582.7" y="931.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.7" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.21%)</title><rect x="582.7" y="915.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.7" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.21%)</title><rect x="582.7" y="899.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.21%)</title><rect x="582.7" y="883.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="585.7" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.21%)</title><rect x="582.7" y="867.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.7" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.21%)</title><rect x="582.7" y="851.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.7" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.21%)</title><rect x="582.7" y="835.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.7" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.21%)</title><rect x="582.7" y="819.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.7" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="582.7" y="803.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="585.7" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="582.7" y="787.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="585.7" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="582.7" y="771.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.7" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.21%)</title><rect x="582.7" y="755.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="585.7" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.21%)</title><rect x="582.7" y="739.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="585.7" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.21%)</title><rect x="582.7" y="723.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.7" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.createBytecodeParser (1 samples, 0.21%)</title><rect x="582.7" y="707.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.7" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.&lt;init&gt; (1 samples, 0.21%)</title><rect x="582.7" y="691.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.7" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.getBytecode (1 samples, 0.21%)</title><rect x="582.7" y="675.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.7" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.getClassfile (1 samples, 0.21%)</title><rect x="582.7" y="659.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.7" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/Classfile.&lt;init&gt; (1 samples, 0.21%)</title><rect x="582.7" y="643.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="585.7" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstantPool.&lt;init&gt; (1 samples, 0.21%)</title><rect x="582.7" y="627.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.7" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstantPool.readConstant (1 samples, 0.21%)</title><rect x="582.7" y="611.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="585.7" y="622.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readUTF (1 samples, 0.21%)</title><rect x="582.7" y="595.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.7" y="606.0"></text>
</g>
<g>
<title>java/io/DataInputStream.readUTF (1 samples, 0.21%)</title><rect x="582.7" y="579.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.7" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.21%)</title><rect x="582.7" y="563.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="585.7" y="574.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.21%)</title><rect x="582.7" y="547.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.21%)</title><rect x="582.7" y="531.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.7" y="542.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.21%)</title><rect x="582.7" y="515.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.7" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/IntegerSwitchNode.generate (1 samples, 0.21%)</title><rect x="585.2" y="1187.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.2" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitSwitch (1 samples, 0.21%)</title><rect x="585.2" y="1171.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/LIRGenerator.emitStrategySwitch (1 samples, 0.21%)</title><rect x="585.2" y="1155.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="588.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.hasherFor (1 samples, 0.21%)</title><rect x="585.2" y="1139.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="588.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/hashing/IntHasher.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="585.2" y="1123.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="588.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/nodes/ArrayEqualsNode.generate (1 samples, 0.21%)</title><rect x="587.7" y="1187.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="590.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotNodeLIRBuilder.lookupGraalStub (1 samples, 0.21%)</title><rect x="587.7" y="1171.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotNodeLIRBuilder.lookupForeignCall (1 samples, 0.21%)</title><rect x="587.7" y="1155.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="590.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (1 samples, 0.21%)</title><rect x="587.7" y="1139.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (1 samples, 0.21%)</title><rect x="587.7" y="1123.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="590.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.finalizeAddress (1 samples, 0.21%)</title><rect x="587.7" y="1107.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.getCode (1 samples, 0.21%)</title><rect x="587.7" y="1091.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="590.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.buildCompilationResult (1 samples, 0.21%)</title><rect x="587.7" y="1075.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/target/Backend.emitBackEnd (1 samples, 0.21%)</title><rect x="587.7" y="1059.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="590.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitBackEnd (1 samples, 0.21%)</title><rect x="587.7" y="1043.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitCode (1 samples, 0.21%)</title><rect x="587.7" y="1027.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="590.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCode (1 samples, 0.21%)</title><rect x="587.7" y="1011.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCodeBody (1 samples, 0.21%)</title><rect x="587.7" y="995.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="590.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emit (1 samples, 0.21%)</title><rect x="587.7" y="979.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="590.7" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emitBlock (1 samples, 0.21%)</title><rect x="587.7" y="963.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.7" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emitOp (1 samples, 0.21%)</title><rect x="587.7" y="947.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.7" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64LIRInstruction.emitCode (1 samples, 0.21%)</title><rect x="587.7" y="931.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.7" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ArrayEqualsOp.emitCode (1 samples, 0.21%)</title><rect x="587.7" y="915.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.7" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ArrayEqualsOp.emitArrayCompare (1 samples, 0.21%)</title><rect x="587.7" y="899.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="590.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ArrayEqualsOp.emitVectorCompare (1 samples, 0.21%)</title><rect x="587.7" y="883.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="590.7" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ArrayEqualsOp.emitVectorLoad1 (1 samples, 0.21%)</title><rect x="587.7" y="867.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.7" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ArrayEqualsOp.emitVectorLoad (1 samples, 0.21%)</title><rect x="587.7" y="851.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.7" y="862.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="587.7" y="835.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="590.7" y="846.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="587.7" y="819.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="590.7" y="830.0"></text>
</g>
<g>
<title>CodeBlob::is_compiled() const (1 samples, 0.21%)</title><rect x="587.7" y="803.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="590.7" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.matchBlock (3 samples, 0.63%)</title><rect x="590.1" y="1251.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.matchBlock (3 samples, 0.63%)</title><rect x="590.1" y="1235.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.1" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.matchComplexExpressions (3 samples, 0.63%)</title><rect x="590.1" y="1219.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.1" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchStatement.generate (3 samples, 0.63%)</title><rect x="590.1" y="1203.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.1" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeMatchRules_MatchStatementSet$MatchGenerator_ifCompareLogicCas.match (1 samples, 0.21%)</title><rect x="590.1" y="1187.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeMatchRules.ifCompareLogicCas (1 samples, 0.21%)</title><rect x="590.1" y="1171.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.21%)</title><rect x="590.1" y="1155.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.21%)</title><rect x="590.1" y="1139.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.21%)</title><rect x="590.1" y="1123.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.21%)</title><rect x="590.1" y="1107.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="593.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.21%)</title><rect x="590.1" y="1091.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.21%)</title><rect x="590.1" y="1075.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.21%)</title><rect x="590.1" y="1059.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.21%)</title><rect x="590.1" y="1043.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findConstructor (1 samples, 0.21%)</title><rect x="590.1" y="1027.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructor (1 samples, 0.21%)</title><rect x="590.1" y="1011.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorCommon (1 samples, 0.21%)</title><rect x="590.1" y="995.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.21%)</title><rect x="590.1" y="979.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.1" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makeAllocator (1 samples, 0.21%)</title><rect x="590.1" y="963.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.1" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="590.1" y="947.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="590.1" y="931.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.21%)</title><rect x="590.1" y="915.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.21%)</title><rect x="590.1" y="899.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.1" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.21%)</title><rect x="590.1" y="883.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.21%)</title><rect x="590.1" y="867.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.21%)</title><rect x="590.1" y="851.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.1" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.21%)</title><rect x="590.1" y="835.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitAnnotation (1 samples, 0.21%)</title><rect x="590.1" y="819.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/AnnotationWriter.create (1 samples, 0.21%)</title><rect x="590.1" y="803.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="593.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (1 samples, 0.21%)</title><rect x="590.1" y="787.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.put (1 samples, 0.21%)</title><rect x="590.1" y="771.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="593.1" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeMatchRules_MatchStatementSet$MatchGenerator_zeroExtend.match (1 samples, 0.21%)</title><rect x="592.6" y="1187.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeMatchRules.zeroExtend (1 samples, 0.21%)</title><rect x="592.6" y="1171.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="595.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.21%)</title><rect x="592.6" y="1155.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.21%)</title><rect x="592.6" y="1139.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.21%)</title><rect x="592.6" y="1123.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.21%)</title><rect x="592.6" y="1107.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="595.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.21%)</title><rect x="592.6" y="1091.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.21%)</title><rect x="592.6" y="1075.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.21%)</title><rect x="592.6" y="1059.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.21%)</title><rect x="592.6" y="1043.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findConstructor (1 samples, 0.21%)</title><rect x="592.6" y="1027.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (1 samples, 0.21%)</title><rect x="592.6" y="1011.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="595.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (1 samples, 0.21%)</title><rect x="592.6" y="995.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="595.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 0.21%)</title><rect x="592.6" y="979.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (1 samples, 0.21%)</title><rect x="592.6" y="963.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="595.6" y="974.0"></text>
</g>
<g>
<title>MHN_resolve_Mem (1 samples, 0.21%)</title><rect x="592.6" y="947.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="595.6" y="958.0"></text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (1 samples, 0.21%)</title><rect x="592.6" y="931.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="595.6" y="942.0"></text>
</g>
<g>
<title>java_lang_invoke_MethodType::as_signature(oopDesc*, bool) (1 samples, 0.21%)</title><rect x="592.6" y="915.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="595.6" y="926.0"></text>
</g>
<g>
<title>java_lang_invoke_MethodType::print_signature(oopDesc*, outputStream*) (1 samples, 0.21%)</title><rect x="592.6" y="899.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="595.6" y="910.0"></text>
</g>
<g>
<title>java_lang_Class::print_signature(oopDesc*, outputStream*) (1 samples, 0.21%)</title><rect x="592.6" y="883.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="595.6" y="894.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.21%)</title><rect x="592.6" y="867.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="595.6" y="878.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.21%)</title><rect x="592.6" y="851.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="595.6" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchContext.setResult (1 samples, 0.21%)</title><rect x="595.1" y="1187.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="598.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph$ScheduleResult.getBlockToNodesMap (1 samples, 0.21%)</title><rect x="595.1" y="1171.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.getLIRSuites (1 samples, 0.21%)</title><rect x="597.5" y="1411.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.5" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/SuitesProviderBase.getDefaultLIRSuites (1 samples, 0.21%)</title><rect x="597.5" y="1395.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.5" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotSuitesProvider.createLIRSuites (1 samples, 0.21%)</title><rect x="597.5" y="1379.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="600.5" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotSuitesCreator.createLIRSuites (1 samples, 0.21%)</title><rect x="597.5" y="1363.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.5" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64SuitesCreator.createLIRSuites (1 samples, 0.21%)</title><rect x="597.5" y="1347.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="600.5" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/DefaultSuitesCreator.createLIRSuites (1 samples, 0.21%)</title><rect x="597.5" y="1331.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="600.5" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/tiers/Suites.createLIRSuites (1 samples, 0.21%)</title><rect x="597.5" y="1315.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.5" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/CommunityCompilerConfiguration.createAllocationStage (1 samples, 0.21%)</title><rect x="597.5" y="1299.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="600.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="597.5" y="1283.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="597.5" y="1267.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="597.5" y="1251.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="597.5" y="1235.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="597.5" y="1219.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.5" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="597.5" y="1203.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="600.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="597.5" y="1187.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="600.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="597.5" y="1171.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="600.5" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="597.5" y="1155.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="600.5" y="1166.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="597.5" y="1139.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="600.5" y="1150.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="597.5" y="1123.0" width="2.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="600.5" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="597.5" y="1107.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="600.5" y="1118.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="597.5" y="1091.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="600.5" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="597.5" y="1075.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="600.5" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="597.5" y="1059.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="600.5" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="597.5" y="1043.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="600.5" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="597.5" y="1027.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="600.5" y="1038.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="597.5" y="1011.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="600.5" y="1022.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.21%)</title><rect x="597.5" y="995.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="600.5" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.getSuites (1 samples, 0.21%)</title><rect x="600.0" y="1411.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.0" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/SuitesProviderBase.getDefaultSuites (1 samples, 0.21%)</title><rect x="600.0" y="1395.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.0" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/AddressLoweringHotSpotSuitesProvider.createSuites (1 samples, 0.21%)</title><rect x="600.0" y="1379.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.0" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotSuitesProvider.createSuites (1 samples, 0.21%)</title><rect x="600.0" y="1363.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.0" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/DefaultSuitesCreator.createSuites (1 samples, 0.21%)</title><rect x="600.0" y="1347.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.0" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/tiers/Suites.createSuites (1 samples, 0.21%)</title><rect x="600.0" y="1331.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/CommunityCompilerConfiguration.createHighTier (1 samples, 0.21%)</title><rect x="600.0" y="1315.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="603.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="600.0" y="1299.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="600.0" y="1283.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="603.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="600.0" y="1267.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="600.0" y="1251.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="600.0" y="1235.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.0" y="1246.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="600.0" y="1219.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="600.0" y="1203.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="600.0" y="1187.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="600.0" y="1171.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="603.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="600.0" y="1155.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="600.0" y="1139.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="600.0" y="1123.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="600.0" y="1107.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.0" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="600.0" y="1091.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="600.0" y="1075.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.21%)</title><rect x="600.0" y="1059.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.21%)</title><rect x="600.0" y="1043.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.21%)</title><rect x="600.0" y="1027.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.0" y="1038.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.21%)</title><rect x="600.0" y="1011.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="603.0" y="1022.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.21%)</title><rect x="600.0" y="995.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="603.0" y="1006.0"></text>
</g>
<g>
<title>StringTable::intern(Handle, unsigned short const*, int, Thread*) (1 samples, 0.21%)</title><rect x="600.0" y="979.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="603.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.createGraph (11 samples, 2.30%)</title><rect x="602.5" y="1427.0" width="27.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.5" y="1438.0">o..</text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getSpeculationLog (1 samples, 0.21%)</title><rect x="602.5" y="1411.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.5" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.21%)</title><rect x="602.5" y="1395.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="605.5" y="1406.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1379.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="605.5" y="1390.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1363.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="605.5" y="1374.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1347.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="605.5" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1331.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="605.5" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1315.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="605.5" y="1326.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1299.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="605.5" y="1310.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1283.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="605.5" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1267.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="605.5" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="602.5" y="1251.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="605.5" y="1262.0"></text>
</g>
<g>
<title>Klass::set_java_mirror(Handle) (1 samples, 0.21%)</title><rect x="602.5" y="1235.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="605.5" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getIntrinsicGraph (9 samples, 1.88%)</title><rect x="604.9" y="1411.0" width="22.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.9" y="1422.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getIntrinsicGraph (9 samples, 1.88%)</title><rect x="604.9" y="1395.0" width="22.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.9" y="1406.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.42%)</title><rect x="604.9" y="1379.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.9" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.42%)</title><rect x="604.9" y="1363.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.9" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (2 samples, 0.42%)</title><rect x="604.9" y="1347.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (2 samples, 0.42%)</title><rect x="604.9" y="1331.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (2 samples, 0.42%)</title><rect x="604.9" y="1315.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (2 samples, 0.42%)</title><rect x="604.9" y="1299.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (2 samples, 0.42%)</title><rect x="604.9" y="1283.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (2 samples, 0.42%)</title><rect x="604.9" y="1267.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (2 samples, 0.42%)</title><rect x="604.9" y="1251.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (2 samples, 0.42%)</title><rect x="604.9" y="1235.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.9" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfZero (1 samples, 0.21%)</title><rect x="604.9" y="1219.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.9" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendConstant (1 samples, 0.21%)</title><rect x="604.9" y="1203.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.9" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.21%)</title><rect x="604.9" y="1187.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.unique (1 samples, 0.21%)</title><rect x="604.9" y="1171.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.9" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.21%)</title><rect x="604.9" y="1155.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.9" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.21%)</title><rect x="604.9" y="1139.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="607.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.21%)</title><rect x="604.9" y="1123.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findNodeInCache (1 samples, 0.21%)</title><rect x="604.9" y="1107.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.21%)</title><rect x="604.9" y="1091.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.21%)</title><rect x="604.9" y="1075.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="607.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.21%)</title><rect x="604.9" y="1059.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="607.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.compareKeys (1 samples, 0.21%)</title><rect x="604.9" y="1043.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.9" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$1.equals (1 samples, 0.21%)</title><rect x="604.9" y="1027.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="607.9" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.valueEquals (1 samples, 0.21%)</title><rect x="604.9" y="1011.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="607.9" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.dataEquals (1 samples, 0.21%)</title><rect x="604.9" y="995.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.9" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/Fields.getBoolean (1 samples, 0.21%)</title><rect x="604.9" y="979.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.9" y="990.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getBoolean (1 samples, 0.21%)</title><rect x="604.9" y="963.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.9" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="607.4" y="1219.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="610.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.21%)</title><rect x="607.4" y="1203.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.21%)</title><rect x="607.4" y="1187.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryNodePluginForInvocation (1 samples, 0.21%)</title><rect x="607.4" y="1171.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="610.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleInvoke (1 samples, 0.21%)</title><rect x="607.4" y="1155.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotWordOperationPlugin.handleInvoke (1 samples, 0.21%)</title><rect x="607.4" y="1139.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/word/WordOperationPlugin.processWordOperation (1 samples, 0.21%)</title><rect x="607.4" y="1123.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="610.4" y="1134.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="607.4" y="1107.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="610.4" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.21%)</title><rect x="607.4" y="1091.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="610.4" y="1102.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="607.4" y="1075.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="610.4" y="1086.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.21%)</title><rect x="607.4" y="1059.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="610.4" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.21%)</title><rect x="607.4" y="1043.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="610.4" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.21%)</title><rect x="607.4" y="1027.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="610.4" y="1038.0"></text>
</g>
<g>
<title>klassVtable::initialize_vtable(bool, Thread*) (1 samples, 0.21%)</title><rect x="607.4" y="1011.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="610.4" y="1022.0"></text>
</g>
<g>
<title>klassVtable::update_inherited_vtable(InstanceKlass*, methodHandle const&amp;, int, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="607.4" y="995.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="610.4" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getMethodSubstitution (7 samples, 1.46%)</title><rect x="609.9" y="1379.0" width="17.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.9" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.lookupInvocation (7 samples, 1.46%)</title><rect x="609.9" y="1363.0" width="17.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.9" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.get (7 samples, 1.46%)</title><rect x="609.9" y="1347.0" width="17.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.flushDeferrables (7 samples, 1.46%)</title><rect x="609.9" y="1331.0" width="17.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins$1.run (7 samples, 1.46%)</title><rect x="609.9" y="1315.0" width="17.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins.registerAESPlugins (1 samples, 0.21%)</title><rect x="609.9" y="1299.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="612.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="609.9" y="1283.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="609.9" y="1267.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="612.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="609.9" y="1251.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="609.9" y="1235.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="612.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="609.9" y="1219.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.21%)</title><rect x="609.9" y="1203.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.21%)</title><rect x="609.9" y="1187.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.21%)</title><rect x="609.9" y="1171.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.21%)</title><rect x="609.9" y="1155.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.21%)</title><rect x="609.9" y="1139.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.21%)</title><rect x="609.9" y="1123.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.21%)</title><rect x="609.9" y="1107.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.21%)</title><rect x="609.9" y="1091.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (1 samples, 0.21%)</title><rect x="609.9" y="1075.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.9" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/PluginFactory_HotSpotReplacementsUtil.registerPlugins (1 samples, 0.21%)</title><rect x="612.3" y="1299.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="612.3" y="1283.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.3" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="612.3" y="1267.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="612.3" y="1251.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="612.3" y="1235.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="612.3" y="1219.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.21%)</title><rect x="612.3" y="1203.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.21%)</title><rect x="612.3" y="1187.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.21%)</title><rect x="612.3" y="1171.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="615.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.21%)</title><rect x="612.3" y="1155.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.21%)</title><rect x="612.3" y="1139.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="615.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.21%)</title><rect x="612.3" y="1123.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.21%)</title><rect x="612.3" y="1107.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.21%)</title><rect x="612.3" y="1091.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.21%)</title><rect x="612.3" y="1075.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/PluginFactory_BreakpointNode.registerPlugins (1 samples, 0.21%)</title><rect x="614.8" y="1299.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="614.8" y="1283.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="614.8" y="1267.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="614.8" y="1251.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="614.8" y="1235.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="614.8" y="1219.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.8" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="614.8" y="1203.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="614.8" y="1187.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="614.8" y="1171.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.8" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="614.8" y="1155.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="617.8" y="1166.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="614.8" y="1139.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="617.8" y="1150.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="614.8" y="1123.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="617.8" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="614.8" y="1107.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="617.8" y="1118.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="614.8" y="1091.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="617.8" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance_klass(ClassFileParser const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="614.8" y="1075.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="617.8" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/StandardGraphBuilderPlugins.registerInvocationPlugins (1 samples, 0.21%)</title><rect x="617.3" y="1299.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.3" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/StandardGraphBuilderPlugins.registerFloatPlugins (1 samples, 0.21%)</title><rect x="617.3" y="1283.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="620.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="617.3" y="1267.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="617.3" y="1251.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="617.3" y="1235.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="617.3" y="1219.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="617.3" y="1203.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.3" y="1214.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="617.3" y="1187.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="617.3" y="1171.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="620.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="617.3" y="1155.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.3" y="1166.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="617.3" y="1139.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="620.3" y="1150.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="617.3" y="1123.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="620.3" y="1134.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="617.3" y="1107.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="620.3" y="1118.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="617.3" y="1091.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="620.3" y="1102.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="617.3" y="1075.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="620.3" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="617.3" y="1059.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="620.3" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="617.3" y="1043.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="620.3" y="1054.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.21%)</title><rect x="617.3" y="1027.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="620.3" y="1038.0"></text>
</g>
<g>
<title>HierarchyVisitor&lt;FindMethodsByErasedSig&gt;::push(InstanceKlass*, FindMethodsByErasedSig*) (1 samples, 0.21%)</title><rect x="617.3" y="1011.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="620.3" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/aarch64/PluginFactory_AArch64IntegerArithmeticSnippets.registerPlugins (1 samples, 0.21%)</title><rect x="619.7" y="1299.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="622.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="619.7" y="1283.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="622.7" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="619.7" y="1267.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="622.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="619.7" y="1251.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="622.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="619.7" y="1235.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="619.7" y="1219.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.7" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="619.7" y="1203.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="619.7" y="1187.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="619.7" y="1171.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="622.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="619.7" y="1155.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="622.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="619.7" y="1139.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="619.7" y="1123.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="619.7" y="1107.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="622.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="619.7" y="1091.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.7" y="1102.0"></text>
</g>
<g>
<title>java/security/CodeSource.&lt;init&gt; (1 samples, 0.21%)</title><rect x="619.7" y="1075.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="622.7" y="1086.0"></text>
</g>
<g>
<title>sun/net/util/URLUtil.urlNoFragString (1 samples, 0.21%)</title><rect x="619.7" y="1059.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="622.7" y="1070.0"></text>
</g>
<g>
<title>java/net/URL.getFile (1 samples, 0.21%)</title><rect x="619.7" y="1043.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="622.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/PluginFactory_ArrayCopyCallNode.registerPlugins (1 samples, 0.21%)</title><rect x="622.2" y="1299.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.21%)</title><rect x="622.2" y="1283.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.21%)</title><rect x="622.2" y="1267.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.21%)</title><rect x="622.2" y="1251.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.21%)</title><rect x="622.2" y="1235.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="625.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.21%)</title><rect x="622.2" y="1219.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.2" y="1230.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.21%)</title><rect x="622.2" y="1203.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.21%)</title><rect x="622.2" y="1187.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="625.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.21%)</title><rect x="622.2" y="1171.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.2" y="1182.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.21%)</title><rect x="622.2" y="1155.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="625.2" y="1166.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.21%)</title><rect x="622.2" y="1139.0" width="2.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="625.2" y="1150.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.21%)</title><rect x="622.2" y="1123.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="625.2" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.21%)</title><rect x="622.2" y="1107.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="625.2" y="1118.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="622.2" y="1091.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.2" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="622.2" y="1075.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="625.2" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="622.2" y="1059.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="625.2" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::parse_fields(ClassFileStream const*, bool, ClassFileParser::FieldAllocationCount*, ConstantPool*, int, unsigned short*, Thread*) (1 samples, 0.21%)</title><rect x="622.2" y="1043.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="625.2" y="1054.0"></text>
</g>
<g>
<title>parse_annotations(ConstantPool const*, unsigned char const*, int, AnnotationCollector*, ClassLoaderData*, bool, Thread*) (1 samples, 0.21%)</title><rect x="622.2" y="1027.0" width="2.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="625.2" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices$1$1.hasNext (1 samples, 0.21%)</title><rect x="624.7" y="1299.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.7" y="1310.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (1 samples, 0.21%)</title><rect x="624.7" y="1283.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.7" y="1294.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LayerLookupIterator.hasNext (1 samples, 0.21%)</title><rect x="624.7" y="1267.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="627.7" y="1278.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (1 samples, 0.21%)</title><rect x="624.7" y="1251.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="627.7" y="1262.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.findStaticProviderMethod (1 samples, 0.21%)</title><rect x="624.7" y="1235.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/System$2.getDeclaredPublicMethods (1 samples, 0.21%)</title><rect x="624.7" y="1219.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="627.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredPublicMethods (1 samples, 0.21%)</title><rect x="624.7" y="1203.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredMethods (1 samples, 0.21%)</title><rect x="624.7" y="1187.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods0 (1 samples, 0.21%)</title><rect x="624.7" y="1171.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="627.7" y="1182.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredMethods (1 samples, 0.21%)</title><rect x="624.7" y="1155.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="627.7" y="1166.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (1 samples, 0.21%)</title><rect x="624.7" y="1139.0" width="2.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="627.7" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::link_class(Thread*) (1 samples, 0.21%)</title><rect x="624.7" y="1123.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="627.7" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.21%)</title><rect x="624.7" y="1107.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="627.7" y="1118.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.21%)</title><rect x="624.7" y="1091.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="627.7" y="1102.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, JNIEnv_*, _jclass*) (1 samples, 0.21%)</title><rect x="624.7" y="1075.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="627.7" y="1086.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods(_jvmtiEnv*, _jclass*, int*, _jmethodID***) (1 samples, 0.21%)</title><rect x="624.7" y="1059.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="627.7" y="1070.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.21%)</title><rect x="624.7" y="1043.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="627.7" y="1054.0"></text>
</g>
<g>
<title>Method::ensure_jmethod_ids(ClassLoaderData*, int) (1 samples, 0.21%)</title><rect x="624.7" y="1027.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="627.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph$Builder.build (1 samples, 0.21%)</title><rect x="627.2" y="1411.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.&lt;init&gt; (1 samples, 0.21%)</title><rect x="627.2" y="1395.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.2" y="1406.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.fromMetaspace (1 samples, 0.21%)</title><rect x="629.6" y="1555.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.6" y="1566.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.createMethod (1 samples, 0.21%)</title><rect x="629.6" y="1539.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.6" y="1550.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.&lt;init&gt; (1 samples, 0.21%)</title><rect x="629.6" y="1523.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.6" y="1534.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupSignature (1 samples, 0.21%)</title><rect x="629.6" y="1507.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.6" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.21%)</title><rect x="629.6" y="1491.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="632.6" y="1502.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1475.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="632.6" y="1486.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1459.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="632.6" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1443.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="632.6" y="1454.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1427.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="632.6" y="1438.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1411.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="632.6" y="1422.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1395.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="632.6" y="1406.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1379.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="632.6" y="1390.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1363.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="632.6" y="1374.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1347.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="632.6" y="1358.0"></text>
</g>
<g>
<title>ClassFileParser::parse_interfaces(ClassFileStream const*, int, ConstantPool*, bool*, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1331.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="632.6" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1315.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="632.6" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1299.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="632.6" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1283.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="632.6" y="1294.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1267.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="632.6" y="1278.0"></text>
</g>
<g>
<title>ClassPathImageEntry::open_stream_for_loader(char const*, ClassLoaderData*, Thread*) (1 samples, 0.21%)</title><rect x="629.6" y="1251.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="632.6" y="1262.0"></text>
</g>
<g>
<title>JIMAGE_GetResource (1 samples, 0.21%)</title><rect x="629.6" y="1235.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="632.6" y="1246.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.21%)</title><rect x="629.6" y="1219.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="632.6" y="1230.0"></text>
</g>
<g>
<title>jdk/vm/ci/runtime/JVMCI.getRuntime (1 samples, 0.21%)</title><rect x="632.1" y="1555.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="635.1" y="1566.0"></text>
</g>
<g>
<title>jdk/vm/ci/runtime/JVMCI.initializeRuntime (1 samples, 0.21%)</title><rect x="632.1" y="1539.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.1" y="1550.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.runtime (1 samples, 0.21%)</title><rect x="632.1" y="1523.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.1" y="1534.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.&lt;init&gt; (1 samples, 0.21%)</title><rect x="632.1" y="1507.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.1" y="1518.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/amd64/AMD64HotSpotJVMCIBackendFactory.createJVMCIBackend (1 samples, 0.21%)</title><rect x="632.1" y="1491.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="635.1" y="1502.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/amd64/AMD64HotSpotJVMCIBackendFactory.createTarget (1 samples, 0.21%)</title><rect x="632.1" y="1475.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="635.1" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.21%)</title><rect x="632.1" y="1459.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="635.1" y="1470.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1443.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="635.1" y="1454.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1427.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="635.1" y="1438.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1411.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="635.1" y="1422.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1395.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="635.1" y="1406.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1379.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="635.1" y="1390.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1363.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="635.1" y="1374.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1347.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="635.1" y="1358.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1331.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="635.1" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1315.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="635.1" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1299.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="635.1" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.21%)</title><rect x="632.1" y="1283.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="635.1" y="1294.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="632.1" y="1267.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="635.1" y="1278.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.21%)</title><rect x="632.1" y="1251.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="635.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BytecodeStream.setBCI (1 samples, 0.21%)</title><rect x="634.6" y="1555.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.6" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.log (1 samples, 0.21%)</title><rect x="634.6" y="1539.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="637.6" y="1550.0"></text>
</g>
<g>
<title>sandbox/PokeHttpServer.main (3 samples, 0.63%)</title><rect x="637.0" y="1555.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="640.0" y="1566.0"></text>
</g>
<g>
<title>java/io/BufferedReader.readLine (1 samples, 0.21%)</title><rect x="637.0" y="1539.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.0" y="1550.0"></text>
</g>
<g>
<title>java/io/BufferedReader.readLine (1 samples, 0.21%)</title><rect x="637.0" y="1523.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.0" y="1534.0"></text>
</g>
<g>
<title>java/io/BufferedReader.fill (1 samples, 0.21%)</title><rect x="637.0" y="1507.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="640.0" y="1518.0"></text>
</g>
<g>
<title>java/io/InputStreamReader.read (1 samples, 0.21%)</title><rect x="637.0" y="1491.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.0" y="1502.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.read (1 samples, 0.21%)</title><rect x="637.0" y="1475.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.0" y="1486.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.implRead (1 samples, 0.21%)</title><rect x="637.0" y="1459.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.0" y="1470.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.inReady (1 samples, 0.21%)</title><rect x="637.0" y="1443.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.0" y="1454.0"></text>
</g>
<g>
<title>java/net/Socket$SocketInputStream.available (1 samples, 0.21%)</title><rect x="637.0" y="1427.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="640.0" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl$1.available (1 samples, 0.21%)</title><rect x="637.0" y="1411.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="640.0" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.available (1 samples, 0.21%)</title><rect x="637.0" y="1395.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="640.0" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.available (1 samples, 0.21%)</title><rect x="637.0" y="1379.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.0" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findNative (1 samples, 0.21%)</title><rect x="637.0" y="1363.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.0" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries.find (1 samples, 0.21%)</title><rect x="637.0" y="1347.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.0" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries$NativeLibraryImpl.find (1 samples, 0.21%)</title><rect x="637.0" y="1331.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="640.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/NativeLibraries.findEntry0 (1 samples, 0.21%)</title><rect x="637.0" y="1315.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="640.0" y="1326.0"></text>
</g>
<g>
<title>Java_jdk_internal_loader_NativeLibraries_findEntry0 (1 samples, 0.21%)</title><rect x="637.0" y="1299.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="640.0" y="1310.0"></text>
</g>
<g>
<title>JVM_FindLibraryEntry (1 samples, 0.21%)</title><rect x="637.0" y="1283.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="640.0" y="1294.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="637.0" y="1267.0" width="2.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="640.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.21%)</title><rect x="637.0" y="1251.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="640.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.21%)</title><rect x="637.0" y="1235.0" width="2.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="640.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.21%)</title><rect x="637.0" y="1219.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="640.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.21%)</title><rect x="637.0" y="1203.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="640.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.21%)</title><rect x="637.0" y="1187.0" width="2.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="640.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.21%)</title><rect x="637.0" y="1171.0" width="2.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="640.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800d64840.linkToTargetMethod (1 samples, 0.21%)</title><rect x="639.5" y="1539.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.5" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800d93040.invoke (1 samples, 0.21%)</title><rect x="639.5" y="1523.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.5" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.21%)</title><rect x="639.5" y="1507.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.stringOf (1 samples, 0.21%)</title><rect x="639.5" y="1491.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="642.5" y="1502.0"></text>
</g>
<g>
<title>java/util/Date.toString (1 samples, 0.21%)</title><rect x="639.5" y="1475.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.5" y="1486.0"></text>
</g>
<g>
<title>java/util/Date.normalize (1 samples, 0.21%)</title><rect x="639.5" y="1459.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.5" y="1470.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDefaultRef (1 samples, 0.21%)</title><rect x="639.5" y="1443.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.5" y="1454.0"></text>
</g>
<g>
<title>java/util/TimeZone.setDefaultZone (1 samples, 0.21%)</title><rect x="639.5" y="1427.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="642.5" y="1438.0"></text>
</g>
<g>
<title>java/util/TimeZone.getSystemTimeZoneID (1 samples, 0.21%)</title><rect x="639.5" y="1411.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.5" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::prepare_native_call(JavaThread*, Method*) (1 samples, 0.21%)</title><rect x="639.5" y="1395.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="642.5" y="1406.0"></text>
</g>
<g>
<title>NativeLookup::lookup(methodHandle const&amp;, bool&amp;, Thread*) (1 samples, 0.21%)</title><rect x="639.5" y="1379.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="642.5" y="1390.0"></text>
</g>
<g>
<title>NativeLookup::lookup_base(methodHandle const&amp;, bool&amp;, Thread*) (1 samples, 0.21%)</title><rect x="639.5" y="1363.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="642.5" y="1374.0"></text>
</g>
<g>
<title>NativeLookup::lookup_entry(methodHandle const&amp;, bool&amp;, Thread*) (1 samples, 0.21%)</title><rect x="639.5" y="1347.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="642.5" y="1358.0"></text>
</g>
<g>
<title>os::free(void*) (1 samples, 0.21%)</title><rect x="639.5" y="1331.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="642.5" y="1342.0"></text>
</g>
<g>
<title>java/net/ServerSocket.&lt;init&gt; (1 samples, 0.21%)</title><rect x="642.0" y="1539.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="645.0" y="1550.0"></text>
</g>
<g>
<title>java/net/ServerSocket.&lt;init&gt; (1 samples, 0.21%)</title><rect x="642.0" y="1523.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.0" y="1534.0"></text>
</g>
<g>
<title>java/net/ServerSocket.bind (1 samples, 0.21%)</title><rect x="642.0" y="1507.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.0" y="1518.0"></text>
</g>
<g>
<title>java/net/ServerSocket.getImpl (1 samples, 0.21%)</title><rect x="642.0" y="1491.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.0" y="1502.0"></text>
</g>
<g>
<title>java/net/ServerSocket.createImpl (1 samples, 0.21%)</title><rect x="642.0" y="1475.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="645.0" y="1486.0"></text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.create (1 samples, 0.21%)</title><rect x="642.0" y="1459.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="645.0" y="1470.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="642.0" y="1443.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.0" y="1454.0"></text>
</g>
<g>
<title>sun/net/ext/ExtendedSocketOptions.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="642.0" y="1427.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="645.0" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.21%)</title><rect x="642.0" y="1411.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.0" y="1422.0"></text>
</g>
<g>
<title>java/lang/Class.forName0 (1 samples, 0.21%)</title><rect x="642.0" y="1395.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="645.0" y="1406.0"></text>
</g>
<g>
<title>jdk/net/ExtendedSocketOptions.&lt;clinit&gt; (1 samples, 0.21%)</title><rect x="642.0" y="1379.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.0" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.21%)</title><rect x="642.0" y="1363.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="645.0" y="1374.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.21%)</title><rect x="642.0" y="1347.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="645.0" y="1358.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.21%)</title><rect x="642.0" y="1331.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="645.0" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.21%)</title><rect x="642.0" y="1315.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="645.0" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="642.0" y="1299.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="645.0" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="642.0" y="1283.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="645.0" y="1294.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.21%)</title><rect x="642.0" y="1267.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="645.0" y="1278.0"></text>
</g>
<g>
<title>ClassPathImageEntry::open_stream_for_loader(char const*, ClassLoaderData*, Thread*) (1 samples, 0.21%)</title><rect x="642.0" y="1251.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="645.0" y="1262.0"></text>
</g>
<g>
<title>JIMAGE_GetResource (1 samples, 0.21%)</title><rect x="642.0" y="1235.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="645.0" y="1246.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (1 samples, 0.21%)</title><rect x="642.0" y="1219.0" width="2.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="645.0" y="1230.0"></text>
</g>
<g>
<title>thread_start (221 samples, 46.23%)</title><rect x="644.4" y="1555.0" width="545.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="647.4" y="1566.0">thread_start</text>
</g>
<g>
<title>_pthread_start (221 samples, 46.23%)</title><rect x="644.4" y="1539.0" width="545.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="647.4" y="1550.0">_pthread_start</text>
</g>
<g>
<title>thread_native_entry(Thread*) (221 samples, 46.23%)</title><rect x="644.4" y="1523.0" width="545.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="647.4" y="1534.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (221 samples, 46.23%)</title><rect x="644.4" y="1507.0" width="545.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="647.4" y="1518.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 1.46%)</title><rect x="644.4" y="1491.0" width="17.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="647.4" y="1502.0"></text>
</g>
<g>
<title>G1EvacuateRegionsBaseTask::work(unsigned int) (6 samples, 1.26%)</title><rect x="644.4" y="1475.0" width="14.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="647.4" y="1486.0"></text>
</g>
<g>
<title>G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.84%)</title><rect x="644.4" y="1459.0" width="9.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="647.4" y="1470.0"></text>
</g>
<g>
<title>G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (1 samples, 0.21%)</title><rect x="644.4" y="1443.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="647.4" y="1454.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.21%)</title><rect x="644.4" y="1427.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="647.4" y="1438.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*) (1 samples, 0.21%)</title><rect x="644.4" y="1411.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="647.4" y="1422.0"></text>
</g>
<g>
<title>G1ScanHRForRegionClosure::do_claimed_block(unsigned int, unsigned long, unsigned long) (1 samples, 0.21%)</title><rect x="644.4" y="1395.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="647.4" y="1406.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.21%)</title><rect x="644.4" y="1379.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="647.4" y="1390.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.63%)</title><rect x="646.9" y="1443.0" width="7.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="649.9" y="1454.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.42%)</title><rect x="646.9" y="1427.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="649.9" y="1438.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.21%)</title><rect x="646.9" y="1411.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="649.9" y="1422.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.21%)</title><rect x="646.9" y="1395.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="649.9" y="1406.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, int, bool) (1 samples, 0.21%)</title><rect x="646.9" y="1379.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="649.9" y="1390.0"></text>
</g>
<g>
<title>void G1ParCopyClosure&lt;(G1Barrier)1, (G1Mark)0&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.21%)</title><rect x="646.9" y="1363.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="649.9" y="1374.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.21%)</title><rect x="646.9" y="1347.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="649.9" y="1358.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.21%)</title><rect x="646.9" y="1331.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="649.9" y="1342.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (1 samples, 0.21%)</title><rect x="646.9" y="1315.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="649.9" y="1326.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.21%)</title><rect x="649.4" y="1411.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="652.4" y="1422.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.21%)</title><rect x="649.4" y="1395.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="652.4" y="1406.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.21%)</title><rect x="649.4" y="1379.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="652.4" y="1390.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (1 samples, 0.21%)</title><rect x="649.4" y="1363.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="652.4" y="1374.0"></text>
</g>
<g>
<title>InterpreterOopMap::iterate_oop(OffsetClosure*) const (1 samples, 0.21%)</title><rect x="649.4" y="1347.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="652.4" y="1358.0"></text>
</g>
<g>
<title>void G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.21%)</title><rect x="649.4" y="1331.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="652.4" y="1342.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.21%)</title><rect x="649.4" y="1315.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="652.4" y="1326.0"></text>
</g>
<g>
<title>G1ParScanThreadState::do_partial_array(PartialArrayScanTask) (1 samples, 0.21%)</title><rect x="649.4" y="1299.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="652.4" y="1310.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.21%)</title><rect x="649.4" y="1283.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="652.4" y="1294.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.21%)</title><rect x="651.8" y="1427.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="654.8" y="1438.0"></text>
</g>
<g>
<title>void G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.21%)</title><rect x="651.8" y="1411.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="654.8" y="1422.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.21%)</title><rect x="651.8" y="1395.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="654.8" y="1406.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.21%)</title><rect x="651.8" y="1379.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="654.8" y="1390.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (1 samples, 0.21%)</title><rect x="651.8" y="1363.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="654.8" y="1374.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.21%)</title><rect x="651.8" y="1347.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="654.8" y="1358.0"></text>
</g>
<g>
<title>G1RemSet::scan_collection_set_regions(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases) (2 samples, 0.42%)</title><rect x="654.3" y="1459.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="657.3" y="1470.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_incremental_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned int, unsigned int) const (2 samples, 0.42%)</title><rect x="654.3" y="1443.0" width="4.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="657.3" y="1454.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_part_from(HeapRegionClosure*, HeapRegionClaimer*, unsigned long, unsigned long, unsigned int, unsigned int) const (2 samples, 0.42%)</title><rect x="654.3" y="1427.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="657.3" y="1438.0"></text>
</g>
<g>
<title>G1ScanCollectionSetRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.42%)</title><rect x="654.3" y="1411.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="657.3" y="1422.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (2 samples, 0.42%)</title><rect x="654.3" y="1395.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="657.3" y="1406.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (2 samples, 0.42%)</title><rect x="654.3" y="1379.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="657.3" y="1390.0"></text>
</g>
<g>
<title>nmethod::oops_do_process_weak(nmethod::OopsDoProcessor*) (2 samples, 0.42%)</title><rect x="654.3" y="1363.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="657.3" y="1374.0"></text>
</g>
<g>
<title>G1NmethodProcessor::do_regular_processing(nmethod*) (1 samples, 0.21%)</title><rect x="654.3" y="1347.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="657.3" y="1358.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.21%)</title><rect x="654.3" y="1331.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="657.3" y="1342.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::HeapRegionGatheringOopClosure::do_oop(oopDesc**) (1 samples, 0.21%)</title><rect x="654.3" y="1315.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="657.3" y="1326.0"></text>
</g>
<g>
<title>void G1ParCopyClosure&lt;(G1Barrier)2, (G1Mark)0&gt;::do_oop_work&lt;oopDesc*&gt;(oopDesc**) (1 samples, 0.21%)</title><rect x="654.3" y="1299.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="657.3" y="1310.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_to_threshold(unsigned int) (1 samples, 0.21%)</title><rect x="654.3" y="1283.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="657.3" y="1294.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.21%)</title><rect x="654.3" y="1267.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="657.3" y="1278.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(G1HeapRegionAttr, oopDesc*, markWord) (1 samples, 0.21%)</title><rect x="654.3" y="1251.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="657.3" y="1262.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceRefKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.21%)</title><rect x="654.3" y="1235.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="657.3" y="1246.0"></text>
</g>
<g>
<title>void InstanceRefKlass::oop_oop_iterate_ref_processing&lt;unsigned int, G1ScanEvacuatedObjClosure, AlwaysContains&gt;(oopDesc*, G1ScanEvacuatedObjClosure*, AlwaysContains&amp;) (1 samples, 0.21%)</title><rect x="654.3" y="1219.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="657.3" y="1230.0"></text>
</g>
<g>
<title>ReferenceProcessor::discover_reference(oopDesc*, ReferenceType) (1 samples, 0.21%)</title><rect x="654.3" y="1203.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="657.3" y="1214.0"></text>
</g>
<g>
<title>G1STWIsAliveClosure::do_object_b(oopDesc*) (1 samples, 0.21%)</title><rect x="654.3" y="1187.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="657.3" y="1198.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.21%)</title><rect x="656.8" y="1347.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="659.8" y="1358.0"></text>
</g>
<g>
<title>RelocIterator::advance_over_prefix() (1 samples, 0.21%)</title><rect x="656.8" y="1331.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="659.8" y="1342.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.21%)</title><rect x="659.2" y="1475.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="662.2" y="1486.0"></text>
</g>
<g>
<title>InlineCacheBuffer::update_inline_caches() (1 samples, 0.21%)</title><rect x="659.2" y="1459.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="662.2" y="1470.0"></text>
</g>
<g>
<title>free_tiny (1 samples, 0.21%)</title><rect x="659.2" y="1443.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="662.2" y="1454.0"></text>
</g>
<g>
<title>tiny_free_no_lock (1 samples, 0.21%)</title><rect x="659.2" y="1427.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="662.2" y="1438.0"></text>
</g>
<g>
<title>tiny_free_list_add_ptr (1 samples, 0.21%)</title><rect x="659.2" y="1411.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="662.2" y="1422.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (206 samples, 43.10%)</title><rect x="661.7" y="1491.0" width="508.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="664.7" y="1502.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (176 samples, 36.82%)</title><rect x="661.7" y="1475.0" width="434.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="664.7" y="1486.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (145 samples, 30.33%)</title><rect x="661.7" y="1459.0" width="358.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="664.7" y="1470.0">CompileBroker::invoke_compiler_on_method(CompileT..</text>
</g>
<g>
<title>CompileBroker::post_compile(CompilerThread*, CompileTask*, bool, ciEnv*, int, char const*) (2 samples, 0.42%)</title><rect x="661.7" y="1443.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="664.7" y="1454.0"></text>
</g>
<g>
<title>FormatStringEventLog&lt;256ul&gt;::log(Thread*, char const*, ...) (2 samples, 0.42%)</title><rect x="661.7" y="1427.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="664.7" y="1438.0"></text>
</g>
<g>
<title>jio_vsnprintf (2 samples, 0.42%)</title><rect x="661.7" y="1411.0" width="5.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="664.7" y="1422.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (2 samples, 0.42%)</title><rect x="661.7" y="1395.0" width="5.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="664.7" y="1406.0"></text>
</g>
<g>
<title>vsnprintf (2 samples, 0.42%)</title><rect x="661.7" y="1379.0" width="5.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="664.7" y="1390.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 0.21%)</title><rect x="664.2" y="1363.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="667.2" y="1374.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 0.21%)</title><rect x="664.2" y="1347.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="667.2" y="1358.0"></text>
</g>
<g>
<title>__vfprintf (1 samples, 0.21%)</title><rect x="664.2" y="1331.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="667.2" y="1342.0"></text>
</g>
<g>
<title>__sfvwrite (1 samples, 0.21%)</title><rect x="664.2" y="1315.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="667.2" y="1326.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (2 samples, 0.42%)</title><rect x="666.7" y="1443.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="669.7" y="1454.0"></text>
</g>
<g>
<title>CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool, long, long) (2 samples, 0.42%)</title><rect x="666.7" y="1427.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="669.7" y="1438.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (2 samples, 0.42%)</title><rect x="666.7" y="1411.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="669.7" y="1422.0"></text>
</g>
<g>
<title>Symbol::print_symbol_on(outputStream*) const (2 samples, 0.42%)</title><rect x="666.7" y="1395.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="669.7" y="1406.0"></text>
</g>
<g>
<title>os::strdup(char const*, MemoryType) (2 samples, 0.42%)</title><rect x="666.7" y="1379.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="669.7" y="1390.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.21%)</title><rect x="666.7" y="1363.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="669.7" y="1374.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType) (1 samples, 0.21%)</title><rect x="669.1" y="1363.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="672.1" y="1374.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.21%)</title><rect x="669.1" y="1347.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="672.1" y="1358.0"></text>
</g>
<g>
<title>szone_malloc (1 samples, 0.21%)</title><rect x="669.1" y="1331.0" width="2.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="672.1" y="1342.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (135 samples, 28.24%)</title><rect x="671.6" y="1443.0" width="333.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="674.6" y="1454.0">Compiler::compile_method(ciEnv*, ciMethod*, i..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (135 samples, 28.24%)</title><rect x="671.6" y="1427.0" width="333.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="674.6" y="1438.0">Compilation::Compilation(AbstractCompiler*, c..</text>
</g>
<g>
<title>Compilation::compile_method() (133 samples, 27.82%)</title><rect x="671.6" y="1411.0" width="328.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="674.6" y="1422.0">Compilation::compile_method()</text>
</g>
<g>
<title>Compilation::compile_java_method() (123 samples, 25.73%)</title><rect x="671.6" y="1395.0" width="303.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="674.6" y="1406.0">Compilation::compile_java_method()</text>
</g>
<g>
<title>CodeSection::initialize_shared_locs(relocInfo*, int) (1 samples, 0.21%)</title><rect x="671.6" y="1379.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="674.6" y="1390.0"></text>
</g>
<g>
<title>Compilation::build_hir() (73 samples, 15.27%)</title><rect x="674.1" y="1379.0" width="180.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="677.1" y="1390.0">Compilation::build_hir()</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (5 samples, 1.05%)</title><rect x="674.1" y="1363.0" width="12.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="677.1" y="1374.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.21%)</title><rect x="676.5" y="1347.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="679.5" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="676.5" y="1331.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="679.5" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="676.5" y="1315.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="679.5" y="1326.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.21%)</title><rect x="676.5" y="1299.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="679.5" y="1310.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.21%)</title><rect x="676.5" y="1283.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="679.5" y="1294.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (2 samples, 0.42%)</title><rect x="679.0" y="1347.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="682.0" y="1358.0"></text>
</g>
<g>
<title>ValueMap::increase_table_size() (1 samples, 0.21%)</title><rect x="681.5" y="1331.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="684.5" y="1342.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="681.5" y="1315.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="684.5" y="1326.0"></text>
</g>
<g>
<title>ValueMap::kill_field(ciField*, bool) (1 samples, 0.21%)</title><rect x="683.9" y="1347.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="686.9" y="1358.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (58 samples, 12.13%)</title><rect x="686.4" y="1363.0" width="143.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="689.4" y="1374.0">IR::IR(Compilation..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (58 samples, 12.13%)</title><rect x="686.4" y="1347.0" width="143.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="689.4" y="1358.0">IRScope::IRScope(C..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (58 samples, 12.13%)</title><rect x="686.4" y="1331.0" width="143.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="689.4" y="1342.0">GraphBuilder::Grap..</text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1315.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="689.4" y="1326.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1299.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="689.4" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1283.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="689.4" y="1294.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1267.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="689.4" y="1278.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1251.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="689.4" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1235.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="689.4" y="1246.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1219.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="689.4" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1203.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="689.4" y="1214.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1187.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="689.4" y="1198.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1171.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="689.4" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1155.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="689.4" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1139.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="689.4" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1123.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="689.4" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1107.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="689.4" y="1118.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1091.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="689.4" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1075.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="689.4" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1059.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="689.4" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1043.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="689.4" y="1054.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1027.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="689.4" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="1011.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="689.4" y="1022.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="995.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="689.4" y="1006.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="979.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="689.4" y="990.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="963.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="689.4" y="974.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="947.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="689.4" y="958.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="931.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="689.4" y="942.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="915.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="689.4" y="926.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="899.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="689.4" y="910.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="883.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="689.4" y="894.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="867.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="689.4" y="878.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="851.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="689.4" y="862.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="835.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="689.4" y="846.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="819.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="689.4" y="830.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="803.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="689.4" y="814.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="787.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="689.4" y="798.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="771.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="689.4" y="782.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="755.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="689.4" y="766.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="739.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="689.4" y="750.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="723.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="689.4" y="734.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="707.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="689.4" y="718.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="691.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="689.4" y="702.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="675.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="689.4" y="686.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="659.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="689.4" y="670.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="643.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="689.4" y="654.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="627.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="689.4" y="638.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="686.4" y="611.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="689.4" y="622.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.21%)</title><rect x="686.4" y="595.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="689.4" y="606.0"></text>
</g>
<g>
<title>Invoke::state_values_do(ValueVisitor*) (1 samples, 0.21%)</title><rect x="686.4" y="579.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="689.4" y="590.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.21%)</title><rect x="686.4" y="563.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="689.4" y="574.0"></text>
</g>
<g>
<title>non-virtual thunk to SubstitutionResolver::visit(Instruction**) (1 samples, 0.21%)</title><rect x="686.4" y="547.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="689.4" y="558.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (3 samples, 0.63%)</title><rect x="688.9" y="1315.0" width="7.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="691.9" y="1326.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (1 samples, 0.21%)</title><rect x="688.9" y="1299.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="691.9" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.21%)</title><rect x="688.9" y="1283.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="691.9" y="1294.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (2 samples, 0.42%)</title><rect x="691.3" y="1299.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="694.3" y="1310.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.21%)</title><rect x="693.8" y="1283.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="696.8" y="1294.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.21%)</title><rect x="693.8" y="1267.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="696.8" y="1278.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.21%)</title><rect x="693.8" y="1251.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="696.8" y="1262.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops() (1 samples, 0.21%)</title><rect x="696.3" y="1315.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="699.3" y="1326.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.21%)</title><rect x="696.3" y="1299.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="699.3" y="1310.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.21%)</title><rect x="696.3" y="1283.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="699.3" y="1294.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.21%)</title><rect x="696.3" y="1267.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="699.3" y="1278.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.21%)</title><rect x="696.3" y="1251.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="699.3" y="1262.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.21%)</title><rect x="696.3" y="1235.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="699.3" y="1246.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.21%)</title><rect x="696.3" y="1219.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="699.3" y="1230.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.21%)</title><rect x="696.3" y="1203.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="699.3" y="1214.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops(BlockBegin*, bool) (1 samples, 0.21%)</title><rect x="696.3" y="1187.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="699.3" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (53 samples, 11.09%)</title><rect x="698.7" y="1315.0" width="130.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="701.7" y="1326.0">GraphBuilder::it..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (53 samples, 11.09%)</title><rect x="698.7" y="1299.0" width="130.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="701.7" y="1310.0">GraphBuilder::it..</text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.21%)</title><rect x="698.7" y="1283.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="701.7" y="1294.0"></text>
</g>
<g>
<title>ValueStack::setup_phi_for_local(BlockBegin*, int) (1 samples, 0.21%)</title><rect x="698.7" y="1267.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="701.7" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.63%)</title><rect x="701.2" y="1283.0" width="7.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="704.2" y="1294.0"></text>
</g>
<g>
<title>ObjectType::as_ObjectType() (1 samples, 0.21%)</title><rect x="701.2" y="1267.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="704.2" y="1278.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.42%)</title><rect x="703.7" y="1267.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="706.7" y="1278.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.42%)</title><rect x="703.7" y="1251.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="706.7" y="1262.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (2 samples, 0.42%)</title><rect x="703.7" y="1235.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="706.7" y="1246.0"></text>
</g>
<g>
<title>ciConstantPoolCache::get(int) (1 samples, 0.21%)</title><rect x="703.7" y="1219.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="706.7" y="1230.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.21%)</title><rect x="706.2" y="1219.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="709.2" y="1230.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.21%)</title><rect x="706.2" y="1203.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="709.2" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::arithmetic_op(ValueType*, Bytecodes::Code, ValueStack*) (1 samples, 0.21%)</title><rect x="708.6" y="1283.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="711.6" y="1294.0"></text>
</g>
<g>
<title>ValueNumberingVisitor::do_ArithmeticOp(ArithmeticOp*) (1 samples, 0.21%)</title><rect x="708.6" y="1267.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="711.6" y="1278.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (46 samples, 9.62%)</title><rect x="711.1" y="1283.0" width="113.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="714.1" y="1294.0">GraphBuilder::..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (33 samples, 6.90%)</title><rect x="711.1" y="1267.0" width="81.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="714.1" y="1278.0">GraphBuil..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (33 samples, 6.90%)</title><rect x="711.1" y="1251.0" width="81.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="714.1" y="1262.0">GraphBuil..</text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (2 samples, 0.42%)</title><rect x="711.1" y="1235.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="714.1" y="1246.0"></text>
</g>
<g>
<title>Instruction::needs_exception_state() const (1 samples, 0.21%)</title><rect x="711.1" y="1219.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="714.1" y="1230.0"></text>
</g>
<g>
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.21%)</title><rect x="713.6" y="1219.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="716.6" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (29 samples, 6.07%)</title><rect x="716.0" y="1235.0" width="71.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="719.0" y="1246.0">GraphBui..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (29 samples, 6.07%)</title><rect x="716.0" y="1219.0" width="71.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="719.0" y="1230.0">GraphBui..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (5 samples, 1.05%)</title><rect x="716.0" y="1203.0" width="12.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="719.0" y="1214.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (5 samples, 1.05%)</title><rect x="716.0" y="1187.0" width="12.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="719.0" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (5 samples, 1.05%)</title><rect x="716.0" y="1171.0" width="12.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="719.0" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (5 samples, 1.05%)</title><rect x="716.0" y="1155.0" width="12.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="719.0" y="1166.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (5 samples, 1.05%)</title><rect x="716.0" y="1139.0" width="12.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="719.0" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.21%)</title><rect x="716.0" y="1123.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="719.0" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::find_interface_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.21%)</title><rect x="716.0" y="1107.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="719.0" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (3 samples, 0.63%)</title><rect x="718.5" y="1123.0" width="7.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="721.5" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (3 samples, 0.63%)</title><rect x="718.5" y="1107.0" width="7.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="721.5" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (3 samples, 0.63%)</title><rect x="718.5" y="1091.0" width="7.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="721.5" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="721.0" y="1075.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="724.0" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="721.0" y="1059.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="724.0" y="1070.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.21%)</title><rect x="721.0" y="1043.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="724.0" y="1054.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.21%)</title><rect x="723.4" y="1075.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="726.4" y="1086.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.21%)</title><rect x="723.4" y="1059.0" width="2.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="726.4" y="1070.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_instance_klass() const (1 samples, 0.21%)</title><rect x="725.9" y="1123.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="728.9" y="1134.0"></text>
</g>
<g>
<title>GraphBuilder::if_null(ValueType*, Instruction::Condition) (1 samples, 0.21%)</title><rect x="728.4" y="1203.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="731.4" y="1214.0"></text>
</g>
<g>
<title>ValueNumberingVisitor::do_Constant(Constant*) (1 samples, 0.21%)</title><rect x="728.4" y="1187.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="731.4" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (21 samples, 4.39%)</title><rect x="730.8" y="1203.0" width="51.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="733.8" y="1214.0">Graph..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (16 samples, 3.35%)</title><rect x="730.8" y="1187.0" width="39.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="733.8" y="1198.0">Gra..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (16 samples, 3.35%)</title><rect x="730.8" y="1171.0" width="39.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="733.8" y="1182.0">Gra..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (11 samples, 2.30%)</title><rect x="730.8" y="1155.0" width="27.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="733.8" y="1166.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (11 samples, 2.30%)</title><rect x="730.8" y="1139.0" width="27.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="733.8" y="1150.0">G..</text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.21%)</title><rect x="730.8" y="1123.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="733.8" y="1134.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.21%)</title><rect x="730.8" y="1107.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="733.8" y="1118.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.21%)</title><rect x="730.8" y="1091.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="733.8" y="1102.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.21%)</title><rect x="730.8" y="1075.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="733.8" y="1086.0"></text>
</g>
<g>
<title>BitMap::set_union(BitMap const&amp;) (1 samples, 0.21%)</title><rect x="730.8" y="1059.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="733.8" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (10 samples, 2.09%)</title><rect x="733.3" y="1123.0" width="24.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="736.3" y="1134.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 1.26%)</title><rect x="733.3" y="1107.0" width="14.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="736.3" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 1.26%)</title><rect x="733.3" y="1091.0" width="14.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="736.3" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 1.05%)</title><rect x="733.3" y="1075.0" width="12.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="736.3" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 1.05%)</title><rect x="733.3" y="1059.0" width="12.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="736.3" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.84%)</title><rect x="733.3" y="1043.0" width="9.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="736.3" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.63%)</title><rect x="733.3" y="1027.0" width="7.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="736.3" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.63%)</title><rect x="733.3" y="1011.0" width="7.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="736.3" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.42%)</title><rect x="733.3" y="995.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="736.3" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.42%)</title><rect x="733.3" y="979.0" width="4.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="736.3" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.42%)</title><rect x="733.3" y="963.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="736.3" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="733.3" y="947.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="736.3" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="733.3" y="931.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="736.3" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.21%)</title><rect x="733.3" y="915.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="736.3" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.21%)</title><rect x="733.3" y="899.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="736.3" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.21%)</title><rect x="733.3" y="883.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="736.3" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="733.3" y="867.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="736.3" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="733.3" y="851.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="736.3" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.21%)</title><rect x="733.3" y="835.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="736.3" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.21%)</title><rect x="733.3" y="819.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="736.3" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.21%)</title><rect x="733.3" y="803.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="736.3" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="733.3" y="787.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="736.3" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.21%)</title><rect x="733.3" y="771.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="736.3" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.21%)</title><rect x="733.3" y="755.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="736.3" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.21%)</title><rect x="733.3" y="739.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="736.3" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.21%)</title><rect x="733.3" y="723.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="736.3" y="734.0"></text>
</g>
<g>
<title>Instruction::as_Intrinsic() (1 samples, 0.21%)</title><rect x="733.3" y="707.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="736.3" y="718.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.21%)</title><rect x="735.8" y="947.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="738.8" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.21%)</title><rect x="735.8" y="931.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="738.8" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.21%)</title><rect x="735.8" y="915.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="738.8" y="926.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="735.8" y="899.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="738.8" y="910.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="735.8" y="883.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="738.8" y="894.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.21%)</title><rect x="735.8" y="867.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="738.8" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.21%)</title><rect x="738.2" y="995.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="741.2" y="1006.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(IRScope*, ValueStack*) (1 samples, 0.21%)</title><rect x="738.2" y="979.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="741.2" y="990.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="738.2" y="963.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="741.2" y="974.0"></text>
</g>
<g>
<title>as_BasicType(ValueType*) (1 samples, 0.21%)</title><rect x="740.7" y="1027.0" width="2.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="743.7" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.21%)</title><rect x="743.2" y="1043.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="746.2" y="1054.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.21%)</title><rect x="743.2" y="1027.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="746.2" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.21%)</title><rect x="745.6" y="1075.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="748.6" y="1086.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.21%)</title><rect x="745.6" y="1059.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="748.6" y="1070.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.21%)</title><rect x="745.6" y="1043.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="748.6" y="1054.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (1 samples, 0.21%)</title><rect x="745.6" y="1027.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="748.6" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.21%)</title><rect x="745.6" y="1011.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="748.6" y="1022.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.63%)</title><rect x="748.1" y="1107.0" width="7.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="751.1" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.42%)</title><rect x="750.6" y="1091.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="753.6" y="1102.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.21%)</title><rect x="750.6" y="1075.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="753.6" y="1086.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.21%)</title><rect x="750.6" y="1059.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="753.6" y="1070.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="750.6" y="1043.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="753.6" y="1054.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="750.6" y="1027.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="753.6" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="750.6" y="1011.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="753.6" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.21%)</title><rect x="750.6" y="995.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="753.6" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.21%)</title><rect x="750.6" y="979.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="753.6" y="990.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="753.1" y="1075.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="756.1" y="1086.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="753.1" y="1059.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="756.1" y="1070.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.21%)</title><rect x="753.1" y="1043.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="756.1" y="1054.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.21%)</title><rect x="753.1" y="1027.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="756.1" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.21%)</title><rect x="753.1" y="1011.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="756.1" y="1022.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.21%)</title><rect x="753.1" y="995.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="756.1" y="1006.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.21%)</title><rect x="753.1" y="979.0" width="2.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="756.1" y="990.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.21%)</title><rect x="755.5" y="1107.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="758.5" y="1118.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_leaf_type() (1 samples, 0.21%)</title><rect x="755.5" y="1091.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="758.5" y="1102.0"></text>
</g>
<g>
<title>ciInstanceKlass::compute_shared_has_subklass() (1 samples, 0.21%)</title><rect x="755.5" y="1075.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="758.5" y="1086.0"></text>
</g>
<g>
<title>Klass::subklass(bool) const (1 samples, 0.21%)</title><rect x="755.5" y="1059.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="758.5" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (3 samples, 0.63%)</title><rect x="758.0" y="1155.0" width="7.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="761.0" y="1166.0"></text>
</g>
<g>
<title>BlockListBuilder::mark_loops() (3 samples, 0.63%)</title><rect x="758.0" y="1139.0" width="7.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="761.0" y="1150.0"></text>
</g>
<g>
<title>ResourceBitMap::resize(unsigned long) (1 samples, 0.21%)</title><rect x="762.9" y="1123.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="765.9" y="1134.0"></text>
</g>
<g>
<title>unsigned long* BitMap::reallocate&lt;ResourceBitMapAllocator&gt;(ResourceBitMapAllocator const&amp;, unsigned long*, unsigned long, unsigned long, bool) (1 samples, 0.21%)</title><rect x="762.9" y="1107.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="765.9" y="1118.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="765.4" y="1155.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="768.4" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.21%)</title><rect x="767.9" y="1155.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="770.9" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.21%)</title><rect x="767.9" y="1139.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="770.9" y="1150.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.21%)</title><rect x="767.9" y="1123.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="770.9" y="1134.0"></text>
</g>
<g>
<title>ciReceiverTypeData::translate_receiver_data_from(ProfileData const*) (1 samples, 0.21%)</title><rect x="767.9" y="1107.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="770.9" y="1118.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="767.9" y="1091.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="770.9" y="1102.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="767.9" y="1075.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="770.9" y="1086.0"></text>
</g>
<g>
<title>ciObjArrayKlass::ciObjArrayKlass(Klass*) (1 samples, 0.21%)</title><rect x="767.9" y="1059.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="770.9" y="1070.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="767.9" y="1043.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="770.9" y="1054.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="767.9" y="1027.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="770.9" y="1038.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.21%)</title><rect x="767.9" y="1011.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="770.9" y="1022.0"></text>
</g>
<g>
<title>ciKlass::ciKlass(Klass*) (1 samples, 0.21%)</title><rect x="767.9" y="995.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="770.9" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.21%)</title><rect x="767.9" y="979.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="770.9" y="990.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.21%)</title><rect x="767.9" y="963.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="770.9" y="974.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (5 samples, 1.05%)</title><rect x="770.3" y="1187.0" width="12.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="773.3" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (5 samples, 1.05%)</title><rect x="770.3" y="1171.0" width="12.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="773.3" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.21%)</title><rect x="770.3" y="1155.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="773.3" y="1166.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.21%)</title><rect x="770.3" y="1139.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="773.3" y="1150.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.21%)</title><rect x="772.8" y="1155.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="775.8" y="1166.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.21%)</title><rect x="772.8" y="1139.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="775.8" y="1150.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.21%)</title><rect x="772.8" y="1123.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="775.8" y="1134.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_static_method(LinkInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="772.8" y="1107.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="775.8" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.21%)</title><rect x="772.8" y="1091.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="775.8" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.21%)</title><rect x="772.8" y="1075.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="775.8" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.21%)</title><rect x="772.8" y="1059.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="775.8" y="1070.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (3 samples, 0.63%)</title><rect x="775.3" y="1155.0" width="7.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="778.3" y="1166.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (3 samples, 0.63%)</title><rect x="775.3" y="1139.0" width="7.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="778.3" y="1150.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (3 samples, 0.63%)</title><rect x="775.3" y="1123.0" width="7.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="778.3" y="1134.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.21%)</title><rect x="775.3" y="1107.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="778.3" y="1118.0"></text>
</g>
<g>
<title>Symbol::increment_refcount() (1 samples, 0.21%)</title><rect x="775.3" y="1091.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="778.3" y="1102.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.42%)</title><rect x="777.7" y="1107.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="780.7" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.42%)</title><rect x="777.7" y="1091.0" width="5.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="780.7" y="1102.0"></text>
</g>
<g>
<title>Mutex::lock() (1 samples, 0.21%)</title><rect x="777.7" y="1075.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="780.7" y="1086.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.21%)</title><rect x="777.7" y="1059.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="780.7" y="1070.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="777.7" y="1043.0" width="2.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="780.7" y="1054.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="777.7" y="1027.0" width="2.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="780.7" y="1038.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.21%)</title><rect x="780.2" y="1075.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="783.2" y="1086.0"></text>
</g>
<g>
<title>os::current_thread_id() (1 samples, 0.21%)</title><rect x="780.2" y="1059.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="783.2" y="1070.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.21%)</title><rect x="780.2" y="1043.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="783.2" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.21%)</title><rect x="782.7" y="1203.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="785.7" y="1214.0"></text>
</g>
<g>
<title>Dependencies::assert_has_no_finalizable_subclasses(ciKlass*) (1 samples, 0.21%)</title><rect x="782.7" y="1187.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="785.7" y="1198.0"></text>
</g>
<g>
<title>GrowableArray&lt;ciBaseObject*&gt;::append(ciBaseObject* const&amp;) (1 samples, 0.21%)</title><rect x="782.7" y="1171.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="785.7" y="1182.0"></text>
</g>
<g>
<title>NewInstance::exact_type() const (1 samples, 0.21%)</title><rect x="785.1" y="1203.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="788.1" y="1214.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.42%)</title><rect x="787.6" y="1235.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="790.6" y="1246.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.21%)</title><rect x="790.1" y="1219.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="793.1" y="1230.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="790.1" y="1203.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="793.1" y="1214.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="790.1" y="1187.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="793.1" y="1198.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.21%)</title><rect x="790.1" y="1171.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="793.1" y="1182.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.21%)</title><rect x="790.1" y="1155.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="793.1" y="1166.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (9 samples, 1.88%)</title><rect x="792.6" y="1267.0" width="22.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="795.6" y="1278.0">c..</text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (9 samples, 1.88%)</title><rect x="792.6" y="1251.0" width="22.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="795.6" y="1262.0">c..</text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.21%)</title><rect x="792.6" y="1235.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="795.6" y="1246.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.21%)</title><rect x="792.6" y="1219.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="795.6" y="1230.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.21%)</title><rect x="792.6" y="1203.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="795.6" y="1214.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="792.6" y="1187.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="795.6" y="1198.0"></text>
</g>
<g>
<title>Method::is_not_compilable(int) const (1 samples, 0.21%)</title><rect x="792.6" y="1171.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="795.6" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (8 samples, 1.67%)</title><rect x="795.0" y="1235.0" width="19.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="798.0" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (7 samples, 1.46%)</title><rect x="797.5" y="1219.0" width="17.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="800.5" y="1230.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (7 samples, 1.46%)</title><rect x="797.5" y="1203.0" width="17.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="800.5" y="1214.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (7 samples, 1.46%)</title><rect x="797.5" y="1187.0" width="17.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="800.5" y="1198.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.21%)</title><rect x="797.5" y="1171.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="800.5" y="1182.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.21%)</title><rect x="797.5" y="1155.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="800.5" y="1166.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.21%)</title><rect x="797.5" y="1139.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="800.5" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (6 samples, 1.26%)</title><rect x="800.0" y="1171.0" width="14.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="803.0" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::get_unloaded_klass(ciKlass*, ciSymbol*, bool) (1 samples, 0.21%)</title><rect x="800.0" y="1155.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="803.0" y="1166.0"></text>
</g>
<g>
<title>pthread_mutex_trylock (1 samples, 0.21%)</title><rect x="802.4" y="1155.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="805.4" y="1166.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (4 samples, 0.84%)</title><rect x="804.9" y="1155.0" width="9.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="807.9" y="1166.0"></text>
</g>
<g>
<title>os::current_thread_id() (3 samples, 0.63%)</title><rect x="804.9" y="1139.0" width="7.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="807.9" y="1150.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (2 samples, 0.42%)</title><rect x="807.4" y="1123.0" width="4.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="810.4" y="1134.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.21%)</title><rect x="812.3" y="1139.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="815.3" y="1150.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (4 samples, 0.84%)</title><rect x="814.8" y="1267.0" width="9.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="817.8" y="1278.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (3 samples, 0.63%)</title><rect x="814.8" y="1251.0" width="7.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="817.8" y="1262.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (3 samples, 0.63%)</title><rect x="814.8" y="1235.0" width="7.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="817.8" y="1246.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (2 samples, 0.42%)</title><rect x="817.2" y="1219.0" width="5.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="820.2" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (2 samples, 0.42%)</title><rect x="817.2" y="1203.0" width="5.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="820.2" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (2 samples, 0.42%)</title><rect x="817.2" y="1187.0" width="5.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="820.2" y="1198.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.21%)</title><rect x="822.2" y="1251.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="825.2" y="1262.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call_or_null(Klass*, LinkInfo const&amp;) (1 samples, 0.21%)</title><rect x="822.2" y="1235.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="825.2" y="1246.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="822.2" y="1219.0" width="2.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="825.2" y="1230.0"></text>
</g>
<g>
<title>Instruction::as_Phi() (1 samples, 0.21%)</title><rect x="824.6" y="1283.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="827.6" y="1294.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_instance_klass() const (1 samples, 0.21%)</title><rect x="827.1" y="1283.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="830.1" y="1294.0"></text>
</g>
<g>
<title>IR::compute_code() (1 samples, 0.21%)</title><rect x="829.6" y="1363.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="832.6" y="1374.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::ComputeLinearScanOrder(Compilation*, BlockBegin*) (1 samples, 0.21%)</title><rect x="829.6" y="1347.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="832.6" y="1358.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_order(BlockBegin*) (1 samples, 0.21%)</title><rect x="829.6" y="1331.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="832.6" y="1342.0"></text>
</g>
<g>
<title>ComputeLinearScanOrder::compute_dominator_impl(BlockBegin*, BlockBegin*) (1 samples, 0.21%)</title><rect x="829.6" y="1315.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="832.6" y="1326.0"></text>
</g>
<g>
<title>IR::compute_use_counts() (3 samples, 0.63%)</title><rect x="832.1" y="1363.0" width="7.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="835.1" y="1374.0"></text>
</g>
<g>
<title>BlockList::iterate_backward(BlockClosure*) (2 samples, 0.42%)</title><rect x="832.1" y="1347.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="835.1" y="1358.0"></text>
</g>
<g>
<title>UseCountComputer::uses_do(Instruction**) (1 samples, 0.21%)</title><rect x="832.1" y="1331.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="835.1" y="1342.0"></text>
</g>
<g>
<title>non-virtual thunk to UseCountComputer::block_do(BlockBegin*) (1 samples, 0.21%)</title><rect x="834.5" y="1331.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="837.5" y="1342.0"></text>
</g>
<g>
<title>StateSplit::state_values_do(ValueVisitor*) (1 samples, 0.21%)</title><rect x="834.5" y="1315.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="837.5" y="1326.0"></text>
</g>
<g>
<title>Instruction::as_Constant() (1 samples, 0.21%)</title><rect x="837.0" y="1347.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="840.0" y="1358.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (2 samples, 0.42%)</title><rect x="839.5" y="1363.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="842.5" y="1374.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (2 samples, 0.42%)</title><rect x="839.5" y="1347.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="842.5" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::visit(InstructionVisitor*) (1 samples, 0.21%)</title><rect x="841.9" y="1331.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="844.9" y="1342.0"></text>
</g>
<g>
<title>IR::optimize_blocks() (3 samples, 0.63%)</title><rect x="844.4" y="1363.0" width="7.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="847.4" y="1374.0"></text>
</g>
<g>
<title>Optimizer::eliminate_blocks() (1 samples, 0.21%)</title><rect x="844.4" y="1347.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="847.4" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.21%)</title><rect x="844.4" y="1331.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="847.4" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="844.4" y="1315.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="847.4" y="1326.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="844.4" y="1299.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="847.4" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="844.4" y="1283.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="847.4" y="1294.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="844.4" y="1267.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="847.4" y="1278.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="844.4" y="1251.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="847.4" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="844.4" y="1235.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="847.4" y="1246.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="844.4" y="1219.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="847.4" y="1230.0"></text>
</g>
<g>
<title>BlockMerger::block_do(BlockBegin*) (1 samples, 0.21%)</title><rect x="844.4" y="1203.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="847.4" y="1214.0"></text>
</g>
<g>
<title>BlockMerger::try_merge(BlockBegin*) (1 samples, 0.21%)</title><rect x="844.4" y="1187.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="847.4" y="1198.0"></text>
</g>
<g>
<title>BlockBegin::remove_predecessor(BlockBegin*) (1 samples, 0.21%)</title><rect x="844.4" y="1171.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="847.4" y="1182.0"></text>
</g>
<g>
<title>Optimizer::eliminate_conditional_expressions() (2 samples, 0.42%)</title><rect x="846.9" y="1347.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="849.9" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.42%)</title><rect x="846.9" y="1331.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="849.9" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.42%)</title><rect x="846.9" y="1315.0" width="4.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="849.9" y="1326.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.42%)</title><rect x="846.9" y="1299.0" width="4.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="849.9" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.42%)</title><rect x="846.9" y="1283.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="849.9" y="1294.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="846.9" y="1267.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="849.9" y="1278.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="846.9" y="1251.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="849.9" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="846.9" y="1235.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="849.9" y="1246.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="846.9" y="1219.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="849.9" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="846.9" y="1203.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="849.9" y="1214.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.21%)</title><rect x="846.9" y="1187.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="849.9" y="1198.0"></text>
</g>
<g>
<title>BlockBegin::state_values_do(ValueVisitor*) (1 samples, 0.21%)</title><rect x="846.9" y="1171.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="849.9" y="1182.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.21%)</title><rect x="846.9" y="1155.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="849.9" y="1166.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.21%)</title><rect x="849.3" y="1267.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="852.3" y="1278.0"></text>
</g>
<g>
<title>Instruction::state_values_do(ValueVisitor*) (1 samples, 0.21%)</title><rect x="849.3" y="1251.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="852.3" y="1262.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.21%)</title><rect x="849.3" y="1235.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="852.3" y="1246.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 0.21%)</title><rect x="851.8" y="1363.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="854.8" y="1374.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.21%)</title><rect x="851.8" y="1347.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="854.8" y="1358.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="851.8" y="1331.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="854.8" y="1342.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="851.8" y="1315.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="854.8" y="1326.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="851.8" y="1299.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="854.8" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="851.8" y="1283.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="854.8" y="1294.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="851.8" y="1267.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="854.8" y="1278.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="851.8" y="1251.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="854.8" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.21%)</title><rect x="851.8" y="1235.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="854.8" y="1246.0"></text>
</g>
<g>
<title>CriticalEdgeFinder::block_do(BlockBegin*) (1 samples, 0.21%)</title><rect x="851.8" y="1219.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="854.8" y="1230.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (6 samples, 1.26%)</title><rect x="854.3" y="1379.0" width="14.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="857.3" y="1390.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (6 samples, 1.26%)</title><rect x="854.3" y="1363.0" width="14.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="857.3" y="1374.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (6 samples, 1.26%)</title><rect x="854.3" y="1347.0" width="14.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="857.3" y="1358.0"></text>
</g>
<g>
<title>LIR_Assembler::comp_op(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_Op2*) (1 samples, 0.21%)</title><rect x="854.3" y="1331.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="857.3" y="1342.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 0.21%)</title><rect x="856.7" y="1331.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="859.7" y="1342.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.21%)</title><rect x="856.7" y="1315.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="859.7" y="1326.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.21%)</title><rect x="856.7" y="1299.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="859.7" y="1310.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.21%)</title><rect x="856.7" y="1283.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="859.7" y="1294.0"></text>
</g>
<g>
<title>DIR_Chunk* GrowableArray&lt;DIR_Chunk*&gt;::insert_sorted&lt;&amp;(DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;))&gt;(DIR_Chunk* const&amp;) (1 samples, 0.21%)</title><rect x="856.7" y="1267.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="859.7" y="1278.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (3 samples, 0.63%)</title><rect x="859.2" y="1331.0" width="7.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="862.2" y="1342.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (3 samples, 0.63%)</title><rect x="859.2" y="1315.0" width="7.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="862.2" y="1326.0"></text>
</g>
<g>
<title>DebugInformationRecorder::add_non_safepoint(int) (1 samples, 0.21%)</title><rect x="861.7" y="1299.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="864.7" y="1310.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.21%)</title><rect x="864.1" y="1299.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="867.1" y="1310.0"></text>
</g>
<g>
<title>OopRecorder::find_index(Metadata*) (1 samples, 0.21%)</title><rect x="864.1" y="1283.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="867.1" y="1294.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.21%)</title><rect x="864.1" y="1267.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="867.1" y="1278.0"></text>
</g>
<g>
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (1 samples, 0.21%)</title><rect x="866.6" y="1331.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="869.6" y="1342.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (1 samples, 0.21%)</title><rect x="866.6" y="1315.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="869.6" y="1326.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (1 samples, 0.21%)</title><rect x="866.6" y="1299.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="869.6" y="1310.0"></text>
</g>
<g>
<title>ciKlass::super_check_offset() (1 samples, 0.21%)</title><rect x="866.6" y="1283.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="869.6" y="1294.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (42 samples, 8.79%)</title><rect x="869.1" y="1379.0" width="103.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="872.1" y="1390.0">Compilation:..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (7 samples, 1.46%)</title><rect x="869.1" y="1363.0" width="17.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="872.1" y="1374.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (7 samples, 1.46%)</title><rect x="869.1" y="1347.0" width="17.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="872.1" y="1358.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (2 samples, 0.42%)</title><rect x="869.1" y="1331.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="872.1" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::increment_invocation_counter(CodeEmitInfo*) (1 samples, 0.21%)</title><rect x="869.1" y="1315.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="872.1" y="1326.0"></text>
</g>
<g>
<title>ciEnv::comp_level() (1 samples, 0.21%)</title><rect x="869.1" y="1299.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="872.1" y="1310.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="871.5" y="1315.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="874.5" y="1326.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.21%)</title><rect x="874.0" y="1331.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="877.0" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.21%)</title><rect x="874.0" y="1315.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="877.0" y="1326.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (1 samples, 0.21%)</title><rect x="876.5" y="1331.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="879.5" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.21%)</title><rect x="876.5" y="1315.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="879.5" y="1326.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.21%)</title><rect x="876.5" y="1299.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="879.5" y="1310.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.21%)</title><rect x="876.5" y="1283.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="879.5" y="1294.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.21%)</title><rect x="876.5" y="1267.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="879.5" y="1278.0"></text>
</g>
<g>
<title>LIRGenerator::do_NewInstance(NewInstance*) (1 samples, 0.21%)</title><rect x="879.0" y="1331.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="882.0" y="1342.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.21%)</title><rect x="879.0" y="1315.0" width="2.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="882.0" y="1326.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.21%)</title><rect x="879.0" y="1299.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="882.0" y="1310.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.21%)</title><rect x="879.0" y="1283.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="882.0" y="1294.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.21%)</title><rect x="879.0" y="1267.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="882.0" y="1278.0"></text>
</g>
<g>
<title>LIRItem::load_item_force(LIR_OprDesc*) (1 samples, 0.21%)</title><rect x="881.4" y="1331.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="884.4" y="1342.0"></text>
</g>
<g>
<title>LIR_List::LIR_List(Compilation*, BlockBegin*) (1 samples, 0.21%)</title><rect x="883.9" y="1331.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="886.9" y="1342.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (35 samples, 7.32%)</title><rect x="886.4" y="1363.0" width="86.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="889.4" y="1374.0">LinearScan..</text>
</g>
<g>
<title>LinearScan::allocate_registers() (10 samples, 2.09%)</title><rect x="886.4" y="1347.0" width="24.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="889.4" y="1358.0">L..</text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.21%)</title><rect x="888.8" y="1331.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="891.8" y="1342.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (8 samples, 1.67%)</title><rect x="891.3" y="1331.0" width="19.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="894.3" y="1342.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (8 samples, 1.67%)</title><rect x="891.3" y="1315.0" width="19.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="894.3" y="1326.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.42%)</title><rect x="896.2" y="1299.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="899.2" y="1310.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.21%)</title><rect x="898.7" y="1283.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="901.7" y="1294.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (2 samples, 0.42%)</title><rect x="901.2" y="1299.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="904.2" y="1310.0"></text>
</g>
<g>
<title>LinearScanWalker::spill_collect_inactive_any(Interval*) (1 samples, 0.21%)</title><rect x="903.6" y="1283.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="906.6" y="1294.0"></text>
</g>
<g>
<title>LinearScanWalker::split_and_spill_interval(Interval*) (1 samples, 0.21%)</title><rect x="906.1" y="1299.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="909.1" y="1310.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (1 samples, 0.21%)</title><rect x="906.1" y="1283.0" width="2.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="909.1" y="1294.0"></text>
</g>
<g>
<title>LinearScanWalker::find_optimal_split_pos(Interval*, int, int, bool) (1 samples, 0.21%)</title><rect x="906.1" y="1267.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="909.1" y="1278.0"></text>
</g>
<g>
<title>LinearScanWalker::split_for_spilling(Interval*) (1 samples, 0.21%)</title><rect x="908.6" y="1299.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="911.6" y="1310.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (10 samples, 2.09%)</title><rect x="911.0" y="1347.0" width="24.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="914.0" y="1358.0">L..</text>
</g>
<g>
<title>CodeEmitInfo::interpreter_frame_size() const (1 samples, 0.21%)</title><rect x="913.5" y="1331.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="916.5" y="1342.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.21%)</title><rect x="916.0" y="1331.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="919.0" y="1342.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (2 samples, 0.42%)</title><rect x="918.5" y="1331.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="921.5" y="1342.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.63%)</title><rect x="923.4" y="1331.0" width="7.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="926.4" y="1342.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.21%)</title><rect x="928.3" y="1315.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="931.3" y="1326.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.21%)</title><rect x="928.3" y="1299.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="931.3" y="1310.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (2 samples, 0.42%)</title><rect x="930.8" y="1331.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="933.8" y="1342.0"></text>
</g>
<g>
<title>ValueStack::total_locks_size() const (1 samples, 0.21%)</title><rect x="933.3" y="1315.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="936.3" y="1326.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (7 samples, 1.46%)</title><rect x="935.7" y="1347.0" width="17.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="938.7" y="1358.0"></text>
</g>
<g>
<title>LIRGenerator::is_vreg_flag_set(int, LIRGenerator::VregFlag) (1 samples, 0.21%)</title><rect x="943.1" y="1331.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="946.1" y="1342.0"></text>
</g>
<g>
<title>LinearScan::add_def(int, int, IntervalUseKind, BasicType) (1 samples, 0.21%)</title><rect x="945.6" y="1331.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="948.6" y="1342.0"></text>
</g>
<g>
<title>LinearScan::create_interval(int) (1 samples, 0.21%)</title><rect x="945.6" y="1315.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="948.6" y="1326.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.21%)</title><rect x="945.6" y="1299.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="948.6" y="1310.0"></text>
</g>
<g>
<title>LinearScan::add_temp(int, int, IntervalUseKind, BasicType) (1 samples, 0.21%)</title><rect x="948.1" y="1331.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="951.1" y="1342.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_output_operand(LIR_Op*, LIR_OprDesc*) (1 samples, 0.21%)</title><rect x="950.5" y="1331.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="953.5" y="1342.0"></text>
</g>
<g>
<title>LinearScan::compute_global_live_sets() (1 samples, 0.21%)</title><rect x="953.0" y="1347.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="956.0" y="1358.0"></text>
</g>
<g>
<title>BitMap::set_from(BitMap const&amp;) (1 samples, 0.21%)</title><rect x="953.0" y="1331.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="956.0" y="1342.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (2 samples, 0.42%)</title><rect x="955.5" y="1347.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="958.5" y="1358.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.21%)</title><rect x="957.9" y="1331.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="960.9" y="1342.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (3 samples, 0.63%)</title><rect x="960.4" y="1347.0" width="7.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="963.4" y="1358.0"></text>
</g>
<g>
<title>BitMap::set_from(BitMap const&amp;) (1 samples, 0.21%)</title><rect x="960.4" y="1331.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="963.4" y="1342.0"></text>
</g>
<g>
<title>LIR_List::append(LIR_InsertionBuffer*) (1 samples, 0.21%)</title><rect x="962.9" y="1331.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.9" y="1342.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long, bool) (1 samples, 0.21%)</title><rect x="965.4" y="1331.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="968.4" y="1342.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="965.4" y="1315.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="968.4" y="1326.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_handlers() (1 samples, 0.21%)</title><rect x="967.8" y="1347.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="970.8" y="1358.0"></text>
</g>
<g>
<title>LIR_OprPtr::as_address() (1 samples, 0.21%)</title><rect x="967.8" y="1331.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="970.8" y="1342.0"></text>
</g>
<g>
<title>LinearScan::use_kind_of_output_operand(LIR_Op*, LIR_OprDesc*) (1 samples, 0.21%)</title><rect x="970.3" y="1347.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="973.3" y="1358.0"></text>
</g>
<g>
<title>FrameMap::FrameMap(ciMethod*, int, int) (1 samples, 0.21%)</title><rect x="972.8" y="1379.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="975.8" y="1390.0"></text>
</g>
<g>
<title>FrameMap::signature_type_array_for(ciMethod const*) (1 samples, 0.21%)</title><rect x="972.8" y="1363.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="975.8" y="1374.0"></text>
</g>
<g>
<title>Compilation::initialize() (3 samples, 0.63%)</title><rect x="975.2" y="1395.0" width="7.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="978.2" y="1406.0"></text>
</g>
<g>
<title>DebugInformationRecorder::DebugInformationRecorder(OopRecorder*) (1 samples, 0.21%)</title><rect x="975.2" y="1379.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="978.2" y="1390.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="975.2" y="1363.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="978.2" y="1374.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="975.2" y="1347.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="978.2" y="1358.0"></text>
</g>
<g>
<title>Dependencies::initialize(ciEnv*) (2 samples, 0.42%)</title><rect x="977.7" y="1379.0" width="4.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="980.7" y="1390.0"></text>
</g>
<g>
<title>FrameMap::FrameMap(ciMethod*, int, int) (1 samples, 0.21%)</title><rect x="982.6" y="1395.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="985.6" y="1406.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (6 samples, 1.26%)</title><rect x="985.1" y="1395.0" width="14.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="988.1" y="1406.0"></text>
</g>
<g>
<title>Dependencies::validate_dependencies(CompileTask*, char**) (2 samples, 0.42%)</title><rect x="985.1" y="1379.0" width="4.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="988.1" y="1390.0"></text>
</g>
<g>
<title>Dependencies::DepStream::check_klass_dependency(KlassDepChange*) (2 samples, 0.42%)</title><rect x="985.1" y="1363.0" width="4.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="988.1" y="1374.0"></text>
</g>
<g>
<title>Dependencies::check_unique_concrete_method(Klass*, Method*, KlassDepChange*) (2 samples, 0.42%)</title><rect x="985.1" y="1347.0" width="4.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="988.1" y="1358.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (2 samples, 0.42%)</title><rect x="985.1" y="1331.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="988.1" y="1342.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.21%)</title><rect x="985.1" y="1315.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="988.1" y="1326.0"></text>
</g>
<g>
<title>Klass::next_sibling(bool) const (1 samples, 0.21%)</title><rect x="987.6" y="1315.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="990.6" y="1326.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, char*, int, int, char const*, FailedSpeculation**) (3 samples, 0.63%)</title><rect x="990.0" y="1379.0" width="7.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="993.0" y="1390.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (1 samples, 0.21%)</title><rect x="992.5" y="1363.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="995.5" y="1374.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*) (1 samples, 0.21%)</title><rect x="992.5" y="1347.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="995.5" y="1358.0"></text>
</g>
<g>
<title>nmethodBucket::next_not_unloading() (1 samples, 0.21%)</title><rect x="992.5" y="1331.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="995.5" y="1342.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, char*, int, int) (1 samples, 0.21%)</title><rect x="995.0" y="1363.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="998.0" y="1374.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_nmethod(nmethod*) (1 samples, 0.21%)</title><rect x="995.0" y="1347.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="998.0" y="1358.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.21%)</title><rect x="995.0" y="1331.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="998.0" y="1342.0"></text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (1 samples, 0.21%)</title><rect x="995.0" y="1315.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="998.0" y="1326.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_load_event(JvmtiThreadState*) (1 samples, 0.21%)</title><rect x="997.4" y="1379.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1000.4" y="1390.0"></text>
</g>
<g>
<title>ServiceThread::enqueue_deferred_event(JvmtiDeferredEvent*) (1 samples, 0.21%)</title><rect x="997.4" y="1363.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1000.4" y="1374.0"></text>
</g>
<g>
<title>__psynch_cvbroad (1 samples, 0.21%)</title><rect x="997.4" y="1347.0" width="2.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1000.4" y="1358.0"></text>
</g>
<g>
<title>Compilation::initialize() (2 samples, 0.42%)</title><rect x="999.9" y="1411.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1002.9" y="1422.0"></text>
</g>
<g>
<title>FormatStringEventLog&lt;256ul&gt;::log(Thread*, char const*, ...) (1 samples, 0.21%)</title><rect x="1004.9" y="1443.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1007.9" y="1454.0"></text>
</g>
<g>
<title>Mutex::lock_without_safepoint_check() (1 samples, 0.21%)</title><rect x="1004.9" y="1427.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1007.9" y="1438.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.21%)</title><rect x="1004.9" y="1411.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1007.9" y="1422.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.21%)</title><rect x="1004.9" y="1395.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1007.9" y="1406.0"></text>
</g>
<g>
<title>JVMCIRuntime::compile_method(JVMCIEnv*, JVMCICompiler*, methodHandle const&amp;, int) (1 samples, 0.21%)</title><rect x="1007.3" y="1443.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1010.3" y="1454.0"></text>
</g>
<g>
<title>JVMCIRuntime::initialize(JVMCIEnv*) (1 samples, 0.21%)</title><rect x="1007.3" y="1427.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.3" y="1438.0"></text>
</g>
<g>
<title>HotSpotJVMCI::compute_offsets(Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1411.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1010.3" y="1422.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, bool, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1395.0" width="2.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1010.3" y="1406.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1379.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1010.3" y="1390.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1363.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1010.3" y="1374.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1347.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1010.3" y="1358.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1331.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1010.3" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1315.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1010.3" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1299.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1010.3" y="1310.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1283.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1010.3" y="1294.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.21%)</title><rect x="1007.3" y="1267.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1010.3" y="1278.0"></text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.21%)</title><rect x="1007.3" y="1251.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1010.3" y="1262.0"></text>
</g>
<g>
<title>Chunk::operator delete(void*) (1 samples, 0.21%)</title><rect x="1007.3" y="1235.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1010.3" y="1246.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.21%)</title><rect x="1007.3" y="1219.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1010.3" y="1230.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*) (1 samples, 0.21%)</title><rect x="1009.8" y="1443.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1012.8" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.21%)</title><rect x="1009.8" y="1427.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1012.8" y="1438.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.21%)</title><rect x="1009.8" y="1411.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1012.8" y="1422.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.21%)</title><rect x="1009.8" y="1395.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1012.8" y="1406.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.21%)</title><rect x="1012.3" y="1443.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1015.3" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="1012.3" y="1427.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1015.3" y="1438.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.21%)</title><rect x="1012.3" y="1411.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1015.3" y="1422.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.21%)</title><rect x="1012.3" y="1395.0" width="2.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1015.3" y="1406.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.21%)</title><rect x="1012.3" y="1379.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1015.3" y="1390.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.21%)</title><rect x="1012.3" y="1363.0" width="2.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1015.3" y="1374.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.21%)</title><rect x="1012.3" y="1347.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1015.3" y="1358.0"></text>
</g>
<g>
<title>os::current_thread_id() (1 samples, 0.21%)</title><rect x="1012.3" y="1331.0" width="2.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1015.3" y="1342.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.21%)</title><rect x="1012.3" y="1315.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1015.3" y="1326.0"></text>
</g>
<g>
<title>ciEnv::~ciEnv() (1 samples, 0.21%)</title><rect x="1014.7" y="1443.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1017.7" y="1454.0"></text>
</g>
<g>
<title>ciObjectFactory::remove_symbols() (1 samples, 0.21%)</title><rect x="1014.7" y="1427.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1017.7" y="1438.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.21%)</title><rect x="1014.7" y="1411.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.7" y="1422.0"></text>
</g>
<g>
<title>nmethod::compile_id() const (1 samples, 0.21%)</title><rect x="1017.2" y="1443.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1020.2" y="1454.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads(Thread*) (3 samples, 0.63%)</title><rect x="1019.7" y="1459.0" width="7.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1022.7" y="1470.0"></text>
</g>
<g>
<title>os::available_memory() (3 samples, 0.63%)</title><rect x="1019.7" y="1443.0" width="7.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1022.7" y="1454.0"></text>
</g>
<g>
<title>host_statistics64 (3 samples, 0.63%)</title><rect x="1019.7" y="1427.0" width="7.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1022.7" y="1438.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (3 samples, 0.63%)</title><rect x="1019.7" y="1411.0" width="7.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1022.7" y="1422.0"></text>
</g>
<g>
<title>CompileQueue::get() (28 samples, 5.86%)</title><rect x="1027.1" y="1459.0" width="69.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1030.1" y="1470.0">Compile..</text>
</g>
<g>
<title>Monitor::wait(long, bool) (2 samples, 0.42%)</title><rect x="1027.1" y="1443.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1030.1" y="1454.0"></text>
</g>
<g>
<title>os::PlatformMonitor::wait(long) (2 samples, 0.42%)</title><rect x="1027.1" y="1427.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1030.1" y="1438.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.42%)</title><rect x="1027.1" y="1411.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1030.1" y="1422.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::select_task(CompileQueue*) (25 samples, 5.23%)</title><rect x="1032.0" y="1443.0" width="61.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1035.0" y="1454.0">Tiered..</text>
</g>
<g>
<title>CompileTask::is_unloaded() const (12 samples, 2.51%)</title><rect x="1054.2" y="1427.0" width="29.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1057.2" y="1438.0">Co..</text>
</g>
<g>
<title>JNIHandles::is_weak_global_handle(_jobject*) (12 samples, 2.51%)</title><rect x="1054.2" y="1411.0" width="29.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1057.2" y="1422.0">JN..</text>
</g>
<g>
<title>Mutex::unlock() (1 samples, 0.21%)</title><rect x="1056.7" y="1395.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1059.7" y="1406.0"></text>
</g>
<g>
<title>OopStorage::allocation_status(oopDesc* const*) const (9 samples, 1.88%)</title><rect x="1059.2" y="1395.0" width="22.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.2" y="1406.0">O..</text>
</g>
<g>
<title>Mutex::lock_without_safepoint_check() (2 samples, 0.42%)</title><rect x="1066.6" y="1379.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1069.6" y="1390.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.21%)</title><rect x="1071.5" y="1379.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1074.5" y="1390.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.63%)</title><rect x="1074.0" y="1379.0" width="7.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1077.0" y="1390.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.21%)</title><rect x="1081.4" y="1395.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1084.4" y="1406.0"></text>
</g>
<g>
<title>Method::highest_comp_level() const (2 samples, 0.42%)</title><rect x="1083.8" y="1427.0" width="5.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1086.8" y="1438.0"></text>
</g>
<g>
<title>MethodCounters::highest_comp_level() const (1 samples, 0.21%)</title><rect x="1088.8" y="1427.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1091.8" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::update_rate(long, Method*) (1 samples, 0.21%)</title><rect x="1091.3" y="1427.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.3" y="1438.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.21%)</title><rect x="1093.7" y="1443.0" width="2.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1096.7" y="1454.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.21%)</title><rect x="1093.7" y="1427.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1096.7" y="1438.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (30 samples, 6.28%)</title><rect x="1096.2" y="1475.0" width="74.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.2" y="1486.0">ServiceT..</text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (11 samples, 2.30%)</title><rect x="1096.2" y="1459.0" width="27.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.2" y="1470.0">J..</text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (11 samples, 2.30%)</title><rect x="1096.2" y="1443.0" width="27.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.2" y="1454.0">J..</text>
</g>
<g>
<title>JvmtiCompiledMethodLoadEventMark::JvmtiCompiledMethodLoadEventMark(JavaThread*, nmethod*, void*) (2 samples, 0.42%)</title><rect x="1096.2" y="1427.0" width="4.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1099.2" y="1438.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.42%)</title><rect x="1096.2" y="1411.0" width="4.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1099.2" y="1422.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="1096.2" y="1395.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1099.2" y="1406.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.21%)</title><rect x="1096.2" y="1379.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1099.2" y="1390.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.21%)</title><rect x="1096.2" y="1363.0" width="2.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1099.2" y="1374.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.21%)</title><rect x="1096.2" y="1347.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1099.2" y="1358.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.21%)</title><rect x="1096.2" y="1331.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1099.2" y="1342.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.21%)</title><rect x="1096.2" y="1315.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1099.2" y="1326.0"></text>
</g>
<g>
<title>tiny_malloc_from_free_list (1 samples, 0.21%)</title><rect x="1096.2" y="1299.0" width="2.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1099.2" y="1310.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.21%)</title><rect x="1098.7" y="1395.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1101.7" y="1406.0"></text>
</g>
<g>
<title>JvmtiJavaThreadEventTransition::JvmtiJavaThreadEventTransition(JavaThread*) (1 samples, 0.21%)</title><rect x="1101.1" y="1427.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1104.1" y="1438.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (7 samples, 1.46%)</title><rect x="1103.6" y="1427.0" width="17.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1106.6" y="1438.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (2 samples, 0.42%)</title><rect x="1106.1" y="1411.0" width="4.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1109.1" y="1422.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.21%)</title><rect x="1106.1" y="1395.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1109.1" y="1406.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="1108.5" y="1395.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1111.5" y="1406.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.21%)</title><rect x="1111.0" y="1411.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1114.0" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.21%)</title><rect x="1111.0" y="1395.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1114.0" y="1406.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.42%)</title><rect x="1113.5" y="1411.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.5" y="1422.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.42%)</title><rect x="1113.5" y="1395.0" width="4.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1116.5" y="1406.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.21%)</title><rect x="1118.4" y="1411.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.4" y="1422.0"></text>
</g>
<g>
<title>free_small (1 samples, 0.21%)</title><rect x="1120.9" y="1427.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1123.9" y="1438.0"></text>
</g>
<g>
<title>small_free_list_add_ptr (1 samples, 0.21%)</title><rect x="1120.9" y="1411.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1123.9" y="1422.0"></text>
</g>
<g>
<title>Monitor::wait_without_safepoint_check(long) (19 samples, 3.97%)</title><rect x="1123.3" y="1459.0" width="47.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1126.3" y="1470.0">Moni..</text>
</g>
<g>
<title>os::PlatformMonitor::wait(long) (19 samples, 3.97%)</title><rect x="1123.3" y="1443.0" width="47.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1126.3" y="1454.0">os::..</text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.21%)</title><rect x="1123.3" y="1427.0" width="2.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1126.3" y="1438.0"></text>
</g>
<g>
<title>__psynch_cvwait (18 samples, 3.77%)</title><rect x="1125.8" y="1427.0" width="44.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1128.8" y="1438.0">__ps..</text>
</g>
<g>
<title>WatcherThread::run() (8 samples, 1.67%)</title><rect x="1170.3" y="1491.0" width="19.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.3" y="1502.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (8 samples, 1.67%)</title><rect x="1170.3" y="1475.0" width="19.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="1486.0"></text>
</g>
<g>
<title>Monitor::wait_without_safepoint_check(long) (8 samples, 1.67%)</title><rect x="1170.3" y="1459.0" width="19.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.3" y="1470.0"></text>
</g>
<g>
<title>os::PlatformMonitor::wait(long) (8 samples, 1.67%)</title><rect x="1170.3" y="1443.0" width="19.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.3" y="1454.0"></text>
</g>
<g>
<title>__psynch_cvwait (6 samples, 1.26%)</title><rect x="1172.7" y="1427.0" width="14.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1175.7" y="1438.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.21%)</title><rect x="1187.5" y="1427.0" width="2.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1190.5" y="1438.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.21%)</title><rect x="1187.5" y="1411.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1190.5" y="1422.0"></text>
</g>
<g>
<title>__commpage_gettimeofday_internal (1 samples, 0.21%)</title><rect x="1187.5" y="1395.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.5" y="1406.0"></text>
</g>
</g>
</svg>
