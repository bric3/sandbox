#
# sandbox
#
# Copyright (c) 2021,today - Brice Dutheil <brice.dutheil@gmail.com>
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
[versions]
okhttp =  "4.11.0"
bytebuddy = "1.14.5"
junit-jupiter =  "5.9.3"
graalvm = "22.3.2"
flexmark = "0.64.8"

mockito = "5.3.1"
mockito-kotlin = "5.0.0"

flightRecorder = "8.3.1"

jmh = "1.36"

kotlin = "1.8.22"
kotlinCoroutines = "1.5.0"

[libraries]
commons-math = { group = "org.apache.commons", name = "commons-math3", version = "3.6.1" }
guava = { module = "com.google.guava:guava", version = "32.0.1-jre" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-tls = { group = "com.squareup.okhttp3", name = "okhttp-tls", version.ref = "okhttp" }
okhttp-dnsoverhttps = { group = "com.squareup.okhttp3", name = "okhttp-dnsoverhttps", version.ref = "okhttp" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
conscrypt = { module = "org.conscrypt:conscrypt-openjdk-uber", version = "2.5.2" }

bytebuddy = { group = "net.bytebuddy", name = "byte-buddy", version.ref = "bytebuddy" }
bytebuddy-agent = { group = "net.bytebuddy", name = "byte-buddy-agent", version.ref = "bytebuddy" }

junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter", version.ref = "junit-jupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-vintage-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
assertj = { module = "org.assertj:assertj-core", version = "3.24.2" }
testcontainers = { module = "org.testcontainers:testcontainers", version = "1.18.3" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }

jna = { module = "net.java.dev.jna:jna", version = "5.13.0" }
jnr-ffi = { module = "com.github.jnr:jnr-ffi", version = "2.2.14" }

flightRecorder = { module = "org.openjdk.jmc:flightrecorder", version.ref = "flightRecorder" }
flightRecorder-writer = { module = "org.openjdk.jmc:flightrecorder.writer", version.ref = "flightRecorder" }
flightRecorder-rules = { module = "org.openjdk.jmc:flightrecorder.rules", version.ref = "flightRecorder" }
flightRecorder-rules-jdk = { module = "org.openjdk.jmc:flightrecorder.rules.jdk", version.ref = "flightRecorder" }

flexmark-all = { module = "com.vladsch.flexmark:flexmark-all", version.ref = "flexmark" }

graal-sdk = { module = "org.graalvm.sdk:graal-sdk", version.ref = "graalvm" }
graal-js = { module = "org.graalvm.js:js", version.ref = "graalvm" }
graal-js-scriptengine = { module = "org.graalvm.js:js-scriptengine", version.ref = "graalvm" }
graal-js-chromeinspector = { module = "org.graalvm.tools:chromeinspector", version.ref="graalvm" }

# Used to help mend compute the JMH version
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }


# Gradle plugins declared in build conventions
gradleplugin-kotlin-jvm = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

[bundles]
okhttp = ['okhttp', 'okhttp-tls', 'okhttp-dnsoverhttps', 'okhttp-logging']
bytebuddy = ['bytebuddy', 'bytebuddy-agent']
flightRecorder = ['flightRecorder', 'flightRecorder-writer', 'flightRecorder-rules', 'flightRecorder-rules-jdk']

junit-jupiter = ["junit-jupiter-api", "junit-jupiter-engine", "junit-jupiter-vintage-engine"]
mockito = ["mockito-core", "mockito-kotlin"]

graal-js = ["graal-js", "graal-js-scriptengine", "graal-js-chromeinspector"]

[plugins]
download = { id = "de.undercouch.download", version = "5.4.0" }
jmh = { id = "me.champeau.jmh", version = "0.7.1" }