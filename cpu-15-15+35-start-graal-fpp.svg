<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1989"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1989"> </text>
<g id="frames">
<g>
<title>all (960 samples, 100.00%)</title><rect x="10.0" y="1955.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1966.0">all</text>
</g>
<g>
<title>[no_Java_frame] (9 samples, 0.94%)</title><rect x="10.0" y="1939.0" width="11.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="1950.0"></text>
</g>
<g>
<title>[unknown_Java] (36 samples, 3.75%)</title><rect x="21.1" y="1939.0" width="44.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="24.1" y="1950.0">[unk..</text>
</g>
<g>
<title>Interpreter (33 samples, 3.44%)</title><rect x="21.1" y="1923.0" width="40.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="24.1" y="1934.0">Int..</text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (3 samples, 0.31%)</title><rect x="61.6" y="1923.0" width="3.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="64.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.10%)</title><rect x="65.3" y="1939.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.3" y="1950.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="65.3" y="1923.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.3" y="1934.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.10%)</title><rect x="65.3" y="1907.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="68.3" y="1918.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="66.5" y="1939.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.5" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.10%)</title><rect x="66.5" y="1923.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="69.5" y="1934.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="66.5" y="1907.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.5" y="1918.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="66.5" y="1891.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.5" y="1902.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="66.5" y="1875.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.5" y="1886.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="66.5" y="1859.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.5" y="1870.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.10%)</title><rect x="66.5" y="1843.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.5" y="1854.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.10%)</title><rect x="66.5" y="1827.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.5" y="1838.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.10%)</title><rect x="66.5" y="1811.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="69.5" y="1822.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.10%)</title><rect x="66.5" y="1795.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="69.5" y="1806.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.10%)</title><rect x="66.5" y="1779.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="69.5" y="1790.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.10%)</title><rect x="66.5" y="1763.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="69.5" y="1774.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.10%)</title><rect x="66.5" y="1747.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="69.5" y="1758.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.10%)</title><rect x="66.5" y="1731.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="69.5" y="1742.0"></text>
</g>
<g>
<title>ClassPathImageEntry::open_stream_for_loader(char const*, ClassLoaderData*, Thread*) (1 samples, 0.10%)</title><rect x="66.5" y="1715.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="69.5" y="1726.0"></text>
</g>
<g>
<title>JIMAGE_FindResource (1 samples, 0.10%)</title><rect x="66.5" y="1699.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="69.5" y="1710.0"></text>
</g>
<g>
<title>ImageFileReader::find_location_index(char const*, unsigned long long*) const (1 samples, 0.10%)</title><rect x="66.5" y="1683.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="69.5" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="67.8" y="1939.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.8" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.make (1 samples, 0.10%)</title><rect x="67.8" y="1923.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.8" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.&lt;init&gt; (1 samples, 0.10%)</title><rect x="67.8" y="1907.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.8" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.10%)</title><rect x="67.8" y="1891.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.10%)</title><rect x="67.8" y="1875.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.8" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.10%)</title><rect x="67.8" y="1859.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.8" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.10%)</title><rect x="67.8" y="1843.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.8" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.10%)</title><rect x="67.8" y="1827.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.8" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.10%)</title><rect x="67.8" y="1811.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.8" y="1822.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.10%)</title><rect x="67.8" y="1795.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.8" y="1806.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.10%)</title><rect x="67.8" y="1779.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.8" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (1 samples, 0.10%)</title><rect x="67.8" y="1763.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.8" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (1 samples, 0.10%)</title><rect x="67.8" y="1747.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.8" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (1 samples, 0.10%)</title><rect x="67.8" y="1731.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.8" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Type.getReturnTypeOffset (1 samples, 0.10%)</title><rect x="67.8" y="1715.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.8" y="1726.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.10%)</title><rect x="67.8" y="1699.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.8" y="1710.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.10%)</title><rect x="67.8" y="1683.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.8" y="1694.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.compileMethod (621 samples, 64.69%)</title><rect x="69.0" y="1939.0" width="763.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.0" y="1950.0">jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.compileMethod</text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.getCompiler (12 samples, 1.25%)</title><rect x="69.0" y="1923.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.0" y="1934.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (12 samples, 1.25%)</title><rect x="69.0" y="1907.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.0" y="1918.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (12 samples, 1.25%)</title><rect x="69.0" y="1891.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.0" y="1902.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (12 samples, 1.25%)</title><rect x="69.0" y="1875.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.0" y="1886.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="69.0" y="1859.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.0" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="69.0" y="1843.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.0" y="1854.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="69.0" y="1827.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.0" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="69.0" y="1811.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.0" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="69.0" y="1795.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.10%)</title><rect x="69.0" y="1779.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.0" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.10%)</title><rect x="69.0" y="1763.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.0" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.10%)</title><rect x="69.0" y="1747.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.0" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.10%)</title><rect x="69.0" y="1731.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.0" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.10%)</title><rect x="69.0" y="1715.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.10%)</title><rect x="69.0" y="1699.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.0" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.10%)</title><rect x="69.0" y="1683.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.10%)</title><rect x="69.0" y="1667.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.0" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.slice (1 samples, 0.10%)</title><rect x="69.0" y="1651.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalRuntime.&lt;init&gt; (11 samples, 1.15%)</title><rect x="70.2" y="1859.0" width="13.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.2" y="1870.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl$1.iterator (1 samples, 0.10%)</title><rect x="70.2" y="1843.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.2" y="1854.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="70.2" y="1827.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="73.2" y="1838.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="70.2" y="1811.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.2" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="70.2" y="1795.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.2" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="70.2" y="1779.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.2" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="70.2" y="1763.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.2" y="1774.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="70.2" y="1747.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.2" y="1758.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="70.2" y="1731.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.2" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="70.2" y="1715.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.2" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="70.2" y="1699.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="73.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="70.2" y="1683.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.2" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="70.2" y="1667.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="73.2" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="70.2" y="1651.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.2" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="70.2" y="1635.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.2" y="1646.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="70.2" y="1619.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.2" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="70.2" y="1603.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.2" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="70.2" y="1587.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.2" y="1598.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="70.2" y="1571.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="73.2" y="1582.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="70.2" y="1555.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="73.2" y="1566.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="70.2" y="1539.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="73.2" y="1550.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="70.2" y="1523.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="73.2" y="1534.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="70.2" y="1507.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="73.2" y="1518.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="70.2" y="1491.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="73.2" y="1502.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::create_native_wrapper(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="70.2" y="1475.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="73.2" y="1486.0"></text>
</g>
<g>
<title>SharedRuntime::generate_native_wrapper(MacroAssembler*, methodHandle const&amp;, int, BasicType*, VMRegPair*, BasicType, unsigned char*) (1 samples, 0.10%)</title><rect x="70.2" y="1459.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="73.2" y="1470.0"></text>
</g>
<g>
<title>nmethod::new_native_nmethod(methodHandle const&amp;, int, CodeBuffer*, int, int, int, int, int, OopMapSet*) (1 samples, 0.10%)</title><rect x="70.2" y="1443.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="73.2" y="1454.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, CodeOffsets*, CodeBuffer*, int, int, int, OopMapSet*) (1 samples, 0.10%)</title><rect x="70.2" y="1427.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="73.2" y="1438.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_nmethod(nmethod*) (1 samples, 0.10%)</title><rect x="70.2" y="1411.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="73.2" y="1422.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.10%)</title><rect x="70.2" y="1395.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="73.2" y="1406.0"></text>
</g>
<g>
<title>G1CodeRootSet::add(nmethod*) (1 samples, 0.10%)</title><rect x="70.2" y="1379.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="73.2" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotHostBackend.completeInitialization (4 samples, 0.42%)</title><rect x="71.5" y="1843.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.5" y="1854.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotForeignCallsProvider.initialize (1 samples, 0.10%)</title><rect x="71.5" y="1827.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.5" y="1838.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotHostForeignCallsProvider.initialize (1 samples, 0.10%)</title><rect x="71.5" y="1811.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.5" y="1822.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.linkForeignCall (1 samples, 0.10%)</title><rect x="71.5" y="1795.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.5" y="1806.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/ForeignCallStub.&lt;init&gt; (1 samples, 0.10%)</title><rect x="71.5" y="1779.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.5" y="1790.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.create (1 samples, 0.10%)</title><rect x="71.5" y="1763.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.5" y="1774.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.createCallingConvention (1 samples, 0.10%)</title><rect x="71.5" y="1747.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.5" y="1758.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/amd64/AMD64HotSpotRegisterConfig.getCallingConvention (1 samples, 0.10%)</title><rect x="71.5" y="1731.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.5" y="1742.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/amd64/AMD64HotSpotRegisterConfig.callingConvention (1 samples, 0.10%)</title><rect x="71.5" y="1715.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.5" y="1726.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/JavaKind.getStackKind (1 samples, 0.10%)</title><rect x="71.5" y="1699.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.5" y="1710.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.10%)</title><rect x="71.5" y="1683.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="74.5" y="1694.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.10%)</title><rect x="71.5" y="1667.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="74.5" y="1678.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="71.5" y="1651.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="74.5" y="1662.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="71.5" y="1635.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="74.5" y="1646.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="71.5" y="1619.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="74.5" y="1630.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.10%)</title><rect x="71.5" y="1603.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="74.5" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="71.5" y="1587.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="74.5" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.initialize (3 samples, 0.31%)</title><rect x="72.7" y="1827.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.7" y="1838.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.initialize (3 samples, 0.31%)</title><rect x="72.7" y="1811.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.7" y="1822.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.initialize (3 samples, 0.31%)</title><rect x="72.7" y="1795.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.7" y="1806.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/BoxingSnippets$Templates.&lt;init&gt; (3 samples, 0.31%)</title><rect x="72.7" y="1779.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.7" y="1790.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="72.7" y="1763.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.7" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="72.7" y="1747.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.7" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="72.7" y="1731.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.7" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="72.7" y="1715.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="72.7" y="1699.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="75.7" y="1710.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="72.7" y="1683.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.7" y="1694.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="72.7" y="1667.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="75.7" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="72.7" y="1651.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.7" y="1662.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="72.7" y="1635.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="75.7" y="1646.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="72.7" y="1619.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="75.7" y="1630.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="72.7" y="1603.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="75.7" y="1614.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="72.7" y="1587.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="75.7" y="1598.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="72.7" y="1571.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="75.7" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValueNode.&lt;clinit&gt; (2 samples, 0.21%)</title><rect x="73.9" y="1763.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="76.9" y="1774.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="73.9" y="1747.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.9" y="1758.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="73.9" y="1731.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="76.9" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="73.9" y="1715.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="76.9" y="1726.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_field(Bytecodes::Code, Bytecodes::Code, Klass*, int, int, TosState, bool, bool, Klass*) (1 samples, 0.10%)</title><rect x="73.9" y="1699.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="76.9" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.10%)</title><rect x="75.1" y="1747.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.1" y="1758.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.10%)</title><rect x="75.1" y="1731.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.1" y="1742.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.10%)</title><rect x="75.1" y="1715.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="78.1" y="1726.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getAnnotationTimed (1 samples, 0.10%)</title><rect x="75.1" y="1699.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.1" y="1710.0"></text>
</g>
<g>
<title>java/lang/Class.getAnnotation (1 samples, 0.10%)</title><rect x="75.1" y="1683.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.1" y="1694.0"></text>
</g>
<g>
<title>java/lang/Class.annotationData (1 samples, 0.10%)</title><rect x="75.1" y="1667.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.1" y="1678.0"></text>
</g>
<g>
<title>java/lang/Class.createAnnotationData (1 samples, 0.10%)</title><rect x="75.1" y="1651.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.1" y="1662.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.10%)</title><rect x="75.1" y="1635.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.1" y="1646.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.10%)</title><rect x="75.1" y="1619.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="78.1" y="1630.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.10%)</title><rect x="75.1" y="1603.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.1" y="1614.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.getInstance (1 samples, 0.10%)</title><rect x="75.1" y="1587.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.1" y="1598.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.&lt;init&gt; (1 samples, 0.10%)</title><rect x="75.1" y="1571.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.1" y="1582.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSelectAnnotations (1 samples, 0.10%)</title><rect x="75.1" y="1555.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.1" y="1566.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.10%)</title><rect x="75.1" y="1539.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.1" y="1550.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.10%)</title><rect x="75.1" y="1523.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.1" y="1534.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.10%)</title><rect x="75.1" y="1507.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.1" y="1518.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.10%)</title><rect x="75.1" y="1491.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.1" y="1502.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.10%)</title><rect x="75.1" y="1475.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.1" y="1486.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.10%)</title><rect x="75.1" y="1459.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.1" y="1470.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.10%)</title><rect x="75.1" y="1443.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.10%)</title><rect x="75.1" y="1427.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.getProxyConstructor (1 samples, 0.10%)</title><rect x="75.1" y="1411.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.1" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue.computeIfAbsent (1 samples, 0.10%)</title><rect x="75.1" y="1395.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/AbstractClassLoaderValue$Memoizer.get (1 samples, 0.10%)</title><rect x="75.1" y="1379.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$$Lambda$32.0x0000000800b6b8b8.apply (1 samples, 0.10%)</title><rect x="75.1" y="1363.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.lambda$getProxyConstructor$0 (1 samples, 0.10%)</title><rect x="75.1" y="1347.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.build (1 samples, 0.10%)</title><rect x="75.1" y="1331.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="78.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy$ProxyBuilder.defineProxyClass (1 samples, 0.10%)</title><rect x="75.1" y="1315.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateProxyClass (1 samples, 0.10%)</title><rect x="75.1" y="1299.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateClassFile (1 samples, 0.10%)</title><rect x="75.1" y="1283.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="78.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/reflect/ProxyGenerator.generateStaticInitializer (1 samples, 0.10%)</title><rect x="75.1" y="1267.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (1 samples, 0.10%)</title><rect x="75.1" y="1251.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (1 samples, 0.10%)</title><rect x="75.1" y="1235.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (1 samples, 0.10%)</title><rect x="75.1" y="1219.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantNameAndType (1 samples, 0.10%)</title><rect x="75.1" y="1203.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantUtf8 (1 samples, 0.10%)</title><rect x="75.1" y="1187.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="78.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createBackend (5 samples, 0.52%)</title><rect x="76.4" y="1843.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.4" y="1854.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotBackendFactory.createConfigInfoProvider (1 samples, 0.10%)</title><rect x="76.4" y="1827.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.4" y="1838.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotPlatformConfigurationProvider.&lt;init&gt; (1 samples, 0.10%)</title><rect x="76.4" y="1811.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.4" y="1822.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotPlatformConfigurationProvider.createBarrierSet (1 samples, 0.10%)</title><rect x="76.4" y="1795.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.4" y="1806.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="76.4" y="1779.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.4" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="76.4" y="1763.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.4" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="76.4" y="1747.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.4" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="76.4" y="1731.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.4" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="76.4" y="1715.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.4" y="1726.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="76.4" y="1699.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="79.4" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="76.4" y="1683.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="79.4" y="1694.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="76.4" y="1667.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="79.4" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="76.4" y="1651.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.4" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="76.4" y="1635.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="79.4" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="76.4" y="1619.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="79.4" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="76.4" y="1603.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="76.4" y="1587.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="79.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.10%)</title><rect x="76.4" y="1571.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.4" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.getResourceBuffer (1 samples, 0.10%)</title><rect x="76.4" y="1555.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.4" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotBackendFactory.createWordTypes (1 samples, 0.10%)</title><rect x="77.6" y="1827.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="1838.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/word/HotSpotWordTypes.&lt;init&gt; (1 samples, 0.10%)</title><rect x="77.6" y="1811.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.6" y="1822.0"></text>
</g>
<g>
<title>org/graalvm/compiler/word/WordTypes.&lt;init&gt; (1 samples, 0.10%)</title><rect x="77.6" y="1795.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="80.6" y="1806.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="77.6" y="1779.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.6" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="77.6" y="1763.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.6" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="77.6" y="1747.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="77.6" y="1731.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.6" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="77.6" y="1715.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.6" y="1726.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="77.6" y="1699.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.6" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="77.6" y="1683.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.6" y="1694.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="77.6" y="1667.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.6" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="77.6" y="1651.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.6" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="77.6" y="1635.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.6" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="77.6" y="1619.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.6" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="77.6" y="1603.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.6" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="77.6" y="1587.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.6" y="1598.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="77.6" y="1571.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.6" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="77.6" y="1555.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.6" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="77.6" y="1539.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.6" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="77.6" y="1523.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="77.6" y="1507.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="77.6" y="1491.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="77.6" y="1475.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="77.6" y="1459.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.10%)</title><rect x="77.6" y="1443.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.10%)</title><rect x="77.6" y="1427.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.6" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.10%)</title><rect x="77.6" y="1411.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.10%)</title><rect x="77.6" y="1395.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.10%)</title><rect x="77.6" y="1379.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.6" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.10%)</title><rect x="77.6" y="1363.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.6" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.10%)</title><rect x="77.6" y="1347.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="80.6" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.10%)</title><rect x="77.6" y="1331.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="80.6" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createGraphBuilderPlugins (1 samples, 0.10%)</title><rect x="78.8" y="1827.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.8" y="1838.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins.create (1 samples, 0.10%)</title><rect x="78.8" y="1811.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.8" y="1822.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="78.8" y="1795.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="81.8" y="1806.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="78.8" y="1779.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="81.8" y="1790.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="78.8" y="1763.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="81.8" y="1774.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.10%)</title><rect x="78.8" y="1747.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="81.8" y="1758.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.10%)</title><rect x="78.8" y="1731.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="81.8" y="1742.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="78.8" y="1715.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="81.8" y="1726.0"></text>
</g>
<g>
<title>VerificationType::is_reference_assignable_from(VerificationType const&amp;, ClassVerifier*, bool, Thread*) const (1 samples, 0.10%)</title><rect x="78.8" y="1699.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="81.8" y="1710.0"></text>
</g>
<g>
<title>VerificationType::resolve_and_check_assignability(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="78.8" y="1683.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="81.8" y="1694.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.10%)</title><rect x="78.8" y="1667.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="81.8" y="1678.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.10%)</title><rect x="78.8" y="1651.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="81.8" y="1662.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.10%)</title><rect x="78.8" y="1635.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="81.8" y="1646.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.10%)</title><rect x="78.8" y="1619.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.8" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createLowerer (2 samples, 0.21%)</title><rect x="80.1" y="1827.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="83.1" y="1838.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="80.1" y="1811.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.1" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="80.1" y="1795.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.1" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="80.1" y="1779.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.1" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="80.1" y="1763.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.1" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1747.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.1" y="1758.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1731.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.1" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1715.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.1" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="80.1" y="1699.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.1" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="80.1" y="1683.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.1" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="80.1" y="1667.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.1" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="80.1" y="1651.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.1" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="80.1" y="1635.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.1" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1619.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.1" y="1630.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1603.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.1" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1587.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.1" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="80.1" y="1571.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="80.1" y="1555.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.1" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="80.1" y="1539.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.1" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="80.1" y="1523.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.1" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="80.1" y="1507.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="83.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1491.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.1" y="1502.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1475.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="80.1" y="1459.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="83.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="80.1" y="1443.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.1" y="1454.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="80.1" y="1427.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="83.1" y="1438.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="80.1" y="1411.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="83.1" y="1422.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="80.1" y="1395.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="83.1" y="1406.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="80.1" y="1379.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="83.1" y="1390.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="80.1" y="1363.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="83.1" y="1374.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.10%)</title><rect x="80.1" y="1347.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.1" y="1358.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.10%)</title><rect x="80.1" y="1331.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.1" y="1342.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.10%)</title><rect x="80.1" y="1315.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="83.1" y="1326.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.10%)</title><rect x="80.1" y="1299.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="83.1" y="1310.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.10%)</title><rect x="80.1" y="1283.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="83.1" y="1294.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.10%)</title><rect x="80.1" y="1267.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="83.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="81.3" y="1811.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.3" y="1822.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="81.3" y="1795.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.3" y="1806.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.setFloatCache (1 samples, 0.10%)</title><rect x="81.3" y="1779.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.3" y="1790.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/FloatStamp.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="81.3" y="1763.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.3" y="1774.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/FloatStamp$14.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="81.3" y="1747.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.3" y="1758.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="81.3" y="1731.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="84.3" y="1742.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="81.3" y="1715.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="84.3" y="1726.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="81.3" y="1699.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="84.3" y="1710.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="81.3" y="1683.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="84.3" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices.loadSingle (1 samples, 0.10%)</title><rect x="82.5" y="1843.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="85.5" y="1854.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices$1$1.next (1 samples, 0.10%)</title><rect x="82.5" y="1827.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="85.5" y="1838.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices.openJVMCITo (1 samples, 0.10%)</title><rect x="82.5" y="1811.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.5" y="1822.0"></text>
</g>
<g>
<title>java/lang/Module.addOpens (1 samples, 0.10%)</title><rect x="82.5" y="1795.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.5" y="1806.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod (609 samples, 63.44%)</title><rect x="83.8" y="1923.0" width="748.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.8" y="1934.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod (609 samples, 63.44%)</title><rect x="83.8" y="1907.0" width="748.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.8" y="1918.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod</text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.activate (1 samples, 0.10%)</title><rect x="83.8" y="1891.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="86.8" y="1902.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.10%)</title><rect x="83.8" y="1875.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.8" y="1886.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask.runCompilation (608 samples, 63.33%)</title><rect x="85.0" y="1891.0" width="747.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.0" y="1902.0">org/graalvm/compiler/hotspot/CompilationTask.runCompilation</text>
</g>
<g>
<title>org/graalvm/compiler/core/CompilationWrapper.run (608 samples, 63.33%)</title><rect x="85.0" y="1875.0" width="747.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.0" y="1886.0">org/graalvm/compiler/core/CompilationWrapper.run</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.performCompilation (608 samples, 63.33%)</title><rect x="85.0" y="1859.0" width="747.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.0" y="1870.0">org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.performCompilation</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.performCompilation (608 samples, 63.33%)</title><rect x="85.0" y="1843.0" width="747.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.0" y="1854.0">org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.performCompilation</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask.installMethod (13 samples, 1.35%)</title><rect x="85.0" y="1827.0" width="16.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="88.0" y="1838.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/target/Backend.createInstalledCode (13 samples, 1.35%)</title><rect x="85.0" y="1811.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.0" y="1822.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotCodeCacheProvider.installCode (7 samples, 0.73%)</title><rect x="87.4" y="1795.0" width="8.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="90.4" y="1806.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.installCode (7 samples, 0.73%)</title><rect x="87.4" y="1779.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.4" y="1790.0"></text>
</g>
<g>
<title>c2v_installCode(JNIEnv_*, _jobject*, _jobject*, _jobject*, _jobject*, long, _jbyteArray*) (6 samples, 0.62%)</title><rect x="88.7" y="1763.0" width="7.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="91.7" y="1774.0"></text>
</g>
<g>
<title>CodeInstaller::install(JVMCICompiler*, JVMCIObject, JVMCIObject, CodeBlob*&amp;, JVMCIObject, FailedSpeculation**, char*, int, JVMCIEnv*) (6 samples, 0.62%)</title><rect x="88.7" y="1747.0" width="7.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="91.7" y="1758.0"></text>
</g>
<g>
<title>CodeInstaller::initialize_buffer(CodeBuffer&amp;, bool, JVMCIEnv*) (4 samples, 0.42%)</title><rect x="88.7" y="1731.0" width="4.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="91.7" y="1742.0"></text>
</g>
<g>
<title>CodeInstaller::estimate_stubs_size(JVMCIEnv*) (1 samples, 0.10%)</title><rect x="88.7" y="1715.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="91.7" y="1726.0"></text>
</g>
<g>
<title>JVMCIEnv::get_boxed_value(BasicType, JVMCIObject) (1 samples, 0.10%)</title><rect x="88.7" y="1699.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="91.7" y="1710.0"></text>
</g>
<g>
<title>java_lang_boxing_object::get_value(oopDesc*, jvalue*) (1 samples, 0.10%)</title><rect x="88.7" y="1683.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="91.7" y="1694.0"></text>
</g>
<g>
<title>CodeInstaller::site_Call(CodeBuffer&amp;, int, JVMCIObject, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="89.9" y="1715.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="92.9" y="1726.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, JVMCIObject, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="89.9" y="1699.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="92.9" y="1710.0"></text>
</g>
<g>
<title>JVMCIEnv::get_BytecodeFrame_values(JVMCIObject) (1 samples, 0.10%)</title><rect x="89.9" y="1683.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="92.9" y="1694.0"></text>
</g>
<g>
<title>CodeInstaller::site_Infopoint(CodeBuffer&amp;, int, JVMCIObject, JVMCIEnv*) (2 samples, 0.21%)</title><rect x="91.1" y="1715.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="94.1" y="1726.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, JVMCIObject, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, JVMCIEnv*) (2 samples, 0.21%)</title><rect x="91.1" y="1699.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="94.1" y="1710.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, JVMCIObject, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="91.1" y="1683.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="94.1" y="1694.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, JVMCIObject, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="91.1" y="1667.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="94.1" y="1678.0"></text>
</g>
<g>
<title>JVMCIEnv::has_pending_exception() (1 samples, 0.10%)</title><rect x="91.1" y="1651.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="94.1" y="1662.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.10%)</title><rect x="92.4" y="1683.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="95.4" y="1694.0"></text>
</g>
<g>
<title>JVMCIRuntime::register_method(JVMCIEnv*, methodHandle const&amp;, nmethod*&amp;, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, DebugInformationRecorder*, Dependencies*, int, bool, bool, JVMCIObject, JVMCIObject, FailedSpeculation**, char*, int) (2 samples, 0.21%)</title><rect x="93.6" y="1731.0" width="2.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="96.6" y="1742.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_load_event(JvmtiThreadState*) (2 samples, 0.21%)</title><rect x="93.6" y="1715.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="96.6" y="1726.0"></text>
</g>
<g>
<title>ServiceThread::enqueue_deferred_event(JvmtiDeferredEvent*) (1 samples, 0.10%)</title><rect x="94.8" y="1699.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="97.8" y="1710.0"></text>
</g>
<g>
<title>__psynch_cvbroad (1 samples, 0.10%)</title><rect x="94.8" y="1683.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="97.8" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.activate (1 samples, 0.10%)</title><rect x="96.0" y="1795.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.0" y="1806.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="96.0" y="1779.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.0" y="1790.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="96.0" y="1763.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.0" y="1774.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotBackend.createCompiledCode (3 samples, 0.31%)</title><rect x="97.3" y="1795.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.3" y="1806.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder.createCompiledCode (3 samples, 0.31%)</title><rect x="97.3" y="1779.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="1790.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder.getSortedSites (3 samples, 0.31%)</title><rect x="97.3" y="1763.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.3" y="1774.0"></text>
</g>
<g>
<title>java/util/Collections.sort (1 samples, 0.10%)</title><rect x="98.5" y="1747.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.5" y="1758.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (1 samples, 0.10%)</title><rect x="98.5" y="1731.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.5" y="1742.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.10%)</title><rect x="98.5" y="1715.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="101.5" y="1726.0"></text>
</g>
<g>
<title>java/util/TimSort.sort (1 samples, 0.10%)</title><rect x="98.5" y="1699.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.5" y="1710.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeCollapse (1 samples, 0.10%)</title><rect x="98.5" y="1683.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.5" y="1694.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeAt (1 samples, 0.10%)</title><rect x="98.5" y="1667.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.5" y="1678.0"></text>
</g>
<g>
<title>java/util/TimSort.mergeLo (1 samples, 0.10%)</title><rect x="98.5" y="1651.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="101.5" y="1662.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbb00000)@0x000000011001ee80 (1 samples, 0.10%)</title><rect x="98.5" y="1635.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.5" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/code/CompilationResult.getDataPatches (1 samples, 0.10%)</title><rect x="99.7" y="1747.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.7" y="1758.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.10%)</title><rect x="99.7" y="1731.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="102.7" y="1742.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableRandomAccessList.&lt;init&gt; (1 samples, 0.10%)</title><rect x="99.7" y="1715.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.7" y="1726.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.&lt;init&gt; (1 samples, 0.10%)</title><rect x="99.7" y="1699.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.7" y="1710.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.10%)</title><rect x="99.7" y="1683.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="102.7" y="1694.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="99.7" y="1667.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="102.7" y="1678.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="99.7" y="1651.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="102.7" y="1662.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.10%)</title><rect x="99.7" y="1635.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="102.7" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compile (595 samples, 61.98%)</title><rect x="101.0" y="1827.0" width="731.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.0" y="1838.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compile</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileHelper (584 samples, 60.83%)</title><rect x="102.2" y="1811.0" width="717.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.2" y="1822.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileHelper</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.compileGraph (582 samples, 60.62%)</title><rect x="102.2" y="1795.0" width="715.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.2" y="1806.0">org/graalvm/compiler/core/GraalCompiler.compileGraph</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.compile (582 samples, 60.62%)</title><rect x="102.2" y="1779.0" width="715.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.2" y="1790.0">org/graalvm/compiler/core/GraalCompiler.compile</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitFrontEnd (477 samples, 49.69%)</title><rect x="102.2" y="1763.0" width="586.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.2" y="1774.0">org/graalvm/compiler/core/GraalCompiler.emitFrontEnd</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="102.2" y="1747.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.2" y="1758.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="102.2" y="1731.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.2" y="1742.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="102.2" y="1715.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="105.2" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="102.2" y="1699.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.2" y="1710.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="102.2" y="1683.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.2" y="1694.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="102.2" y="1667.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.2" y="1678.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="102.2" y="1651.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.2" y="1662.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="102.2" y="1635.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="102.2" y="1619.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="105.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="102.2" y="1603.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.2" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="102.2" y="1587.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="105.2" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="102.2" y="1571.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="105.2" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="102.2" y="1555.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="105.2" y="1566.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="102.2" y="1539.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="105.2" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="102.2" y="1523.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.2" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="102.2" y="1507.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.2" y="1518.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="102.2" y="1491.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="105.2" y="1502.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="102.2" y="1475.0" width="1.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="105.2" y="1486.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="102.2" y="1459.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="105.2" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="102.2" y="1443.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="105.2" y="1454.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="102.2" y="1427.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="105.2" y="1438.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.10%)</title><rect x="102.2" y="1411.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="105.2" y="1422.0"></text>
</g>
<g>
<title>Method::sort_methods(Array&lt;Method*&gt;*, bool, int (*)(Method*, Method*)) (1 samples, 0.10%)</title><rect x="102.2" y="1395.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="105.2" y="1406.0"></text>
</g>
<g>
<title>void QuickSort::inner_sort&lt;false, Method*, int (*)(Method*, Method*)&gt;(Method**, unsigned long, int (*)(Method*, Method*)) (1 samples, 0.10%)</title><rect x="102.2" y="1379.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="105.2" y="1390.0"></text>
</g>
<g>
<title>method_comparator(Method*, Method*) (1 samples, 0.10%)</title><rect x="102.2" y="1363.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="105.2" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (475 samples, 49.48%)</title><rect x="103.4" y="1747.0" width="583.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.4" y="1758.0">org/graalvm/compiler/phases/BasePhase.apply</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (475 samples, 49.48%)</title><rect x="103.4" y="1731.0" width="583.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.4" y="1742.0">org/graalvm/compiler/phases/BasePhase.apply</text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (475 samples, 49.48%)</title><rect x="103.4" y="1715.0" width="583.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.4" y="1726.0">org/graalvm/compiler/phases/PhaseSuite.run</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (475 samples, 49.48%)</title><rect x="103.4" y="1699.0" width="583.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.4" y="1710.0">org/graalvm/compiler/phases/BasePhase.apply</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (475 samples, 49.48%)</title><rect x="103.4" y="1683.0" width="583.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.4" y="1694.0">org/graalvm/compiler/phases/BasePhase.apply</text>
</g>
<g>
<title>I2C/C2I adapters(0xbbb00000)@0x000000011001ee80 (1 samples, 0.10%)</title><rect x="103.4" y="1667.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.4" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext$1.close (1 samples, 0.10%)</title><rect x="104.6" y="1667.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.6" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/CompilationListenerProfiler$1.close (1 samples, 0.10%)</title><rect x="104.6" y="1651.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.6" y="1662.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="104.6" y="1635.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="107.6" y="1646.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="104.6" y="1619.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="107.6" y="1630.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="104.6" y="1603.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="107.6" y="1614.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="104.6" y="1587.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="107.6" y="1598.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.10%)</title><rect x="104.6" y="1571.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="107.6" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (11 samples, 1.15%)</title><rect x="105.9" y="1667.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.9" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (11 samples, 1.15%)</title><rect x="105.9" y="1651.0" width="13.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.9" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.&lt;init&gt; (1 samples, 0.10%)</title><rect x="105.9" y="1635.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.9" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.&lt;init&gt; (1 samples, 0.10%)</title><rect x="105.9" y="1619.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.9" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.&lt;init&gt; (1 samples, 0.10%)</title><rect x="105.9" y="1603.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.9" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.getBasePhaseStatistics (1 samples, 0.10%)</title><rect x="105.9" y="1587.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.9" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassValue.get (1 samples, 0.10%)</title><rect x="105.9" y="1571.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.9" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassValue$ClassValueMap.probeHomeLocation (1 samples, 0.10%)</title><rect x="105.9" y="1555.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.9" y="1566.0"></text>
</g>
<g>
<title>java/lang/ClassValue$ClassValueMap.loadFromCache (1 samples, 0.10%)</title><rect x="105.9" y="1539.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="108.9" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (10 samples, 1.04%)</title><rect x="107.1" y="1635.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.1" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (10 samples, 1.04%)</title><rect x="107.1" y="1619.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.1" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="107.1" y="1603.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="110.1" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="107.1" y="1587.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.1" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="107.1" y="1571.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.1" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="107.1" y="1555.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.1" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="107.1" y="1539.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.1" y="1550.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="107.1" y="1523.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.1" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="107.1" y="1507.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.1" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="107.1" y="1491.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="107.1" y="1475.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="107.1" y="1459.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="107.1" y="1443.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findLoadedModule (1 samples, 0.10%)</title><rect x="107.1" y="1427.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.1" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.10%)</title><rect x="107.1" y="1411.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.10%)</title><rect x="107.1" y="1395.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (8 samples, 0.83%)</title><rect x="108.3" y="1603.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.3" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (8 samples, 0.83%)</title><rect x="108.3" y="1587.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.3" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (8 samples, 0.83%)</title><rect x="108.3" y="1571.0" width="9.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.3" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (8 samples, 0.83%)</title><rect x="108.3" y="1555.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="111.3" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfZero (2 samples, 0.21%)</title><rect x="108.3" y="1539.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (2 samples, 0.21%)</title><rect x="108.3" y="1523.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createLogicNode (1 samples, 0.10%)</title><rect x="108.3" y="1507.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIntegerLessThan (1 samples, 0.10%)</title><rect x="108.3" y="1491.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.create (1 samples, 0.10%)</title><rect x="108.3" y="1475.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.3" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (1 samples, 0.10%)</title><rect x="108.3" y="1459.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.3" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.findSynonym (1 samples, 0.10%)</title><rect x="108.3" y="1443.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="111.3" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.findSynonym (1 samples, 0.10%)</title><rect x="108.3" y="1427.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.3" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/LogicNegationNode.create (1 samples, 0.10%)</title><rect x="108.3" y="1411.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.3" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/LogicNegationNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="108.3" y="1395.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.3" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/LogicNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="108.3" y="1379.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="111.3" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forVoid (1 samples, 0.10%)</title><rect x="108.3" y="1363.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.3" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/VoidStamp.getInstance (1 samples, 0.10%)</title><rect x="108.3" y="1347.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.3" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.10%)</title><rect x="109.6" y="1507.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.6" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryGenConditionalForIf (1 samples, 0.10%)</title><rect x="109.6" y="1491.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="112.6" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genConditionalForIf (1 samples, 0.10%)</title><rect x="109.6" y="1475.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="112.6" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forInt (1 samples, 0.10%)</title><rect x="109.6" y="1459.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.6" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.createPrimitive (1 samples, 0.10%)</title><rect x="109.6" y="1443.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.6" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forConstant (1 samples, 0.10%)</title><rect x="109.6" y="1427.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.6" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forInteger (1 samples, 0.10%)</title><rect x="109.6" y="1411.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.6" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.create (1 samples, 0.10%)</title><rect x="109.6" y="1395.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.6" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (2 samples, 0.21%)</title><rect x="110.8" y="1539.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="110.8" y="1523.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="110.8" y="1507.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="113.8" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createNonInlinedInvoke (1 samples, 0.10%)</title><rect x="110.8" y="1491.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.8" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createNonInlinedInvoke (1 samples, 0.10%)</title><rect x="110.8" y="1475.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.8" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createInvoke (1 samples, 0.10%)</title><rect x="110.8" y="1459.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.8" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createFrameState (1 samples, 0.10%)</title><rect x="110.8" y="1443.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.8" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.clearNonLiveLocals (1 samples, 0.10%)</title><rect x="110.8" y="1427.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="113.8" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/SmallLocalLiveness.localIsLiveOut (1 samples, 0.10%)</title><rect x="110.8" y="1411.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.8" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping$BciBlock.getId (1 samples, 0.10%)</title><rect x="110.8" y="1395.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.8" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethod (1 samples, 0.10%)</title><rect x="112.0" y="1523.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethodInPool (1 samples, 0.10%)</title><rect x="112.0" y="1507.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.0" y="1518.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupMethod (1 samples, 0.10%)</title><rect x="112.0" y="1491.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.0" y="1502.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.lookupMethodInPool (1 samples, 0.10%)</title><rect x="112.0" y="1475.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="115.0" y="1486.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.fromMetaspace (1 samples, 0.10%)</title><rect x="112.0" y="1459.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.0" y="1470.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.createMethod (1 samples, 0.10%)</title><rect x="112.0" y="1443.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.0" y="1454.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.&lt;init&gt; (1 samples, 0.10%)</title><rect x="112.0" y="1427.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="115.0" y="1438.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupSignature (1 samples, 0.10%)</title><rect x="112.0" y="1411.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.0" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotSignature.&lt;init&gt; (1 samples, 0.10%)</title><rect x="112.0" y="1395.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.0" y="1406.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotSignature.parseSignature (1 samples, 0.10%)</title><rect x="112.0" y="1379.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.0" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.10%)</title><rect x="113.3" y="1539.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.10%)</title><rect x="113.3" y="1523.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.10%)</title><rect x="113.3" y="1507.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="113.3" y="1491.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.getActionForInvokeExceptionEdge (1 samples, 0.10%)</title><rect x="113.3" y="1475.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.3" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/OptimisticOptimizations.useExceptionProbability (1 samples, 0.10%)</title><rect x="113.3" y="1459.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.3" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genReturn (1 samples, 0.10%)</title><rect x="114.5" y="1539.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.5" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="114.5" y="1523.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="117.5" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="114.5" y="1507.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="117.5" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="114.5" y="1491.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="117.5" y="1502.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="114.5" y="1475.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="117.5" y="1486.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.10%)</title><rect x="114.5" y="1459.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="117.5" y="1470.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.10%)</title><rect x="114.5" y="1443.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="117.5" y="1454.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="114.5" y="1427.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="117.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.loadLocalObject (2 samples, 0.21%)</title><rect x="115.7" y="1539.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="118.7" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (2 samples, 0.21%)</title><rect x="115.7" y="1523.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (2 samples, 0.21%)</title><rect x="115.7" y="1507.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="118.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (2 samples, 0.21%)</title><rect x="115.7" y="1491.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="118.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genLoadField (2 samples, 0.21%)</title><rect x="115.7" y="1475.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="118.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.create (1 samples, 0.10%)</title><rect x="116.9" y="1459.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.9" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="116.9" y="1443.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="116.9" y="1427.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.9" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="116.9" y="1411.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="119.9" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/ComputeLoopFrequenciesClosure.compute (1 samples, 0.10%)</title><rect x="118.2" y="1603.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.2" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (1 samples, 0.10%)</title><rect x="118.2" y="1587.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.2" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (1 samples, 0.10%)</title><rect x="118.2" y="1571.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.2" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/ComputeLoopFrequenciesClosure.processLoop (1 samples, 0.10%)</title><rect x="118.2" y="1555.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.2" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/ComputeLoopFrequenciesClosure.processLoop (1 samples, 0.10%)</title><rect x="118.2" y="1539.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.processLoop (1 samples, 0.10%)</title><rect x="118.2" y="1523.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterator.hasNext (1 samples, 0.10%)</title><rect x="118.2" y="1507.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator.forward (1 samples, 0.10%)</title><rect x="118.2" y="1491.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodePredicates$PositiveTypePredicate.apply (1 samples, 0.10%)</title><rect x="118.2" y="1475.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopFullUnrollPhase.run (2 samples, 0.21%)</title><rect x="119.4" y="1667.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.4" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopFullUnrollPhase.run (2 samples, 0.21%)</title><rect x="119.4" y="1651.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.4" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopsData.&lt;init&gt; (1 samples, 0.10%)</title><rect x="119.4" y="1635.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.4" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.10%)</title><rect x="119.4" y="1619.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.4" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.identifyBlocks (1 samples, 0.10%)</title><rect x="119.4" y="1603.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="122.4" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.computeLoopPredecessors (1 samples, 0.10%)</title><rect x="119.4" y="1587.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="122.4" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/LoopBeginNode.orderedLoopEnds (1 samples, 0.10%)</title><rect x="119.4" y="1571.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.4" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.fullUnroll (1 samples, 0.10%)</title><rect x="120.6" y="1635.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.6" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.peel (1 samples, 0.10%)</title><rect x="120.6" y="1619.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.6" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.insertBefore (1 samples, 0.10%)</title><rect x="120.6" y="1603.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="123.6" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.patchNodes (1 samples, 0.10%)</title><rect x="120.6" y="1587.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="123.6" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.nodes (1 samples, 0.10%)</title><rect x="120.6" y="1571.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.6" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentWhole.nodes (1 samples, 0.10%)</title><rect x="120.6" y="1555.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.6" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.computeNodes (1 samples, 0.10%)</title><rect x="120.6" y="1539.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.6" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (12 samples, 1.25%)</title><rect x="121.9" y="1667.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.9" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/ReassociateInvariantPhase.run (1 samples, 0.10%)</title><rect x="121.9" y="1651.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.9" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopEx.reassociateInvariants (1 samples, 0.10%)</title><rect x="121.9" y="1635.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.9" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentWhole.nodes (1 samples, 0.10%)</title><rect x="121.9" y="1619.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.9" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.computeNodes (1 samples, 0.10%)</title><rect x="121.9" y="1603.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.9" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.markFloating (1 samples, 0.10%)</title><rect x="121.9" y="1587.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="124.9" y="1598.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.iterator (1 samples, 0.10%)</title><rect x="121.9" y="1571.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.9" y="1582.0"></text>
</g>
<g>
<title>java/util/ArrayDeque$DeqIterator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="121.9" y="1555.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.9" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/AddressLoweringPhase.run (5 samples, 0.52%)</title><rect x="123.1" y="1651.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="126.1" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64AddressLowering.lower (2 samples, 0.21%)</title><rect x="123.1" y="1635.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.1" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64CompressAddressLowering.improve (1 samples, 0.10%)</title><rect x="123.1" y="1619.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.1" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64CompressAddressLowering.tryToImproveUncompression (1 samples, 0.10%)</title><rect x="123.1" y="1603.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.1" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/CompressionNode.getOp (1 samples, 0.10%)</title><rect x="123.1" y="1587.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.1" y="1598.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="123.1" y="1571.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="126.1" y="1582.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="123.1" y="1555.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="126.1" y="1566.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="123.1" y="1539.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="126.1" y="1550.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="123.1" y="1523.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="126.1" y="1534.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="123.1" y="1507.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="126.1" y="1518.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="123.1" y="1491.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="126.1" y="1502.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="123.1" y="1475.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="126.1" y="1486.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="123.1" y="1459.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="126.1" y="1470.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="123.1" y="1443.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="126.1" y="1454.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="123.1" y="1427.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="126.1" y="1438.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="123.1" y="1411.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="126.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.10%)</title><rect x="124.3" y="1619.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="127.3" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="124.3" y="1603.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.3" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotAddressLowering.preProcess (2 samples, 0.21%)</title><rect x="125.5" y="1635.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.5" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopsData.detectedCountedLoops (2 samples, 0.21%)</title><rect x="125.5" y="1619.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.5" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopEx.detectCounted (2 samples, 0.21%)</title><rect x="125.5" y="1603.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.5" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopEx.isOutsideLoop (2 samples, 0.21%)</title><rect x="125.5" y="1587.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.5" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.contains (2 samples, 0.21%)</title><rect x="125.5" y="1571.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.5" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentWhole.nodes (2 samples, 0.21%)</title><rect x="125.5" y="1555.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.5" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.computeNodes (2 samples, 0.21%)</title><rect x="125.5" y="1539.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.5" y="1550.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.10%)</title><rect x="125.5" y="1523.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="128.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.markFloating (1 samples, 0.10%)</title><rect x="126.8" y="1523.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.pushWorkList (1 samples, 0.10%)</title><rect x="126.8" y="1507.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.8" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.push (1 samples, 0.10%)</title><rect x="126.8" y="1491.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="129.8" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addFirst (1 samples, 0.10%)</title><rect x="126.8" y="1475.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="129.8" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.10%)</title><rect x="128.0" y="1635.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.0" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.10%)</title><rect x="128.0" y="1619.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.0" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.10%)</title><rect x="128.0" y="1603.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.0" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.10%)</title><rect x="128.0" y="1587.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="131.0" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.markDeleted (1 samples, 0.10%)</title><rect x="128.0" y="1571.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.0" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unregister (1 samples, 0.10%)</title><rect x="128.0" y="1555.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.0" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.removeNodeFromCache (1 samples, 0.10%)</title><rect x="128.0" y="1539.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.0" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.run (1 samples, 0.10%)</title><rect x="129.2" y="1651.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.2" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.iterateSuccessorsAndInputs (1 samples, 0.10%)</title><rect x="129.2" y="1635.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.2" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.applyInputs (1 samples, 0.10%)</title><rect x="129.2" y="1619.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.2" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.applyInputs (1 samples, 0.10%)</title><rect x="129.2" y="1603.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.2" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.applyEdges (1 samples, 0.10%)</title><rect x="129.2" y="1587.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.2" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase$1.apply (1 samples, 0.10%)</title><rect x="129.2" y="1571.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.2" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeFlood.add (1 samples, 0.10%)</title><rect x="129.2" y="1555.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.2" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ExpandLogicPhase.run (1 samples, 0.10%)</title><rect x="130.5" y="1651.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="133.5" y="1662.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="130.5" y="1635.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="133.5" y="1646.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="130.5" y="1619.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="133.5" y="1630.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="130.5" y="1603.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="133.5" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.10%)</title><rect x="130.5" y="1587.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="133.5" y="1598.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="130.5" y="1571.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="133.5" y="1582.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="130.5" y="1555.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="133.5" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="130.5" y="1539.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="133.5" y="1550.0"></text>
</g>
<g>
<title>klassVtable::initialize_vtable(bool, Thread*) (1 samples, 0.10%)</title><rect x="130.5" y="1523.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="133.5" y="1534.0"></text>
</g>
<g>
<title>klassVtable::update_inherited_vtable(InstanceKlass*, methodHandle const&amp;, int, int, bool, Thread*) (1 samples, 0.10%)</title><rect x="130.5" y="1507.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="133.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (4 samples, 0.42%)</title><rect x="131.7" y="1651.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.7" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (4 samples, 0.42%)</title><rect x="131.7" y="1635.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.7" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlocks (1 samples, 0.10%)</title><rect x="131.7" y="1619.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="134.7" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlock (1 samples, 0.10%)</title><rect x="131.7" y="1603.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.7" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (3 samples, 0.31%)</title><rect x="132.9" y="1619.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="135.9" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.inputs (1 samples, 0.10%)</title><rect x="132.9" y="1603.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="135.9" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getInputIterable (1 samples, 0.10%)</title><rect x="132.9" y="1587.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$3.&lt;init&gt; (1 samples, 0.10%)</title><rect x="132.9" y="1571.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.phis (1 samples, 0.10%)</title><rect x="134.1" y="1603.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="137.1" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/FilteredNodeIterable.filter (1 samples, 0.10%)</title><rect x="134.1" y="1587.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/FilteredNodeIterable.and (1 samples, 0.10%)</title><rect x="134.1" y="1571.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodePredicate.and (1 samples, 0.10%)</title><rect x="134.1" y="1555.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processNodes (1 samples, 0.10%)</title><rect x="135.4" y="1603.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.4" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStack (1 samples, 0.10%)</title><rect x="135.4" y="1587.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="138.4" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance$MicroBlock.add (1 samples, 0.10%)</title><rect x="135.4" y="1571.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="138.4" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (17 samples, 1.77%)</title><rect x="136.6" y="1667.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.6" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (17 samples, 1.77%)</title><rect x="136.6" y="1651.0" width="20.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.6" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (17 samples, 1.77%)</title><rect x="136.6" y="1635.0" width="20.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="139.6" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (17 samples, 1.77%)</title><rect x="136.6" y="1619.0" width="20.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="139.6" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList$1.next (1 samples, 0.10%)</title><rect x="136.6" y="1603.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.6" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (16 samples, 1.67%)</title><rect x="137.8" y="1603.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.8" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (11 samples, 1.15%)</title><rect x="137.8" y="1587.0" width="13.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.8" y="1598.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.10%)</title><rect x="137.8" y="1571.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="140.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.withNodeSourcePosition (1 samples, 0.10%)</title><rect x="139.1" y="1571.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.withNodeSourcePosition (1 samples, 0.10%)</title><rect x="139.1" y="1555.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.getNodeSourcePosition (1 samples, 0.10%)</title><rect x="139.1" y="1539.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="142.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.getNodeInfo (1 samples, 0.10%)</title><rect x="139.1" y="1523.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="142.1" y="1534.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.10%)</title><rect x="139.1" y="1507.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.1" y="1518.0"></text>
</g>
<g>
<title>Runtime1::is_instance_of(oopDesc*, oopDesc*) (1 samples, 0.10%)</title><rect x="139.1" y="1491.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="142.1" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (3 samples, 0.31%)</title><rect x="140.3" y="1571.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.3" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AddNode.canonical (1 samples, 0.10%)</title><rect x="140.3" y="1555.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.3" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AddNode.canonical (1 samples, 0.10%)</title><rect x="140.3" y="1539.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryArithmeticNode.getOp (1 samples, 0.10%)</title><rect x="140.3" y="1523.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AddNode.getOp (1 samples, 0.10%)</title><rect x="140.3" y="1507.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/ArithmeticOpTable.getAdd (1 samples, 0.10%)</title><rect x="140.3" y="1491.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (2 samples, 0.21%)</title><rect x="141.5" y="1555.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.5" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (2 samples, 0.21%)</title><rect x="141.5" y="1539.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (2 samples, 0.21%)</title><rect x="141.5" y="1523.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/CompareNode$CompareOp.canonical (1 samples, 0.10%)</title><rect x="141.5" y="1507.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.findSynonym (1 samples, 0.10%)</title><rect x="142.7" y="1507.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.findSynonym (1 samples, 0.10%)</title><rect x="142.7" y="1491.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Unary.canonical (1 samples, 0.10%)</title><rect x="144.0" y="1571.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.0" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="144.0" y="1555.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.0" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="144.0" y="1539.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.0" y="1550.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="144.0" y="1523.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="147.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/BeginNode.simplify (1 samples, 0.10%)</title><rect x="145.2" y="1571.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.2" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.simplify (2 samples, 0.21%)</title><rect x="146.4" y="1571.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.4" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/SwitchFoldable.switchTransformationOptimization (1 samples, 0.10%)</title><rect x="147.7" y="1555.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.7" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.switchValue (1 samples, 0.10%)</title><rect x="147.7" y="1539.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.7" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/SwitchFoldable.maybeIsInSwitch (1 samples, 0.10%)</title><rect x="147.7" y="1523.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/MethodCallTargetNode.simplify (1 samples, 0.10%)</title><rect x="148.9" y="1571.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.9" y="1582.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getSingleImplementor (1 samples, 0.10%)</title><rect x="148.9" y="1555.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.9" y="1566.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getSingleImplementor (1 samples, 0.10%)</title><rect x="148.9" y="1539.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.9" y="1550.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getImplementor (1 samples, 0.10%)</title><rect x="148.9" y="1523.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.9" y="1534.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.10%)</title><rect x="148.9" y="1507.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="151.9" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.performReplacement (1 samples, 0.10%)</title><rect x="150.1" y="1571.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$Tool.addToWorkList (1 samples, 0.10%)</title><rect x="150.1" y="1555.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.add (1 samples, 0.10%)</title><rect x="150.1" y="1539.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.inflateToBitMap (1 samples, 0.10%)</title><rect x="150.1" y="1523.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.1" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayDeque$DeqIterator.next (1 samples, 0.10%)</title><rect x="150.1" y="1507.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.1" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryGlobalValueNumbering (1 samples, 0.10%)</title><rect x="151.4" y="1587.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.4" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.10%)</title><rect x="151.4" y="1571.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.4" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.10%)</title><rect x="151.4" y="1555.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.4" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.forward (1 samples, 0.10%)</title><rect x="151.4" y="1539.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.4" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.getInput (1 samples, 0.10%)</title><rect x="151.4" y="1523.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.10%)</title><rect x="151.4" y="1507.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="154.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryInferStamp (4 samples, 0.42%)</title><rect x="152.6" y="1587.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="155.6" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValuePhiNode.inferStamp (2 samples, 0.21%)</title><rect x="152.6" y="1571.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.6" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.meetOrNull (1 samples, 0.10%)</title><rect x="153.8" y="1555.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="156.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeList.iterator (1 samples, 0.10%)</title><rect x="153.8" y="1539.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="156.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ConditionalNode.inferStamp (1 samples, 0.10%)</title><rect x="155.0" y="1571.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.0" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.meet (1 samples, 0.10%)</title><rect x="155.0" y="1555.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.0" y="1566.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="156.3" y="1571.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="159.3" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase.run (13 samples, 1.35%)</title><rect x="157.5" y="1667.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.5" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase.run (13 samples, 1.35%)</title><rect x="157.5" y="1651.0" width="16.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.5" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTree (9 samples, 0.94%)</title><rect x="157.5" y="1635.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="160.5" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDefault (9 samples, 0.94%)</title><rect x="157.5" y="1619.0" width="11.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="160.5" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.enter (9 samples, 0.94%)</title><rect x="157.5" y="1603.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.5" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.enter (9 samples, 0.94%)</title><rect x="157.5" y="1587.0" width="11.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="160.5" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.processNode (8 samples, 0.83%)</title><rect x="158.7" y="1571.0" width="9.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.7" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.processAbstractBegin (3 samples, 0.31%)</title><rect x="158.7" y="1555.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.7" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.registerIntegerSwitch (1 samples, 0.10%)</title><rect x="158.7" y="1539.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="161.7" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/IntegerSwitchNode.getValueStampForSuccessor (1 samples, 0.10%)</title><rect x="158.7" y="1523.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/SwitchNode.keySuccessor (1 samples, 0.10%)</title><rect x="158.7" y="1507.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.registerNewCondition (2 samples, 0.21%)</title><rect x="160.0" y="1539.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="163.0" y="1550.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbabb0000)@0x0000000110022780 (1 samples, 0.10%)</title><rect x="160.0" y="1523.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.registerCondition (1 samples, 0.10%)</title><rect x="161.2" y="1523.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="164.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.processBinary (3 samples, 0.31%)</title><rect x="162.4" y="1555.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="165.4" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryArithmeticNode.foldStamp (1 samples, 0.10%)</title><rect x="162.4" y="1539.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.4" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp$2.foldStamp (1 samples, 0.10%)</title><rect x="162.4" y="1523.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forInteger (1 samples, 0.10%)</title><rect x="162.4" y="1507.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="165.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.create (1 samples, 0.10%)</title><rect x="162.4" y="1491.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="165.4" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.maxValueForMasks (1 samples, 0.10%)</title><rect x="162.4" y="1475.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.4" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ShiftNode.foldStamp (2 samples, 0.21%)</title><rect x="163.6" y="1539.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.6" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp$13.foldStamp (1 samples, 0.10%)</title><rect x="163.6" y="1523.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp$13.getShiftAmountMask (1 samples, 0.10%)</title><rect x="163.6" y="1507.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.6" y="1518.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x000000011001a500 (1 samples, 0.10%)</title><rect x="163.6" y="1491.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.6" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ShiftNode.getArithmeticOp (1 samples, 0.10%)</title><rect x="164.9" y="1523.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.9" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ShiftNode.getOp (1 samples, 0.10%)</title><rect x="164.9" y="1507.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="167.9" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/UnsignedRightShiftNode.getOp (1 samples, 0.10%)</title><rect x="164.9" y="1491.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="167.9" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="164.9" y="1475.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="167.9" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="164.9" y="1459.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="167.9" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="164.9" y="1443.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="167.9" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="164.9" y="1427.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="167.9" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="164.9" y="1411.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="167.9" y="1422.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="164.9" y="1395.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="167.9" y="1406.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="164.9" y="1379.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="167.9" y="1390.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="164.9" y="1363.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="167.9" y="1374.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="164.9" y="1347.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="167.9" y="1358.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="164.9" y="1331.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="167.9" y="1342.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="164.9" y="1315.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="167.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.processEnd (1 samples, 0.10%)</title><rect x="166.1" y="1555.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.processIf (1 samples, 0.10%)</title><rect x="167.3" y="1555.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="170.3" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase$RawConditionalEliminationVisitor.tryProveCondition (1 samples, 0.10%)</title><rect x="167.3" y="1539.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode.tryFold (1 samples, 0.10%)</title><rect x="167.3" y="1523.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.3" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="167.3" y="1507.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="170.3" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="167.3" y="1491.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="170.3" y="1502.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="167.3" y="1475.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="170.3" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="167.3" y="1459.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="170.3" y="1470.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="167.3" y="1443.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="170.3" y="1454.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="167.3" y="1427.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="170.3" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="167.3" y="1411.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="170.3" y="1422.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="167.3" y="1395.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="170.3" y="1406.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="167.3" y="1379.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="170.3" y="1390.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="167.3" y="1363.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="170.3" y="1374.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="167.3" y="1347.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="170.3" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 0.42%)</title><rect x="168.6" y="1635.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.6" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 0.42%)</title><rect x="168.6" y="1619.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.6" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (4 samples, 0.42%)</title><rect x="168.6" y="1603.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="171.6" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (4 samples, 0.42%)</title><rect x="168.6" y="1587.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.6" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (4 samples, 0.42%)</title><rect x="168.6" y="1571.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.6" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (4 samples, 0.42%)</title><rect x="168.6" y="1555.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="171.6" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.10%)</title><rect x="168.6" y="1539.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="171.6" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.identifyBlocks (1 samples, 0.10%)</title><rect x="168.6" y="1523.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="171.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.next (1 samples, 0.10%)</title><rect x="168.6" y="1507.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.6" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.next (1 samples, 0.10%)</title><rect x="168.6" y="1491.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="171.6" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.findNext (1 samples, 0.10%)</title><rect x="168.6" y="1475.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="171.6" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlocks (1 samples, 0.10%)</title><rect x="169.8" y="1539.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (1 samples, 0.10%)</title><rect x="171.0" y="1539.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="174.0" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processNodes (1 samples, 0.10%)</title><rect x="171.0" y="1523.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="174.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStack (1 samples, 0.10%)</title><rect x="171.0" y="1507.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.0" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processInputs (1 samples, 0.10%)</title><rect x="171.0" y="1491.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.0" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.10%)</title><rect x="171.0" y="1475.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.0" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.forward (1 samples, 0.10%)</title><rect x="171.0" y="1459.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="174.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.getInput (1 samples, 0.10%)</title><rect x="171.0" y="1443.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="174.0" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.10%)</title><rect x="171.0" y="1427.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="174.0" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortNodesLatestWithinBlock (1 samples, 0.10%)</title><rect x="172.2" y="1539.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortNodesLatestWithinBlock (1 samples, 0.10%)</title><rect x="172.2" y="1523.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="175.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortIntoList (1 samples, 0.10%)</title><rect x="172.2" y="1507.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.10%)</title><rect x="172.2" y="1491.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="175.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase.run (1 samples, 0.10%)</title><rect x="173.5" y="1667.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="176.5" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase.run (1 samples, 0.10%)</title><rect x="173.5" y="1651.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="176.5" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="173.5" y="1635.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.5" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="173.5" y="1619.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="176.5" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="173.5" y="1603.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="176.5" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="173.5" y="1587.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.5" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (1 samples, 0.10%)</title><rect x="173.5" y="1571.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.5" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (1 samples, 0.10%)</title><rect x="173.5" y="1555.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.5" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (1 samples, 0.10%)</title><rect x="173.5" y="1539.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processNodes (1 samples, 0.10%)</title><rect x="173.5" y="1523.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="176.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStack (1 samples, 0.10%)</title><rect x="173.5" y="1507.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processInputs (1 samples, 0.10%)</title><rect x="173.5" y="1491.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.10%)</title><rect x="173.5" y="1475.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="176.5" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.forward (1 samples, 0.10%)</title><rect x="173.5" y="1459.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="176.5" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.getInput (1 samples, 0.10%)</title><rect x="173.5" y="1443.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="176.5" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.10%)</title><rect x="173.5" y="1427.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="176.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (14 samples, 1.46%)</title><rect x="174.7" y="1667.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.7" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (14 samples, 1.46%)</title><rect x="174.7" y="1651.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="177.7" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.trackNodeEvents (1 samples, 0.10%)</title><rect x="174.7" y="1635.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.7" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventScope.&lt;init&gt; (1 samples, 0.10%)</title><rect x="174.7" y="1619.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="177.7" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (8 samples, 0.83%)</title><rect x="175.9" y="1635.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.9" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (8 samples, 0.83%)</title><rect x="175.9" y="1619.0" width="9.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="178.9" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (8 samples, 0.83%)</title><rect x="175.9" y="1603.0" width="9.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.9" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/ConvertDeoptimizeToGuardPhase.run (1 samples, 0.10%)</title><rect x="175.9" y="1587.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="178.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/ConvertDeoptimizeToGuardPhase.run (1 samples, 0.10%)</title><rect x="175.9" y="1571.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="175.9" y="1555.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="178.9" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="175.9" y="1539.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.9" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="175.9" y="1523.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.9" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="175.9" y="1507.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.9" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.run (1 samples, 0.10%)</title><rect x="175.9" y="1491.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="178.9" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopPeelingPhase.run (3 samples, 0.31%)</title><rect x="177.2" y="1587.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.2" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopPeelingPhase.run (3 samples, 0.31%)</title><rect x="177.2" y="1571.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.2" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopEx.canDuplicateLoop (2 samples, 0.21%)</title><rect x="177.2" y="1555.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.2" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.nodes (2 samples, 0.21%)</title><rect x="177.2" y="1539.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.clearStateNodes (1 samples, 0.10%)</title><rect x="177.2" y="1523.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.applyToVirtual (1 samples, 0.10%)</title><rect x="177.2" y="1507.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.applyToVirtual (1 samples, 0.10%)</title><rect x="177.2" y="1491.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="180.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside$$Lambda$87.0x0000000800d5ae50.apply (1 samples, 0.10%)</title><rect x="177.2" y="1475.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.lambda$clearStateNodes$1 (1 samples, 0.10%)</title><rect x="177.2" y="1459.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.2" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterable.isEmpty (1 samples, 0.10%)</title><rect x="177.2" y="1443.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterator.hasNext (1 samples, 0.10%)</title><rect x="177.2" y="1427.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="180.2" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator.forward (1 samples, 0.10%)</title><rect x="177.2" y="1411.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside$$Lambda$88.0x0000000800d5b280.apply (1 samples, 0.10%)</title><rect x="177.2" y="1395.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.2" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="177.2" y="1379.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="180.2" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="177.2" y="1363.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="180.2" y="1374.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="177.2" y="1347.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="180.2" y="1358.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="177.2" y="1331.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="180.2" y="1342.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="177.2" y="1315.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="180.2" y="1326.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="177.2" y="1299.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="180.2" y="1310.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="177.2" y="1283.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="180.2" y="1294.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="177.2" y="1267.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="180.2" y="1278.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="177.2" y="1251.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="180.2" y="1262.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="177.2" y="1235.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="180.2" y="1246.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="177.2" y="1219.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="180.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentWhole.nodes (1 samples, 0.10%)</title><rect x="178.4" y="1523.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.graph (1 samples, 0.10%)</title><rect x="178.4" y="1507.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.peel (1 samples, 0.10%)</title><rect x="179.6" y="1555.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.6" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.insertBefore (1 samples, 0.10%)</title><rect x="179.6" y="1539.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="182.6" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.mergeEnds (1 samples, 0.10%)</title><rect x="179.6" y="1523.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (4 samples, 0.42%)</title><rect x="180.9" y="1587.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase.run (4 samples, 0.42%)</title><rect x="180.9" y="1571.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="183.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase.removeExternallyUsedNodes (1 samples, 0.10%)</title><rect x="180.9" y="1555.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.9" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl$SparseMapIterator.remove (1 samples, 0.10%)</title><rect x="180.9" y="1539.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.9" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="180.9" y="1523.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="183.9" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="180.9" y="1507.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="183.9" y="1518.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="180.9" y="1491.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="183.9" y="1502.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="180.9" y="1475.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="183.9" y="1486.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="180.9" y="1459.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="183.9" y="1470.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="180.9" y="1443.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="183.9" y="1454.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="180.9" y="1427.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="183.9" y="1438.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="180.9" y="1411.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="183.9" y="1422.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="180.9" y="1395.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="183.9" y="1406.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="180.9" y="1379.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="183.9" y="1390.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="180.9" y="1363.0" width="1.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="183.9" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (3 samples, 0.31%)</title><rect x="182.1" y="1555.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (3 samples, 0.31%)</title><rect x="182.1" y="1539.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.merge (1 samples, 0.10%)</title><rect x="182.1" y="1523.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.1" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.merge (1 samples, 0.10%)</title><rect x="182.1" y="1507.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.1" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase.mergeMemoryMaps (1 samples, 0.10%)</title><rect x="182.1" y="1491.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.1" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$MemoryMapImpl.getLocations (1 samples, 0.10%)</title><rect x="182.1" y="1475.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="185.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getKeys (1 samples, 0.10%)</title><rect x="182.1" y="1459.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.1" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processLoop (1 samples, 0.10%)</title><rect x="183.3" y="1523.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processLoop (1 samples, 0.10%)</title><rect x="183.3" y="1507.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.processLoop (1 samples, 0.10%)</title><rect x="183.3" y="1491.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="186.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (1 samples, 0.10%)</title><rect x="183.3" y="1475.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.3" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processLoop (1 samples, 0.10%)</title><rect x="183.3" y="1459.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="186.3" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processLoop (1 samples, 0.10%)</title><rect x="183.3" y="1443.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="186.3" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.processLoop (1 samples, 0.10%)</title><rect x="183.3" y="1427.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.3" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (1 samples, 0.10%)</title><rect x="183.3" y="1411.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.3" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.10%)</title><rect x="183.3" y="1395.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.3" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.10%)</title><rect x="183.3" y="1379.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="186.3" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processFloatable (1 samples, 0.10%)</title><rect x="183.3" y="1363.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="186.3" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/memory/ReadNode.asFloatingNode (1 samples, 0.10%)</title><rect x="183.3" y="1347.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="186.3" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.10%)</title><rect x="183.3" y="1331.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="183.3" y="1315.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="183.3" y="1299.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.3" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="183.3" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.3" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="183.3" y="1267.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.3" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="183.3" y="1251.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.3" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$ChainedNodeEventListener.changed (1 samples, 0.10%)</title><rect x="183.3" y="1235.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.3" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="183.3" y="1219.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="186.3" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="183.3" y="1203.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="186.3" y="1214.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.10%)</title><rect x="183.3" y="1187.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.10%)</title><rect x="184.5" y="1523.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (5 samples, 0.52%)</title><rect x="185.8" y="1635.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.8" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (5 samples, 0.52%)</title><rect x="185.8" y="1619.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="188.8" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (5 samples, 0.52%)</title><rect x="185.8" y="1603.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.8" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (5 samples, 0.52%)</title><rect x="185.8" y="1587.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.8" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (5 samples, 0.52%)</title><rect x="185.8" y="1571.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="188.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList.addAll (1 samples, 0.10%)</title><rect x="185.8" y="1555.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.add (1 samples, 0.10%)</title><rect x="185.8" y="1539.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.8" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.10%)</title><rect x="185.8" y="1523.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="188.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (4 samples, 0.42%)</title><rect x="187.0" y="1555.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.0" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (4 samples, 0.42%)</title><rect x="187.0" y="1539.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.0" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (3 samples, 0.31%)</title><rect x="187.0" y="1523.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (1 samples, 0.10%)</title><rect x="187.0" y="1507.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="190.0" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.10%)</title><rect x="187.0" y="1491.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.0" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.10%)</title><rect x="187.0" y="1475.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.0" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (1 samples, 0.10%)</title><rect x="187.0" y="1459.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.findSynonym (1 samples, 0.10%)</title><rect x="187.0" y="1443.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="190.0" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.findSynonym (1 samples, 0.10%)</title><rect x="187.0" y="1427.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.0" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Unary.canonical (1 samples, 0.10%)</title><rect x="188.2" y="1507.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="191.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="188.2" y="1491.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="191.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="188.2" y="1475.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="191.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$Tool.allUsagesAvailable (1 samples, 0.10%)</title><rect x="188.2" y="1459.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.2" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.simplify (1 samples, 0.10%)</title><rect x="189.5" y="1507.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.anchored (1 samples, 0.10%)</title><rect x="189.5" y="1491.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="192.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.10%)</title><rect x="189.5" y="1475.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.10%)</title><rect x="189.5" y="1459.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.5" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.10%)</title><rect x="189.5" y="1443.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.10%)</title><rect x="189.5" y="1427.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.10%)</title><rect x="189.5" y="1411.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.5" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="189.5" y="1395.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.10%)</title><rect x="189.5" y="1379.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.10%)</title><rect x="189.5" y="1363.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.10%)</title><rect x="189.5" y="1347.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (1 samples, 0.10%)</title><rect x="189.5" y="1331.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="192.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory$ForwardingMethodGenerator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="189.5" y="1315.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="192.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/TypeConvertingMethodAdapter.&lt;init&gt; (1 samples, 0.10%)</title><rect x="189.5" y="1299.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.5" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="189.5" y="1283.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="192.5" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryInferStamp (1 samples, 0.10%)</title><rect x="190.7" y="1523.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadIndexedNode.inferStamp (1 samples, 0.10%)</title><rect x="190.7" y="1507.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadIndexedNode.createStamp (1 samples, 0.10%)</title><rect x="190.7" y="1491.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.7" y="1502.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getComponentType (1 samples, 0.10%)</title><rect x="190.7" y="1475.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="193.7" y="1486.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getComponentType (1 samples, 0.10%)</title><rect x="190.7" y="1459.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.7" y="1470.0"></text>
</g>
<g>
<title>c2v_getComponentType(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.10%)</title><rect x="190.7" y="1443.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="193.7" y="1454.0"></text>
</g>
<g>
<title>JVMCIEnv::get_jvmci_type(JVMCIKlassHandle const&amp;, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="190.7" y="1427.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="193.7" y="1438.0"></text>
</g>
<g>
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.10%)</title><rect x="190.7" y="1411.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="193.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (21 samples, 2.19%)</title><rect x="191.9" y="1667.0" width="25.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="194.9" y="1678.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (21 samples, 2.19%)</title><rect x="191.9" y="1651.0" width="25.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.9" y="1662.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (20 samples, 2.08%)</title><rect x="193.1" y="1635.0" width="24.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.1" y="1646.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (20 samples, 2.08%)</title><rect x="193.1" y="1619.0" width="24.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.1" y="1630.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (20 samples, 2.08%)</title><rect x="193.1" y="1603.0" width="24.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.1" y="1614.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (20 samples, 2.08%)</title><rect x="193.1" y="1587.0" width="24.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.1" y="1598.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTree (16 samples, 1.67%)</title><rect x="193.1" y="1571.0" width="19.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="196.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDefault (5 samples, 0.52%)</title><rect x="193.1" y="1555.0" width="6.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (5 samples, 0.52%)</title><rect x="193.1" y="1539.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (5 samples, 0.52%)</title><rect x="193.1" y="1523.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="196.1" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.clear (1 samples, 0.10%)</title><rect x="193.1" y="1507.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.1" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.circularClear (1 samples, 0.10%)</title><rect x="193.1" y="1491.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.1" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="193.1" y="1475.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="196.1" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="193.1" y="1459.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="196.1" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="193.1" y="1443.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="196.1" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="193.1" y="1427.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="196.1" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="193.1" y="1411.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="196.1" y="1422.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="193.1" y="1395.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="196.1" y="1406.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="193.1" y="1379.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="196.1" y="1390.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="193.1" y="1363.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="196.1" y="1374.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="193.1" y="1347.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="196.1" y="1358.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="193.1" y="1331.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="196.1" y="1342.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="193.1" y="1315.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="196.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNodes (4 samples, 0.42%)</title><rect x="194.4" y="1507.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processBlock (3 samples, 0.31%)</title><rect x="194.4" y="1491.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="197.4" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNode (3 samples, 0.31%)</title><rect x="194.4" y="1475.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.4" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processAbstractBegin (1 samples, 0.10%)</title><rect x="194.4" y="1459.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.4" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.registerNewCondition (1 samples, 0.10%)</title><rect x="194.4" y="1443.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="197.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.registerNewStamp (1 samples, 0.10%)</title><rect x="194.4" y="1427.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.registerNewStamp (1 samples, 0.10%)</title><rect x="194.4" y="1411.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="194.4" y="1395.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="197.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="194.4" y="1379.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="194.4" y="1363.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="194.4" y="1347.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="194.4" y="1331.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.4" y="1342.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="194.4" y="1315.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="197.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="194.4" y="1299.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="194.4" y="1283.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.4" y="1294.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="194.4" y="1267.0" width="1.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="197.4" y="1278.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="194.4" y="1251.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="197.4" y="1262.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="194.4" y="1235.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="197.4" y="1246.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="194.4" y="1219.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="197.4" y="1230.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="194.4" y="1203.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="197.4" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.10%)</title><rect x="194.4" y="1187.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="197.4" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.10%)</title><rect x="194.4" y="1171.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="197.4" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.10%)</title><rect x="194.4" y="1155.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="197.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processFixedGuard (2 samples, 0.21%)</title><rect x="195.6" y="1459.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.6" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.registerNewCondition (2 samples, 0.21%)</title><rect x="195.6" y="1443.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.6" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.push (2 samples, 0.21%)</title><rect x="195.6" y="1427.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.6" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addFirst (2 samples, 0.21%)</title><rect x="195.6" y="1411.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.6" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNode (1 samples, 0.10%)</title><rect x="198.1" y="1491.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.1" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processGuard (1 samples, 0.10%)</title><rect x="198.1" y="1475.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.1" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.tryProveGuardCondition (1 samples, 0.10%)</title><rect x="198.1" y="1459.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.1" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.tryProveGuardCondition (1 samples, 0.10%)</title><rect x="198.1" y="1443.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="201.1" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance$2.foldGuard (1 samples, 0.10%)</title><rect x="198.1" y="1427.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.1" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.foldPendingTest (1 samples, 0.10%)</title><rect x="198.1" y="1411.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="201.1" y="1422.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="198.1" y="1395.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="201.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDeferLoopExits (11 samples, 1.15%)</title><rect x="199.3" y="1555.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.3" y="1566.0"></text>
</g>
<g>
<title>java/util/BitSet.get (1 samples, 0.10%)</title><rect x="199.3" y="1539.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (9 samples, 0.94%)</title><rect x="200.5" y="1539.0" width="11.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="203.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (9 samples, 0.94%)</title><rect x="200.5" y="1523.0" width="11.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="203.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNodes (6 samples, 0.62%)</title><rect x="204.2" y="1507.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processBlock (3 samples, 0.31%)</title><rect x="204.2" y="1491.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNode (3 samples, 0.31%)</title><rect x="204.2" y="1475.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processAbstractBegin (1 samples, 0.10%)</title><rect x="204.2" y="1459.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.2" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.registerNewCondition (1 samples, 0.10%)</title><rect x="204.2" y="1443.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="207.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.registerCondition (1 samples, 0.10%)</title><rect x="204.2" y="1427.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.2" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="204.2" y="1411.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="207.2" y="1422.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_direct_or_vtable_call(Bytecodes::Code, methodHandle const&amp;, int, bool) (1 samples, 0.10%)</title><rect x="204.2" y="1395.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="207.2" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processFixedGuard (2 samples, 0.21%)</title><rect x="205.4" y="1459.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.4" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractFixedGuardNode.condition (1 samples, 0.10%)</title><rect x="205.4" y="1443.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.4" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="205.4" y="1427.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="208.4" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="205.4" y="1411.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="208.4" y="1422.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="205.4" y="1395.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="208.4" y="1406.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="205.4" y="1379.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="208.4" y="1390.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="205.4" y="1363.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="208.4" y="1374.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="205.4" y="1347.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="208.4" y="1358.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="205.4" y="1331.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="208.4" y="1342.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="205.4" y="1315.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="208.4" y="1326.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="205.4" y="1299.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="208.4" y="1310.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="205.4" y="1283.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="208.4" y="1294.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="205.4" y="1267.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="208.4" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.tryProveGuardCondition (1 samples, 0.10%)</title><rect x="206.7" y="1443.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.tryProveGuardCondition (1 samples, 0.10%)</title><rect x="206.7" y="1427.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="209.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.rewireGuards (1 samples, 0.10%)</title><rect x="206.7" y="1411.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance$$Lambda$99.0x0000000800d688b0.rewire (1 samples, 0.10%)</title><rect x="206.7" y="1395.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.lambda$processFixedGuard$2 (1 samples, 0.10%)</title><rect x="206.7" y="1379.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="209.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.unlinkFixedNode (1 samples, 0.10%)</title><rect x="206.7" y="1363.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="209.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtPredecessor (1 samples, 0.10%)</title><rect x="206.7" y="1347.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="209.7" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.updatePredecessor (1 samples, 0.10%)</title><rect x="206.7" y="1331.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.maybeNotifyInputChanged (1 samples, 0.10%)</title><rect x="206.7" y="1315.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="209.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="206.7" y="1299.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="206.7" y="1283.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="209.7" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.add (1 samples, 0.10%)</title><rect x="206.7" y="1267.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="209.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.10%)</title><rect x="206.7" y="1251.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="206.7" y="1235.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="209.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.setValue (1 samples, 0.10%)</title><rect x="206.7" y="1219.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.setRawValue (1 samples, 0.10%)</title><rect x="206.7" y="1203.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="209.7" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNode (3 samples, 0.31%)</title><rect x="207.9" y="1491.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="210.9" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.withNodeSourcePosition (1 samples, 0.10%)</title><rect x="207.9" y="1475.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.9" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.withNodeSourcePosition (1 samples, 0.10%)</title><rect x="207.9" y="1459.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.9" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.getNodeSourcePosition (1 samples, 0.10%)</title><rect x="207.9" y="1443.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.getNodeInfo (1 samples, 0.10%)</title><rect x="207.9" y="1427.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="210.9" y="1438.0"></text>
</g>
<g>
<title>Runtime1::is_instance_of(oopDesc*, oopDesc*) (1 samples, 0.10%)</title><rect x="207.9" y="1411.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="210.9" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processGuard (1 samples, 0.10%)</title><rect x="209.1" y="1475.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.1" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.tryProveGuardCondition (1 samples, 0.10%)</title><rect x="209.1" y="1459.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.1" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.tryProveGuardCondition (1 samples, 0.10%)</title><rect x="209.1" y="1443.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.1" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.rewireGuards (1 samples, 0.10%)</title><rect x="209.1" y="1427.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.1" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance$$Lambda$95.0x0000000800d5e3e8.rewire (1 samples, 0.10%)</title><rect x="209.1" y="1411.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="212.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.lambda$processGuard$1 (1 samples, 0.10%)</title><rect x="209.1" y="1395.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.1" y="1406.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x000000011001a500 (1 samples, 0.10%)</title><rect x="209.1" y="1379.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processIf (1 samples, 0.10%)</title><rect x="210.4" y="1475.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.4" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.tryProveGuardCondition (1 samples, 0.10%)</title><rect x="210.4" y="1459.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.4" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationUtil.tryProveGuardCondition (1 samples, 0.10%)</title><rect x="210.4" y="1443.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/InstanceOfNode.implies (1 samples, 0.10%)</title><rect x="210.4" y="1427.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="213.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/UnaryOpLogicNode.implies (1 samples, 0.10%)</title><rect x="210.4" y="1411.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/LogicNode.implies (1 samples, 0.10%)</title><rect x="210.4" y="1395.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.4" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.exit (1 samples, 0.10%)</title><rect x="211.6" y="1539.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="214.6" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.exit (1 samples, 0.10%)</title><rect x="211.6" y="1523.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="214.6" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pop (1 samples, 0.10%)</title><rect x="211.6" y="1507.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.6" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.removeFirst (1 samples, 0.10%)</title><rect x="211.6" y="1491.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.6" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.10%)</title><rect x="211.6" y="1475.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.6" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.createVisitor (1 samples, 0.10%)</title><rect x="212.8" y="1571.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.&lt;init&gt; (1 samples, 0.10%)</title><rect x="212.8" y="1555.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.8" y="1566.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="212.8" y="1539.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="215.8" y="1550.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="212.8" y="1523.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="215.8" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="212.8" y="1507.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="215.8" y="1518.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.10%)</title><rect x="212.8" y="1491.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="215.8" y="1502.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.10%)</title><rect x="212.8" y="1475.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="215.8" y="1486.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="212.8" y="1459.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="215.8" y="1470.0"></text>
</g>
<g>
<title>VerificationType::is_reference_assignable_from(VerificationType const&amp;, ClassVerifier*, bool, Thread*) const (1 samples, 0.10%)</title><rect x="212.8" y="1443.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="215.8" y="1454.0"></text>
</g>
<g>
<title>VerificationType::resolve_and_check_assignability(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="212.8" y="1427.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="215.8" y="1438.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.10%)</title><rect x="212.8" y="1411.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="215.8" y="1422.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.10%)</title><rect x="212.8" y="1395.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="215.8" y="1406.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.10%)</title><rect x="212.8" y="1379.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="215.8" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (3 samples, 0.31%)</title><rect x="214.0" y="1571.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.0" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (3 samples, 0.31%)</title><rect x="214.0" y="1555.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.0" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (3 samples, 0.31%)</title><rect x="214.0" y="1539.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.0" y="1550.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (1 samples, 0.10%)</title><rect x="214.0" y="1523.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="217.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.phis (1 samples, 0.10%)</title><rect x="215.3" y="1523.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="218.3" y="1534.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.10%)</title><rect x="215.3" y="1507.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="218.3" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.10%)</title><rect x="215.3" y="1491.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.10%)</title><rect x="215.3" y="1475.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="215.3" y="1459.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="218.3" y="1470.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance(JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.10%)</title><rect x="215.3" y="1443.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="218.3" y="1454.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;0ull, false&gt;(_jobject*) (1 samples, 0.10%)</title><rect x="215.3" y="1427.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="218.3" y="1438.0"></text>
</g>
<g>
<title>void Access&lt;524288ull&gt;::verify_oop_decorators&lt;1472ull&gt;() (1 samples, 0.10%)</title><rect x="215.3" y="1411.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="218.3" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processNodes (1 samples, 0.10%)</title><rect x="216.5" y="1523.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="219.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStack (1 samples, 0.10%)</title><rect x="216.5" y="1507.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="219.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processInputs (1 samples, 0.10%)</title><rect x="216.5" y="1491.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="219.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.10%)</title><rect x="216.5" y="1475.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="219.5" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.forward (1 samples, 0.10%)</title><rect x="216.5" y="1459.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.5" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.getInput (1 samples, 0.10%)</title><rect x="216.5" y="1443.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="219.5" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.10%)</title><rect x="216.5" y="1427.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (84 samples, 8.75%)</title><rect x="217.7" y="1667.0" width="103.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.7" y="1678.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (84 samples, 8.75%)</title><rect x="217.7" y="1651.0" width="103.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.7" y="1662.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.lower (84 samples, 8.75%)</title><rect x="217.7" y="1635.0" width="103.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.7" y="1646.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (83 samples, 8.65%)</title><rect x="217.7" y="1619.0" width="102.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="220.7" y="1630.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (83 samples, 8.65%)</title><rect x="217.7" y="1603.0" width="102.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.7" y="1614.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.areScopesEnabled (1 samples, 0.10%)</title><rect x="217.7" y="1587.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.7" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (82 samples, 8.54%)</title><rect x="219.0" y="1587.0" width="100.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="222.0" y="1598.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (82 samples, 8.54%)</title><rect x="219.0" y="1571.0" width="100.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.0" y="1582.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (67 samples, 6.98%)</title><rect x="219.0" y="1555.0" width="82.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.0" y="1566.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (67 samples, 6.98%)</title><rect x="219.0" y="1539.0" width="82.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.0" y="1550.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (67 samples, 6.98%)</title><rect x="219.0" y="1523.0" width="82.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.0" y="1534.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (67 samples, 6.98%)</title><rect x="219.0" y="1507.0" width="82.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.0" y="1518.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.run (67 samples, 6.98%)</title><rect x="219.0" y="1491.0" width="82.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="222.0" y="1502.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (9 samples, 0.94%)</title><rect x="219.0" y="1475.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.0" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (9 samples, 0.94%)</title><rect x="219.0" y="1459.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext$1.close (2 samples, 0.21%)</title><rect x="219.0" y="1443.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.0" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/CompilationListenerProfiler$1.close (2 samples, 0.21%)</title><rect x="219.0" y="1427.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="222.0" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/JFRCompilerProfiler.notifyCompilerPhaseEvent (1 samples, 0.10%)</title><rect x="220.2" y="1411.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="223.2" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/JFR$CompilerPhaseEvent.write (1 samples, 0.10%)</title><rect x="220.2" y="1395.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="223.2" y="1406.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/JFR$CompilerPhaseEvent.getPhaseToId (1 samples, 0.10%)</title><rect x="220.2" y="1379.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.10%)</title><rect x="220.2" y="1363.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.2" y="1374.0"></text>
</g>
<g>
<title>_invokeBasic (1 samples, 0.10%)</title><rect x="220.2" y="1347.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="223.2" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (7 samples, 0.73%)</title><rect x="221.4" y="1443.0" width="8.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="224.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (7 samples, 0.73%)</title><rect x="221.4" y="1427.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="224.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (7 samples, 0.73%)</title><rect x="221.4" y="1411.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="224.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.10%)</title><rect x="221.4" y="1395.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="224.4" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.computeDominators (1 samples, 0.10%)</title><rect x="221.4" y="1379.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.4" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/cfg/AbstractBlockBase.getId (1 samples, 0.10%)</title><rect x="221.4" y="1363.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.4" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlocks (2 samples, 0.21%)</title><rect x="222.6" y="1395.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="225.6" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.canKill (1 samples, 0.10%)</title><rect x="222.6" y="1379.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.6" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.getKillLocations (1 samples, 0.10%)</title><rect x="222.6" y="1363.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.6" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.calcKillLocations (1 samples, 0.10%)</title><rect x="222.6" y="1347.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.6" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.fillKillSet (1 samples, 0.10%)</title><rect x="223.9" y="1379.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.9" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.iterator (1 samples, 0.10%)</title><rect x="223.9" y="1363.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.9" y="1374.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.10%)</title><rect x="223.9" y="1347.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="226.9" y="1358.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList.listIterator (1 samples, 0.10%)</title><rect x="223.9" y="1331.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.9" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList$SubList$1.&lt;init&gt; (1 samples, 0.10%)</title><rect x="223.9" y="1315.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (1 samples, 0.10%)</title><rect x="225.1" y="1395.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processNodes (1 samples, 0.10%)</title><rect x="225.1" y="1379.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStack (1 samples, 0.10%)</title><rect x="225.1" y="1363.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.1" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStackPhi (1 samples, 0.10%)</title><rect x="225.1" y="1347.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="228.1" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/PhiNode.valueAt (1 samples, 0.10%)</title><rect x="225.1" y="1331.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="228.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeList.get (1 samples, 0.10%)</title><rect x="225.1" y="1315.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="228.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortNodesLatestWithinBlock (3 samples, 0.31%)</title><rect x="226.3" y="1395.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.3" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.sortNodesLatestWithinBlock (3 samples, 0.31%)</title><rect x="226.3" y="1379.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.3" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.checkWatchList (1 samples, 0.10%)</title><rect x="228.8" y="1363.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="231.8" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.processBlock (58 samples, 6.04%)</title><rect x="230.0" y="1475.0" width="71.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="233.0" y="1486.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round$ProcessFrame.preprocess (58 samples, 6.04%)</title><rect x="230.0" y="1459.0" width="71.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="233.0" y="1470.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.process (58 samples, 6.04%)</title><rect x="230.0" y="1443.0" width="71.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="233.0" y="1454.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/gc/WriteBarrier.lower (10 samples, 1.04%)</title><rect x="232.5" y="1427.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (10 samples, 1.04%)</title><rect x="232.5" y="1411.0" width="12.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.5" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (10 samples, 1.04%)</title><rect x="232.5" y="1395.0" width="12.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.5" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/HotSpotG1WriteBarrierSnippets$Templates.lower (10 samples, 1.04%)</title><rect x="232.5" y="1379.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.5" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/gc/G1WriteBarrierSnippets$G1WriteBarrierLowerer.lower (10 samples, 1.04%)</title><rect x="232.5" y="1363.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.5" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (1 samples, 0.10%)</title><rect x="232.5" y="1347.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.5" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (1 samples, 0.10%)</title><rect x="232.5" y="1331.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.5" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (1 samples, 0.10%)</title><rect x="232.5" y="1315.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.5" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.10%)</title><rect x="232.5" y="1299.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.5" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.10%)</title><rect x="232.5" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.5" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.10%)</title><rect x="232.5" y="1267.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.5" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.10%)</title><rect x="232.5" y="1251.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.5" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="232.5" y="1235.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="235.5" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="232.5" y="1219.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="235.5" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="232.5" y="1203.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="232.5" y="1187.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.5" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (1 samples, 0.10%)</title><rect x="232.5" y="1171.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.5" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (1 samples, 0.10%)</title><rect x="232.5" y="1155.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.5" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (1 samples, 0.10%)</title><rect x="232.5" y="1139.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="235.5" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (1 samples, 0.10%)</title><rect x="232.5" y="1123.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.5" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.performReplacement (1 samples, 0.10%)</title><rect x="232.5" y="1107.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="235.5" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.10%)</title><rect x="232.5" y="1091.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.10%)</title><rect x="232.5" y="1075.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$Arguments.&lt;init&gt; (1 samples, 0.10%)</title><rect x="233.7" y="1347.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.7" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$CacheKey.&lt;init&gt; (1 samples, 0.10%)</title><rect x="233.7" y="1331.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$SnippetInfo.getParameterCount (1 samples, 0.10%)</title><rect x="233.7" y="1315.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="236.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$LazySnippetInfo.info (1 samples, 0.10%)</title><rect x="233.7" y="1299.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/SnippetParameterInfo.&lt;init&gt; (1 samples, 0.10%)</title><rect x="233.7" y="1283.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.7" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaMethod.getParameterAnnotation (1 samples, 0.10%)</title><rect x="233.7" y="1267.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.7" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getParameterAnnotations (1 samples, 0.10%)</title><rect x="233.7" y="1251.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.7" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJDKReflection.getParameterAnnotations (1 samples, 0.10%)</title><rect x="233.7" y="1235.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getParameterAnnotations (1 samples, 0.10%)</title><rect x="233.7" y="1219.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.sharedGetParameterAnnotations (1 samples, 0.10%)</title><rect x="233.7" y="1203.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="236.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.parseParameterAnnotations (1 samples, 0.10%)</title><rect x="233.7" y="1187.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.7" y="1198.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseParameterAnnotations (1 samples, 0.10%)</title><rect x="233.7" y="1171.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.7" y="1182.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseParameterAnnotations2 (1 samples, 0.10%)</title><rect x="233.7" y="1155.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.7" y="1166.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation (1 samples, 0.10%)</title><rect x="233.7" y="1139.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.7" y="1150.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.10%)</title><rect x="233.7" y="1123.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.7" y="1134.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSig (1 samples, 0.10%)</title><rect x="233.7" y="1107.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="236.7" y="1118.0"></text>
</g>
<g>
<title>sun/reflect/generics/tree/ClassTypeSignature.accept (1 samples, 0.10%)</title><rect x="233.7" y="1091.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="236.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (8 samples, 0.83%)</title><rect x="234.9" y="1347.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (8 samples, 0.83%)</title><rect x="234.9" y="1331.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (6 samples, 0.62%)</title><rect x="234.9" y="1315.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (6 samples, 0.62%)</title><rect x="234.9" y="1299.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (6 samples, 0.62%)</title><rect x="234.9" y="1283.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (6 samples, 0.62%)</title><rect x="234.9" y="1267.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (6 samples, 0.62%)</title><rect x="234.9" y="1251.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="237.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (6 samples, 0.62%)</title><rect x="234.9" y="1235.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="237.9" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/FieldIntrospection.getData (1 samples, 0.10%)</title><rect x="236.2" y="1219.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="239.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.putNodeIntoCache (1 samples, 0.10%)</title><rect x="237.4" y="1219.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="240.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="237.4" y="1203.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.10%)</title><rect x="237.4" y="1187.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.10%)</title><rect x="237.4" y="1171.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$1.hashCode (1 samples, 0.10%)</title><rect x="237.4" y="1155.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="240.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.valueNumber (1 samples, 0.10%)</title><rect x="237.4" y="1139.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.deepHashCode0 (1 samples, 0.10%)</title><rect x="237.4" y="1123.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="240.4" y="1134.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/PrimitiveConstant.hashCode (1 samples, 0.10%)</title><rect x="237.4" y="1107.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="240.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (2 samples, 0.21%)</title><rect x="238.6" y="1219.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="241.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="239.9" y="1203.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.9" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="239.9" y="1187.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="242.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.add (1 samples, 0.10%)</title><rect x="239.9" y="1171.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="242.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.10%)</title><rect x="239.9" y="1155.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="239.9" y="1139.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.10%)</title><rect x="239.9" y="1123.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="242.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl$CollisionLink.&lt;init&gt; (1 samples, 0.10%)</title><rect x="239.9" y="1107.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.9" y="1118.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="241.1" y="1219.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="241.1" y="1203.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="244.1" y="1214.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance(JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.10%)</title><rect x="241.1" y="1187.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="244.1" y="1198.0"></text>
</g>
<g>
<title>JavaThread::jni_environment_offset() (1 samples, 0.10%)</title><rect x="241.1" y="1171.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="244.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.rewireFrameStates (2 samples, 0.21%)</title><rect x="242.3" y="1315.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="245.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/Lowerable.lower (42 samples, 4.38%)</title><rect x="244.8" y="1427.0" width="51.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="247.8" y="1438.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (42 samples, 4.38%)</title><rect x="244.8" y="1411.0" width="51.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.8" y="1422.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (42 samples, 4.38%)</title><rect x="244.8" y="1395.0" width="51.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="247.8" y="1406.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/HashCodeSnippets$Templates.lower (2 samples, 0.21%)</title><rect x="244.8" y="1379.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.8" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (2 samples, 0.21%)</title><rect x="244.8" y="1363.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.8" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (2 samples, 0.21%)</title><rect x="244.8" y="1347.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.8" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (1 samples, 0.10%)</title><rect x="246.0" y="1331.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.10%)</title><rect x="246.0" y="1315.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.0" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.10%)</title><rect x="246.0" y="1299.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.0" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.10%)</title><rect x="246.0" y="1283.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.0" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.10%)</title><rect x="246.0" y="1267.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="249.0" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="246.0" y="1251.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="246.0" y="1235.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.0" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="246.0" y="1219.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.0" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="246.0" y="1203.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.10%)</title><rect x="246.0" y="1187.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.10%)</title><rect x="246.0" y="1171.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="246.0" y="1155.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.0" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="246.0" y="1139.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.0" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="246.0" y="1123.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.0" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="246.0" y="1107.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.0" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="246.0" y="1091.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.0" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="246.0" y="1075.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.0" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="246.0" y="1059.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="249.0" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.10%)</title><rect x="246.0" y="1043.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.0" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.10%)</title><rect x="246.0" y="1027.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.0" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.10%)</title><rect x="246.0" y="1011.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.0" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="246.0" y="995.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="246.0" y="979.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="246.0" y="963.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.0" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="246.0" y="947.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.10%)</title><rect x="246.0" y="931.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.10%)</title><rect x="246.0" y="915.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleLoadStaticField (1 samples, 0.10%)</title><rect x="246.0" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.0" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryReadField (1 samples, 0.10%)</title><rect x="246.0" y="883.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.0" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryConstantFold (1 samples, 0.10%)</title><rect x="246.0" y="867.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.0" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil.tryConstantFold (1 samples, 0.10%)</title><rect x="246.0" y="851.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/spi/JavaConstantFieldProvider.readConstantField (1 samples, 0.10%)</title><rect x="246.0" y="835.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.0" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil$1.foldConstant (1 samples, 0.10%)</title><rect x="246.0" y="819.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.0" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil$1.foldConstant (1 samples, 0.10%)</title><rect x="246.0" y="803.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.0" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="246.0" y="787.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="246.0" y="771.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forConstant (1 samples, 0.10%)</title><rect x="246.0" y="755.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.0" y="766.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.lookupJavaType (1 samples, 0.10%)</title><rect x="246.0" y="739.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.0" y="750.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.lookupJavaType (1 samples, 0.10%)</title><rect x="246.0" y="723.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.0" y="734.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.getType (1 samples, 0.10%)</title><rect x="246.0" y="707.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.0" y="718.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="246.0" y="691.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="249.0" y="702.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="246.0" y="675.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="249.0" y="686.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="246.0" y="659.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="249.0" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="246.0" y="643.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="249.0" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/HotSpotAllocationSnippets$Templates.lower (22 samples, 2.29%)</title><rect x="247.2" y="1379.0" width="27.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="250.2" y="1390.0">o..</text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="247.2" y="1363.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="250.2" y="1374.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="247.2" y="1347.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="250.2" y="1358.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="247.2" y="1331.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="250.2" y="1342.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.10%)</title><rect x="247.2" y="1315.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="250.2" y="1326.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="247.2" y="1299.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="250.2" y="1310.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="247.2" y="1283.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="250.2" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="247.2" y="1267.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="250.2" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.10%)</title><rect x="247.2" y="1251.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="250.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (19 samples, 1.98%)</title><rect x="248.5" y="1363.0" width="23.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.5" y="1374.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (19 samples, 1.98%)</title><rect x="248.5" y="1347.0" width="23.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="251.5" y="1358.0">o..</text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.10%)</title><rect x="248.5" y="1331.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="251.5" y="1342.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.10%)</title><rect x="248.5" y="1315.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="251.5" y="1326.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper_internal(Handle, CompiledMethod*, frame const&amp;, methodHandle, Bytecodes::Code, CallInfo&amp;, bool&amp;, Thread*) (1 samples, 0.10%)</title><rect x="248.5" y="1299.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="251.5" y="1310.0"></text>
</g>
<g>
<title>CompiledIC::set_to_megamorphic(CallInfo*, Bytecodes::Code, bool&amp;, Thread*) (1 samples, 0.10%)</title><rect x="248.5" y="1283.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="251.5" y="1294.0"></text>
</g>
<g>
<title>InlineCacheBuffer::create_transition_stub(CompiledIC*, void*, unsigned char*) (1 samples, 0.10%)</title><rect x="248.5" y="1267.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="251.5" y="1278.0"></text>
</g>
<g>
<title>InlineCacheBuffer::assemble_ic_buffer_code(unsigned char*, void*, unsigned char*) (1 samples, 0.10%)</title><rect x="248.5" y="1251.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="251.5" y="1262.0"></text>
</g>
<g>
<title>MacroAssembler::jump(AddressLiteral) (1 samples, 0.10%)</title><rect x="248.5" y="1235.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="251.5" y="1246.0"></text>
</g>
<g>
<title>Assembler::jmp_literal(unsigned char*, RelocationHolder const&amp;) (1 samples, 0.10%)</title><rect x="248.5" y="1219.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="251.5" y="1230.0"></text>
</g>
<g>
<title>CodeSection::relocate(unsigned char*, RelocationHolder const&amp;, int) (1 samples, 0.10%)</title><rect x="248.5" y="1203.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="251.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.add (1 samples, 0.10%)</title><rect x="249.7" y="1331.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="249.7" y="1315.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="249.7" y="1299.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="249.7" y="1283.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.7" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.afterRegister (1 samples, 0.10%)</title><rect x="249.7" y="1267.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.7" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="250.9" y="1331.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="250.9" y="1315.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="253.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.10%)</title><rect x="250.9" y="1299.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (1 samples, 0.10%)</title><rect x="250.9" y="1283.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (1 samples, 0.10%)</title><rect x="250.9" y="1267.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="253.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.copyOrClearEdgesForClone (1 samples, 0.10%)</title><rect x="250.9" y="1251.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="253.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.copy (1 samples, 0.10%)</title><rect x="250.9" y="1235.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.9" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (13 samples, 1.35%)</title><rect x="252.1" y="1331.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (13 samples, 1.35%)</title><rect x="252.1" y="1315.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (13 samples, 1.35%)</title><rect x="252.1" y="1299.0" width="16.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="255.1" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (13 samples, 1.35%)</title><rect x="252.1" y="1283.0" width="16.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="255.1" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (13 samples, 1.35%)</title><rect x="252.1" y="1267.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="255.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="252.1" y="1251.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="255.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="252.1" y="1235.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="255.1" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="252.1" y="1219.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.1" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="252.1" y="1203.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.1" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (1 samples, 0.10%)</title><rect x="252.1" y="1187.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (1 samples, 0.10%)</title><rect x="252.1" y="1171.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList$1.hasNext (1 samples, 0.10%)</title><rect x="252.1" y="1155.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.1" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$QueueConsumingIterator.dropDeleted (1 samples, 0.10%)</title><rect x="252.1" y="1139.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (12 samples, 1.25%)</title><rect x="253.4" y="1251.0" width="14.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.4" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (12 samples, 1.25%)</title><rect x="253.4" y="1235.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.4" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (12 samples, 1.25%)</title><rect x="253.4" y="1219.0" width="14.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (12 samples, 1.25%)</title><rect x="253.4" y="1203.0" width="14.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (12 samples, 1.25%)</title><rect x="253.4" y="1187.0" width="14.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (12 samples, 1.25%)</title><rect x="253.4" y="1171.0" width="14.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (12 samples, 1.25%)</title><rect x="253.4" y="1155.0" width="14.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (12 samples, 1.25%)</title><rect x="253.4" y="1139.0" width="14.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (12 samples, 1.25%)</title><rect x="253.4" y="1123.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.4" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (12 samples, 1.25%)</title><rect x="253.4" y="1107.0" width="14.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="253.4" y="1091.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="253.4" y="1075.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="253.4" y="1059.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.4" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.10%)</title><rect x="253.4" y="1043.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.4" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.10%)</title><rect x="253.4" y="1027.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.4" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.10%)</title><rect x="253.4" y="1011.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="256.4" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="253.4" y="995.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.4" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="253.4" y="979.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.4" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="253.4" y="963.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.4" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="253.4" y="947.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.4" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.10%)</title><rect x="253.4" y="931.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.4" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.10%)</title><rect x="253.4" y="915.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.4" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.10%)</title><rect x="253.4" y="899.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.4" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="253.4" y="883.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.4" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.10%)</title><rect x="253.4" y="867.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.4" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/MethodSubstitutionPlugin.execute (1 samples, 0.10%)</title><rect x="253.4" y="851.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.4" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.intrinsify (1 samples, 0.10%)</title><rect x="253.4" y="835.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.4" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.10%)</title><rect x="253.4" y="819.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.4" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.10%)</title><rect x="253.4" y="803.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.4" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="253.4" y="787.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="256.4" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="253.4" y="771.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="256.4" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="253.4" y="755.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.4" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="253.4" y="739.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.4" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="253.4" y="723.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.4" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="253.4" y="707.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.4" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="253.4" y="691.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.4" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.10%)</title><rect x="253.4" y="675.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.4" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/Plugin_HotSpotReplacementsUtil_klassModifierFlagsOffset.execute (1 samples, 0.10%)</title><rect x="253.4" y="659.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.4" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="253.4" y="643.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.4" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.unique (1 samples, 0.10%)</title><rect x="253.4" y="627.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="256.4" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.10%)</title><rect x="253.4" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.4" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="253.4" y="595.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.4" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.10%)</title><rect x="253.4" y="579.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.4" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findNodeInCache (1 samples, 0.10%)</title><rect x="253.4" y="563.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.10%)</title><rect x="253.4" y="547.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.10%)</title><rect x="253.4" y="531.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.10%)</title><rect x="253.4" y="515.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.compareKeys (1 samples, 0.10%)</title><rect x="253.4" y="499.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="256.4" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$1.equals (1 samples, 0.10%)</title><rect x="253.4" y="483.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="256.4" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.valueEquals (1 samples, 0.10%)</title><rect x="253.4" y="467.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.4" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.dataEquals (1 samples, 0.10%)</title><rect x="253.4" y="451.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.4" y="462.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.deepEquals0 (1 samples, 0.10%)</title><rect x="253.4" y="435.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.4" y="446.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.equals (1 samples, 0.10%)</title><rect x="253.4" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.4" y="430.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/PrimitiveStamp.equals (1 samples, 0.10%)</title><rect x="253.4" y="403.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="256.4" y="414.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/ArithmeticStamp.equals (1 samples, 0.10%)</title><rect x="253.4" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="256.4" y="398.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (11 samples, 1.15%)</title><rect x="254.6" y="1091.0" width="13.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (11 samples, 1.15%)</title><rect x="254.6" y="1075.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (11 samples, 1.15%)</title><rect x="254.6" y="1059.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.6" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (11 samples, 1.15%)</title><rect x="254.6" y="1043.0" width="13.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.6" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (11 samples, 1.15%)</title><rect x="254.6" y="1027.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.6" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (11 samples, 1.15%)</title><rect x="254.6" y="1011.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.6" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (11 samples, 1.15%)</title><rect x="254.6" y="995.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.6" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (11 samples, 1.15%)</title><rect x="254.6" y="979.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.6" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (11 samples, 1.15%)</title><rect x="254.6" y="963.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.6" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (11 samples, 1.15%)</title><rect x="254.6" y="947.0" width="13.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="257.6" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (11 samples, 1.15%)</title><rect x="254.6" y="931.0" width="13.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.6" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (10 samples, 1.04%)</title><rect x="254.6" y="915.0" width="12.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.6" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (10 samples, 1.04%)</title><rect x="254.6" y="899.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.6" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (10 samples, 1.04%)</title><rect x="254.6" y="883.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.6" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (10 samples, 1.04%)</title><rect x="254.6" y="867.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.6" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (10 samples, 1.04%)</title><rect x="254.6" y="851.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.6" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (10 samples, 1.04%)</title><rect x="254.6" y="835.0" width="12.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.6" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (10 samples, 1.04%)</title><rect x="254.6" y="819.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="257.6" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (10 samples, 1.04%)</title><rect x="254.6" y="803.0" width="12.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.6" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (10 samples, 1.04%)</title><rect x="254.6" y="787.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.6" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (10 samples, 1.04%)</title><rect x="254.6" y="771.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.6" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendGoto (1 samples, 0.10%)</title><rect x="254.6" y="755.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.6" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createTarget (1 samples, 0.10%)</title><rect x="254.6" y="739.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="257.6" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (9 samples, 0.94%)</title><rect x="255.8" y="755.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.8" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (3 samples, 0.31%)</title><rect x="255.8" y="739.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.8" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (3 samples, 0.31%)</title><rect x="255.8" y="723.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.10%)</title><rect x="255.8" y="707.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.8" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.newInvokeSpecial (1 samples, 0.10%)</title><rect x="255.8" y="691.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.8" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.allocateInstance (1 samples, 0.10%)</title><rect x="255.8" y="675.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="255.8" y="659.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="258.8" y="670.0"></text>
</g>
<g>
<title>os::verify_stack_alignment() (1 samples, 0.10%)</title><rect x="255.8" y="643.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="258.8" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (2 samples, 0.21%)</title><rect x="257.1" y="707.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.1" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (2 samples, 0.21%)</title><rect x="257.1" y="691.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.1" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (2 samples, 0.21%)</title><rect x="257.1" y="675.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="260.1" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (2 samples, 0.21%)</title><rect x="257.1" y="659.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.1" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (2 samples, 0.21%)</title><rect x="257.1" y="643.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.1" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="257.1" y="627.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.1" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="257.1" y="611.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.1" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="257.1" y="595.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.1" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.10%)</title><rect x="257.1" y="579.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.1" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.10%)</title><rect x="257.1" y="563.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.1" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleLoadStaticField (1 samples, 0.10%)</title><rect x="257.1" y="547.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.1" y="558.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryReadField (1 samples, 0.10%)</title><rect x="257.1" y="531.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.1" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryConstantFold (1 samples, 0.10%)</title><rect x="257.1" y="515.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.1" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil.tryConstantFold (1 samples, 0.10%)</title><rect x="257.1" y="499.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.1" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/spi/JavaConstantFieldProvider.readConstantField (1 samples, 0.10%)</title><rect x="257.1" y="483.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.1" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil$1.foldConstant (1 samples, 0.10%)</title><rect x="257.1" y="467.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.1" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil$1.foldConstant (1 samples, 0.10%)</title><rect x="257.1" y="451.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="260.1" y="462.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="257.1" y="435.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.1" y="446.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="257.1" y="419.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="260.1" y="430.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forConstant (1 samples, 0.10%)</title><rect x="257.1" y="403.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.1" y="414.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.lookupJavaType (1 samples, 0.10%)</title><rect x="257.1" y="387.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.1" y="398.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.lookupJavaType (1 samples, 0.10%)</title><rect x="257.1" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="260.1" y="382.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.getType (1 samples, 0.10%)</title><rect x="257.1" y="355.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.1" y="366.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJDKReflection.getType (1 samples, 0.10%)</title><rect x="257.1" y="339.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.1" y="350.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.fromClass (1 samples, 0.10%)</title><rect x="257.1" y="323.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.1" y="334.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.fromClass0 (1 samples, 0.10%)</title><rect x="257.1" y="307.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.1" y="318.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.compute (1 samples, 0.10%)</title><rect x="258.3" y="627.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.3" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/SmallLocalLiveness.&lt;init&gt; (1 samples, 0.10%)</title><rect x="258.3" y="611.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="261.3" y="622.0"></text>
</g>
<g>
<title>InterpreterRuntime::newarray(JavaThread*, BasicType, int) (1 samples, 0.10%)</title><rect x="258.3" y="595.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="261.3" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.10%)</title><rect x="258.3" y="579.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="261.3" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.10%)</title><rect x="258.3" y="563.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="261.3" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.10%)</title><rect x="258.3" y="547.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="261.3" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWordImpl**) const (1 samples, 0.10%)</title><rect x="258.3" y="531.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="261.3" y="542.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.10%)</title><rect x="258.3" y="515.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="261.3" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (6 samples, 0.62%)</title><rect x="259.5" y="739.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.5" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (6 samples, 0.62%)</title><rect x="259.5" y="723.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.5" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (6 samples, 0.62%)</title><rect x="259.5" y="707.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.5" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (6 samples, 0.62%)</title><rect x="259.5" y="691.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="262.5" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (6 samples, 0.62%)</title><rect x="259.5" y="675.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.5" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (6 samples, 0.62%)</title><rect x="259.5" y="659.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="262.5" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (6 samples, 0.62%)</title><rect x="259.5" y="643.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.5" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (6 samples, 0.62%)</title><rect x="259.5" y="627.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.5" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (6 samples, 0.62%)</title><rect x="259.5" y="611.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.5" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (6 samples, 0.62%)</title><rect x="259.5" y="595.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.5" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (6 samples, 0.62%)</title><rect x="259.5" y="579.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.5" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (6 samples, 0.62%)</title><rect x="259.5" y="563.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.5" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (6 samples, 0.62%)</title><rect x="259.5" y="547.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="262.5" y="558.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (6 samples, 0.62%)</title><rect x="259.5" y="531.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.5" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (6 samples, 0.62%)</title><rect x="259.5" y="515.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.5" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (6 samples, 0.62%)</title><rect x="259.5" y="499.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.5" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (6 samples, 0.62%)</title><rect x="259.5" y="483.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.5" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (6 samples, 0.62%)</title><rect x="259.5" y="467.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.5" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (6 samples, 0.62%)</title><rect x="259.5" y="451.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.5" y="462.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (6 samples, 0.62%)</title><rect x="259.5" y="435.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.5" y="446.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (6 samples, 0.62%)</title><rect x="259.5" y="419.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="262.5" y="430.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (6 samples, 0.62%)</title><rect x="259.5" y="403.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.5" y="414.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeInterface (4 samples, 0.42%)</title><rect x="259.5" y="387.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.5" y="398.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeInterface (2 samples, 0.21%)</title><rect x="259.5" y="371.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.5" y="382.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (2 samples, 0.21%)</title><rect x="259.5" y="355.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="262.5" y="366.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryNodePluginForInvocation (2 samples, 0.21%)</title><rect x="259.5" y="339.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.5" y="350.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleInvoke (2 samples, 0.21%)</title><rect x="259.5" y="323.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="262.5" y="334.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotWordOperationPlugin.handleInvoke (2 samples, 0.21%)</title><rect x="259.5" y="307.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.5" y="318.0"></text>
</g>
<g>
<title>org/graalvm/compiler/word/WordOperationPlugin.processWordOperation (2 samples, 0.21%)</title><rect x="259.5" y="291.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.5" y="302.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BridgeMethodUtils.getAnnotation (1 samples, 0.10%)</title><rect x="259.5" y="275.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.5" y="286.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getAnnotation (1 samples, 0.10%)</title><rect x="259.5" y="259.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="262.5" y="270.0"></text>
</g>
<g>
<title>org/graalvm/compiler/word/WordOperationPlugin.comparisonOp (1 samples, 0.10%)</title><rect x="260.7" y="275.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="263.7" y="286.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupReferencedTypeInPool (2 samples, 0.21%)</title><rect x="262.0" y="371.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.0" y="382.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices.lookupReferencedType (2 samples, 0.21%)</title><rect x="262.0" y="355.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="265.0" y="366.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (2 samples, 0.21%)</title><rect x="262.0" y="339.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="265.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.10%)</title><rect x="263.2" y="323.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="266.2" y="334.0"></text>
</g>
<g>
<title>Java_jdk_internal_reflect_Reflection_getCallerClass (1 samples, 0.10%)</title><rect x="263.2" y="307.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="266.2" y="318.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (2 samples, 0.21%)</title><rect x="264.4" y="387.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="267.4" y="398.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (2 samples, 0.21%)</title><rect x="264.4" y="371.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.4" y="382.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (2 samples, 0.21%)</title><rect x="264.4" y="355.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.4" y="366.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (2 samples, 0.21%)</title><rect x="264.4" y="339.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.4" y="350.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (2 samples, 0.21%)</title><rect x="264.4" y="323.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.4" y="334.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.10%)</title><rect x="264.4" y="307.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.4" y="318.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.10%)</title><rect x="264.4" y="291.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.4" y="302.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="264.4" y="275.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="267.4" y="286.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="264.4" y="259.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="267.4" y="270.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="264.4" y="243.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.4" y="254.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="264.4" y="227.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="267.4" y="238.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.10%)</title><rect x="264.4" y="211.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.4" y="222.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.10%)</title><rect x="264.4" y="195.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="267.4" y="206.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleLoadStaticField (1 samples, 0.10%)</title><rect x="264.4" y="179.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.4" y="190.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryReadField (1 samples, 0.10%)</title><rect x="264.4" y="163.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.4" y="174.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryConstantFold (1 samples, 0.10%)</title><rect x="264.4" y="147.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.4" y="158.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil.tryConstantFold (1 samples, 0.10%)</title><rect x="264.4" y="131.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.4" y="142.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/spi/JavaConstantFieldProvider.readConstantField (1 samples, 0.10%)</title><rect x="264.4" y="115.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.4" y="126.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil$1.foldConstant (1 samples, 0.10%)</title><rect x="264.4" y="99.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.4" y="110.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil$1.foldConstant (1 samples, 0.10%)</title><rect x="264.4" y="83.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.4" y="94.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="264.4" y="67.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.4" y="78.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="264.4" y="51.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="267.4" y="62.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="264.4" y="35.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.4" y="46.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.shouldInlineInvoke (1 samples, 0.10%)</title><rect x="265.7" y="307.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="268.7" y="318.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getMethodSubstitution (1 samples, 0.10%)</title><rect x="265.7" y="291.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.7" y="302.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.lookupInvocation (1 samples, 0.10%)</title><rect x="265.7" y="275.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.7" y="286.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.get (1 samples, 0.10%)</title><rect x="265.7" y="259.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.7" y="270.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genLoadConstant (1 samples, 0.10%)</title><rect x="266.9" y="915.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.9" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendConstant (1 samples, 0.10%)</title><rect x="266.9" y="899.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.9" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="266.9" y="883.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="269.9" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forConstant (1 samples, 0.10%)</title><rect x="266.9" y="867.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.9" y="878.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.lookupJavaType (1 samples, 0.10%)</title><rect x="266.9" y="851.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.9" y="862.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.lookupJavaType (1 samples, 0.10%)</title><rect x="266.9" y="835.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.9" y="846.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.getType (1 samples, 0.10%)</title><rect x="266.9" y="819.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.9" y="830.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJDKReflection.getType (1 samples, 0.10%)</title><rect x="266.9" y="803.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Object.getClass (1 samples, 0.10%)</title><rect x="266.9" y="787.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="269.9" y="798.0"></text>
</g>
<g>
<title>jni_GetObjectClass (1 samples, 0.10%)</title><rect x="266.9" y="771.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="269.9" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.explodeLoops (3 samples, 0.31%)</title><rect x="268.1" y="1331.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.fullUnroll (3 samples, 0.31%)</title><rect x="268.1" y="1315.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.peel (2 samples, 0.21%)</title><rect x="268.1" y="1299.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.1" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.insertBefore (2 samples, 0.21%)</title><rect x="268.1" y="1283.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.1" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.mergeEarlyExits (2 samples, 0.21%)</title><rect x="268.1" y="1267.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.add (2 samples, 0.21%)</title><rect x="268.1" y="1251.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (2 samples, 0.21%)</title><rect x="268.1" y="1235.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.1" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (2 samples, 0.21%)</title><rect x="268.1" y="1219.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.1" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (2 samples, 0.21%)</title><rect x="268.1" y="1203.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.1" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (2 samples, 0.21%)</title><rect x="268.1" y="1187.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$ChainedNodeEventListener.changed (2 samples, 0.21%)</title><rect x="268.1" y="1171.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (2 samples, 0.21%)</title><rect x="268.1" y="1155.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.1" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (2 samples, 0.21%)</title><rect x="268.1" y="1139.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.add (2 samples, 0.21%)</title><rect x="268.1" y="1123.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (2 samples, 0.21%)</title><rect x="268.1" y="1107.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (2 samples, 0.21%)</title><rect x="268.1" y="1091.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.10%)</title><rect x="268.1" y="1075.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.10%)</title><rect x="268.1" y="1059.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.10%)</title><rect x="268.1" y="1043.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="271.1" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.hashCode (1 samples, 0.10%)</title><rect x="268.1" y="1027.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.grow (1 samples, 0.10%)</title><rect x="269.4" y="1075.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.simplify (1 samples, 0.10%)</title><rect x="270.6" y="1299.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.6" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil$DefaultSimplifierTool.deleteBranch (1 samples, 0.10%)</title><rect x="270.6" y="1283.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.6" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killCFG (1 samples, 0.10%)</title><rect x="270.6" y="1267.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.6" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killCFGInner (1 samples, 0.10%)</title><rect x="270.6" y="1251.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.6" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.fixSurvivingAffectedMerges (1 samples, 0.10%)</title><rect x="270.6" y="1235.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.removeEnd (1 samples, 0.10%)</title><rect x="270.6" y="1219.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.phis (1 samples, 0.10%)</title><rect x="270.6" y="1203.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/FilteredNodeIterable.filter (1 samples, 0.10%)</title><rect x="270.6" y="1187.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/FilteredNodeIterable.and (1 samples, 0.10%)</title><rect x="270.6" y="1171.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (2 samples, 0.21%)</title><rect x="271.8" y="1363.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="274.8" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (2 samples, 0.21%)</title><rect x="271.8" y="1347.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.8" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (2 samples, 0.21%)</title><rect x="271.8" y="1331.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.8" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="271.8" y="1315.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.8" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="271.8" y="1299.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.8" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.10%)</title><rect x="271.8" y="1283.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="274.8" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (1 samples, 0.10%)</title><rect x="271.8" y="1267.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.8" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (1 samples, 0.10%)</title><rect x="271.8" y="1251.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.8" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findNodeInCache (1 samples, 0.10%)</title><rect x="271.8" y="1235.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.10%)</title><rect x="271.8" y="1219.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="274.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.10%)</title><rect x="271.8" y="1203.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="274.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.10%)</title><rect x="271.8" y="1187.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="274.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.compareKeys (1 samples, 0.10%)</title><rect x="271.8" y="1171.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="274.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$1.equals (1 samples, 0.10%)</title><rect x="271.8" y="1155.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="274.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.valueEquals (1 samples, 0.10%)</title><rect x="271.8" y="1139.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="274.8" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.dataEquals (1 samples, 0.10%)</title><rect x="271.8" y="1123.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/Fields.getInt (1 samples, 0.10%)</title><rect x="271.8" y="1107.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.8" y="1118.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (1 samples, 0.10%)</title><rect x="271.8" y="1091.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.10%)</title><rect x="271.8" y="1075.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="274.8" y="1086.0"></text>
</g>
<g>
<title>Unsafe_GetInt(JNIEnv_*, _jobject*, _jobject*, long) (1 samples, 0.10%)</title><rect x="271.8" y="1059.0" width="1.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="274.8" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.10%)</title><rect x="271.8" y="1043.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="274.8" y="1054.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.10%)</title><rect x="271.8" y="1027.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="274.8" y="1038.0"></text>
</g>
<g>
<title>void volatile* Atomic::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.10%)</title><rect x="271.8" y="1011.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="274.8" y="1022.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, Atomic::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.10%)</title><rect x="271.8" y="995.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="274.8" y="1006.0"></text>
</g>
<g>
<title>void volatile* Atomic::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;::operator()&lt;void volatile*&gt;(void volatile* const volatile*) const (1 samples, 0.10%)</title><rect x="271.8" y="979.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="274.8" y="990.0"></text>
</g>
<g>
<title>void volatile* Atomic::load&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.10%)</title><rect x="271.8" y="963.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="274.8" y="974.0"></text>
</g>
<g>
<title>void volatile* Atomic::PlatformLoad&lt;8ul&gt;::operator()&lt;void volatile*&gt;(void volatile* const volatile*) const (1 samples, 0.10%)</title><rect x="271.8" y="947.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="274.8" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePosition (1 samples, 0.10%)</title><rect x="273.0" y="1315.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="276.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicSet.addAll (1 samples, 0.10%)</title><rect x="273.0" y="1299.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicSet.addAll (1 samples, 0.10%)</title><rect x="273.0" y="1283.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.10%)</title><rect x="273.0" y="1267.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="273.0" y="1251.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.10%)</title><rect x="273.0" y="1235.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.10%)</title><rect x="273.0" y="1219.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="276.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.10%)</title><rect x="273.0" y="1203.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.hashCode (1 samples, 0.10%)</title><rect x="273.0" y="1187.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/MonitorSnippets$Templates.lower (3 samples, 0.31%)</title><rect x="274.3" y="1379.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="277.3" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (2 samples, 0.21%)</title><rect x="274.3" y="1363.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.3" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (2 samples, 0.21%)</title><rect x="274.3" y="1347.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.3" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (1 samples, 0.10%)</title><rect x="274.3" y="1331.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.10%)</title><rect x="274.3" y="1315.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="277.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.10%)</title><rect x="274.3" y="1299.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.3" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.10%)</title><rect x="274.3" y="1283.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="277.3" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.10%)</title><rect x="274.3" y="1267.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.3" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="274.3" y="1251.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.3" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="274.3" y="1235.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.3" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="274.3" y="1219.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.3" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="274.3" y="1203.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="277.3" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (1 samples, 0.10%)</title><rect x="274.3" y="1187.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (1 samples, 0.10%)</title><rect x="274.3" y="1171.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (1 samples, 0.10%)</title><rect x="274.3" y="1155.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="277.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.tryKillUnused (1 samples, 0.10%)</title><rect x="274.3" y="1139.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="277.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.10%)</title><rect x="274.3" y="1123.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.10%)</title><rect x="274.3" y="1107.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.markDeleted (1 samples, 0.10%)</title><rect x="274.3" y="1091.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.3" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unregister (1 samples, 0.10%)</title><rect x="274.3" y="1075.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.removeNodeFromCache (1 samples, 0.10%)</title><rect x="274.3" y="1059.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="277.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.removeKey (1 samples, 0.10%)</title><rect x="274.3" y="1043.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.3" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="275.5" y="1331.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.5" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="275.5" y="1315.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.5" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (1 samples, 0.10%)</title><rect x="275.5" y="1299.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.5" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (1 samples, 0.10%)</title><rect x="275.5" y="1283.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="278.5" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.lower (1 samples, 0.10%)</title><rect x="275.5" y="1267.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.5" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="275.5" y="1251.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="278.5" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="275.5" y="1235.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="278.5" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="275.5" y="1219.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.5" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="275.5" y="1203.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="278.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (1 samples, 0.10%)</title><rect x="275.5" y="1187.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.5" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="275.5" y="1171.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="278.5" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="275.5" y="1155.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="278.5" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="275.5" y="1139.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="278.5" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.run (1 samples, 0.10%)</title><rect x="275.5" y="1123.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="278.5" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="275.5" y="1107.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.5" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="275.5" y="1091.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.5" y="1102.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x000000011001e880 (1 samples, 0.10%)</title><rect x="275.5" y="1075.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.10%)</title><rect x="276.7" y="1363.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.10%)</title><rect x="276.7" y="1347.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.7" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (1 samples, 0.10%)</title><rect x="276.7" y="1331.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="279.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="276.7" y="1315.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="279.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="276.7" y="1299.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.10%)</title><rect x="276.7" y="1283.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.7" y="1294.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="276.7" y="1267.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="279.7" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lower (7 samples, 0.73%)</title><rect x="278.0" y="1379.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/BoxingSnippets$Templates.lower (1 samples, 0.10%)</title><rect x="278.0" y="1363.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.0" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (1 samples, 0.10%)</title><rect x="278.0" y="1347.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="281.0" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (1 samples, 0.10%)</title><rect x="278.0" y="1331.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (1 samples, 0.10%)</title><rect x="278.0" y="1315.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="281.0" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.10%)</title><rect x="278.0" y="1299.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.10%)</title><rect x="278.0" y="1283.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.10%)</title><rect x="278.0" y="1267.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.0" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.10%)</title><rect x="278.0" y="1251.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="278.0" y="1235.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.0" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="278.0" y="1219.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.0" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="278.0" y="1203.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="278.0" y="1187.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.0" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.10%)</title><rect x="278.0" y="1171.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.10%)</title><rect x="278.0" y="1155.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.0" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="278.0" y="1139.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="278.0" y="1123.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.0" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="278.0" y="1107.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.0" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="278.0" y="1091.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="278.0" y="1075.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.10%)</title><rect x="278.0" y="1059.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.0" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="278.0" y="1043.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.0" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.10%)</title><rect x="278.0" y="1027.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.0" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.10%)</title><rect x="278.0" y="1011.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.0" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.10%)</title><rect x="278.0" y="995.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="278.0" y="979.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="278.0" y="963.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="281.0" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="278.0" y="947.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="281.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="278.0" y="931.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeSpecial (1 samples, 0.10%)</title><rect x="278.0" y="915.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="281.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeSpecial (1 samples, 0.10%)</title><rect x="278.0" y="899.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="281.0" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="278.0" y="883.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.0" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.10%)</title><rect x="278.0" y="867.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.0" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.10%)</title><rect x="278.0" y="851.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.0" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.10%)</title><rect x="278.0" y="835.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="281.0" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="278.0" y="819.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="281.0" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="278.0" y="803.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.0" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="278.0" y="787.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="281.0" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="278.0" y="771.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="281.0" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeSpecial (1 samples, 0.10%)</title><rect x="278.0" y="755.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="281.0" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeSpecial (1 samples, 0.10%)</title><rect x="278.0" y="739.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.0" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.10%)</title><rect x="278.0" y="723.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="281.0" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.maybeEagerlyResolve (1 samples, 0.10%)</title><rect x="278.0" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.0" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lowerArrayLengthNode (1 samples, 0.10%)</title><rect x="279.2" y="1363.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.2" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createReadArrayLength (1 samples, 0.10%)</title><rect x="279.2" y="1347.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.2" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.add (1 samples, 0.10%)</title><rect x="279.2" y="1331.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.2" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="279.2" y="1315.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.2" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="279.2" y="1299.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="282.2" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="279.2" y="1283.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="279.2" y="1267.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.2" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="279.2" y="1251.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="282.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.add (1 samples, 0.10%)</title><rect x="279.2" y="1235.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.10%)</title><rect x="279.2" y="1219.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="282.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="279.2" y="1203.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="282.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.grow (1 samples, 0.10%)</title><rect x="279.2" y="1187.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.10%)</title><rect x="279.2" y="1171.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.2" y="1182.0"></text>
</g>
<g>
<title>JVM_ArrayCopy (1 samples, 0.10%)</title><rect x="279.2" y="1155.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="282.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lowerLoadFieldNode (2 samples, 0.21%)</title><rect x="280.4" y="1363.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="283.4" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createNullCheckedValue (1 samples, 0.10%)</title><rect x="281.6" y="1347.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="284.6" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lowerLoadHubOrNullNode (1 samples, 0.10%)</title><rect x="282.9" y="1363.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.9" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addOrUniqueWithInputs (1 samples, 0.10%)</title><rect x="282.9" y="1347.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="282.9" y="1331.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.10%)</title><rect x="282.9" y="1315.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.equalSuccessors (1 samples, 0.10%)</title><rect x="282.9" y="1299.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lowerLoadIndexedNode (2 samples, 0.21%)</title><rect x="284.1" y="1363.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.1" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createNullCheckedValue (1 samples, 0.10%)</title><rect x="284.1" y="1347.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.1" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createNullCheck (1 samples, 0.10%)</title><rect x="284.1" y="1331.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="287.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.10%)</title><rect x="284.1" y="1315.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="284.1" y="1299.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.1" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="284.1" y="1283.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.1" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="284.1" y="1267.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="284.1" y="1251.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.grow (1 samples, 0.10%)</title><rect x="284.1" y="1235.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.1" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.getBoundsCheck (1 samples, 0.10%)</title><rect x="285.3" y="1347.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.3" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.readOrCreateArrayLength (1 samples, 0.10%)</title><rect x="285.3" y="1331.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createReadArrayLength (1 samples, 0.10%)</title><rect x="285.3" y="1315.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/InstanceOfSnippetsTemplates.lower (2 samples, 0.21%)</title><rect x="286.6" y="1379.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.6" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (1 samples, 0.10%)</title><rect x="286.6" y="1363.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="289.6" y="1374.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.get (1 samples, 0.10%)</title><rect x="286.6" y="1347.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.6" y="1358.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.get (1 samples, 0.10%)</title><rect x="286.6" y="1331.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.6" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.10%)</title><rect x="286.6" y="1315.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.6" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$CacheKey.equals (1 samples, 0.10%)</title><rect x="286.6" y="1299.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="289.6" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.10%)</title><rect x="287.8" y="1363.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.8" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (1 samples, 0.10%)</title><rect x="287.8" y="1347.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.8" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePosition (1 samples, 0.10%)</title><rect x="287.8" y="1331.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.8" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.setNodeSourcePosition (1 samples, 0.10%)</title><rect x="287.8" y="1315.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.8" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.setNodeInfo (1 samples, 0.10%)</title><rect x="287.8" y="1299.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.8" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopySnippets$Templates.lower (6 samples, 0.62%)</title><rect x="289.0" y="1379.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.0" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopySnippets$Templates.lower (6 samples, 0.62%)</title><rect x="289.0" y="1363.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.0" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$Arguments.&lt;init&gt; (1 samples, 0.10%)</title><rect x="289.0" y="1347.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="292.0" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopy.getSource (1 samples, 0.10%)</title><rect x="290.3" y="1347.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="293.3" y="1358.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="290.3" y="1331.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="293.3" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="290.3" y="1315.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="293.3" y="1326.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="290.3" y="1299.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="293.3" y="1310.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="290.3" y="1283.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="293.3" y="1294.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="290.3" y="1267.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="293.3" y="1278.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="290.3" y="1251.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="293.3" y="1262.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="290.3" y="1235.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="293.3" y="1246.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.10%)</title><rect x="290.3" y="1219.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="293.3" y="1230.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.10%)</title><rect x="290.3" y="1203.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="293.3" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopySnippets$Templates.instantiate (4 samples, 0.42%)</title><rect x="291.5" y="1347.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.5" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (4 samples, 0.42%)</title><rect x="291.5" y="1331.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.5" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (4 samples, 0.42%)</title><rect x="291.5" y="1315.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.5" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="291.5" y="1299.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.5" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="291.5" y="1283.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.5" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.10%)</title><rect x="291.5" y="1267.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="294.5" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (1 samples, 0.10%)</title><rect x="291.5" y="1251.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.5" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (1 samples, 0.10%)</title><rect x="291.5" y="1235.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="294.5" y="1246.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="291.5" y="1219.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="291.5" y="1203.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (3 samples, 0.31%)</title><rect x="292.7" y="1299.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (3 samples, 0.31%)</title><rect x="292.7" y="1283.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.7" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (3 samples, 0.31%)</title><rect x="292.7" y="1267.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.7" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (3 samples, 0.31%)</title><rect x="292.7" y="1251.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.7" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (3 samples, 0.31%)</title><rect x="292.7" y="1235.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.7" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.31%)</title><rect x="292.7" y="1219.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="295.7" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.31%)</title><rect x="292.7" y="1203.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.7" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.31%)</title><rect x="292.7" y="1187.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (3 samples, 0.31%)</title><rect x="292.7" y="1171.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (3 samples, 0.31%)</title><rect x="292.7" y="1155.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (3 samples, 0.31%)</title><rect x="292.7" y="1139.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (3 samples, 0.31%)</title><rect x="292.7" y="1123.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (3 samples, 0.31%)</title><rect x="292.7" y="1107.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (3 samples, 0.31%)</title><rect x="292.7" y="1091.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (3 samples, 0.31%)</title><rect x="292.7" y="1075.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (3 samples, 0.31%)</title><rect x="292.7" y="1059.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (3 samples, 0.31%)</title><rect x="292.7" y="1043.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (3 samples, 0.31%)</title><rect x="292.7" y="1027.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="295.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (3 samples, 0.31%)</title><rect x="292.7" y="1011.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (3 samples, 0.31%)</title><rect x="292.7" y="995.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="295.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (3 samples, 0.31%)</title><rect x="292.7" y="979.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.7" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (3 samples, 0.31%)</title><rect x="292.7" y="963.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.7" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (3 samples, 0.31%)</title><rect x="292.7" y="947.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.7" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (3 samples, 0.31%)</title><rect x="292.7" y="931.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.7" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (3 samples, 0.31%)</title><rect x="292.7" y="915.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.7" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfZero (1 samples, 0.10%)</title><rect x="292.7" y="899.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="295.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.10%)</title><rect x="292.7" y="883.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.7" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.10%)</title><rect x="292.7" y="867.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.7" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.loadLocalObject (2 samples, 0.21%)</title><rect x="293.9" y="899.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.9" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (2 samples, 0.21%)</title><rect x="293.9" y="883.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.9" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (2 samples, 0.21%)</title><rect x="293.9" y="867.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.9" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (2 samples, 0.21%)</title><rect x="293.9" y="851.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.9" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleLoadField (2 samples, 0.21%)</title><rect x="293.9" y="835.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.9" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryReadField (2 samples, 0.21%)</title><rect x="293.9" y="819.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.9" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryConstantFold (2 samples, 0.21%)</title><rect x="293.9" y="803.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.9" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.getMetaAccess (1 samples, 0.10%)</title><rect x="293.9" y="787.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="296.9" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/CoreProvidersImpl.getMetaAccess (1 samples, 0.10%)</title><rect x="293.9" y="771.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.9" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil.tryConstantFold (1 samples, 0.10%)</title><rect x="295.2" y="787.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.2" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/spi/JavaConstantFieldProvider.readConstantField (1 samples, 0.10%)</title><rect x="295.2" y="771.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.2" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil$1.foldConstant (1 samples, 0.10%)</title><rect x="295.2" y="755.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.2" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/ConstantFoldUtil$1.foldConstant (1 samples, 0.10%)</title><rect x="295.2" y="739.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.2" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="295.2" y="723.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.2" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="295.2" y="707.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="298.2" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forConstant (1 samples, 0.10%)</title><rect x="295.2" y="691.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="298.2" y="702.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.lookupJavaType (1 samples, 0.10%)</title><rect x="295.2" y="675.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="298.2" y="686.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="295.2" y="659.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="298.2" y="670.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="295.2" y="643.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="298.2" y="654.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="295.2" y="627.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="298.2" y="638.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="295.2" y="611.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="298.2" y="622.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="295.2" y="595.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="298.2" y="606.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="295.2" y="579.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="298.2" y="590.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="295.2" y="563.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="298.2" y="574.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="295.2" y="547.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="298.2" y="558.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="295.2" y="531.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="298.2" y="542.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="295.2" y="515.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="298.2" y="526.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="295.2" y="499.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="298.2" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/virtual/CommitAllocationNode.lower (2 samples, 0.21%)</title><rect x="296.4" y="1427.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="299.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (2 samples, 0.21%)</title><rect x="296.4" y="1411.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (2 samples, 0.21%)</title><rect x="296.4" y="1395.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.4" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lower (2 samples, 0.21%)</title><rect x="296.4" y="1379.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.4" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lowerCommitAllocationNode (2 samples, 0.21%)</title><rect x="296.4" y="1363.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.4" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.finishAllocatedObjects (2 samples, 0.21%)</title><rect x="296.4" y="1347.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="299.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="296.4" y="1331.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="299.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="296.4" y="1315.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="296.4" y="1299.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="299.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="296.4" y="1283.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="296.4" y="1267.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.4" y="1278.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="296.4" y="1251.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="299.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="296.4" y="1235.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="299.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="296.4" y="1219.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="299.4" y="1230.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="296.4" y="1203.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="299.4" y="1214.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="296.4" y="1187.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="299.4" y="1198.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="296.4" y="1171.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="299.4" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="296.4" y="1155.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="299.4" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.10%)</title><rect x="296.4" y="1139.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="299.4" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.10%)</title><rect x="296.4" y="1123.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="299.4" y="1134.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.10%)</title><rect x="296.4" y="1107.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="299.4" y="1118.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (1 samples, 0.10%)</title><rect x="296.4" y="1091.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="299.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtUsagesAndDelete (1 samples, 0.10%)</title><rect x="297.6" y="1331.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.6" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValueNode.replaceAtUsages (1 samples, 0.10%)</title><rect x="297.6" y="1315.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.6" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtUsages (1 samples, 0.10%)</title><rect x="297.6" y="1299.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.6" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtAllUsages (1 samples, 0.10%)</title><rect x="297.6" y="1283.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.6" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtUsage (1 samples, 0.10%)</title><rect x="297.6" y="1267.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.6" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.maybeNotifyInputChanged (1 samples, 0.10%)</title><rect x="297.6" y="1251.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.6" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="297.6" y="1235.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="297.6" y="1219.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.add (1 samples, 0.10%)</title><rect x="297.6" y="1203.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.10%)</title><rect x="297.6" y="1187.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="297.6" y="1171.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.createHash (1 samples, 0.10%)</title><rect x="297.6" y="1155.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="300.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.10%)</title><rect x="297.6" y="1139.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.10%)</title><rect x="297.6" y="1123.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="300.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopyCallNode.lower (2 samples, 0.21%)</title><rect x="298.9" y="1427.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="301.9" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopyCallNode.computeBase (1 samples, 0.10%)</title><rect x="298.9" y="1411.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.9" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/GetObjectAddressNode.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="298.9" y="1395.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.9" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.10%)</title><rect x="298.9" y="1379.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.9" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.10%)</title><rect x="298.9" y="1363.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.9" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.10%)</title><rect x="298.9" y="1347.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="301.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.forCurrentThread (1 samples, 0.10%)</title><rect x="298.9" y="1331.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="298.9" y="1315.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="298.9" y="1299.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="301.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopyCallNode.updateAlignedDisjoint (1 samples, 0.10%)</title><rect x="300.1" y="1411.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/ArrayCopyCallNode.isHeapWordAligned (1 samples, 0.10%)</title><rect x="300.1" y="1395.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="303.1" y="1406.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.getArrayIndexScale (1 samples, 0.10%)</title><rect x="300.1" y="1379.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="303.1" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="300.1" y="1363.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="303.1" y="1374.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="300.1" y="1347.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="303.1" y="1358.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="300.1" y="1331.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="303.1" y="1342.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="300.1" y="1315.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="303.1" y="1326.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="300.1" y="1299.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="303.1" y="1310.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="300.1" y="1283.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="303.1" y="1294.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.10%)</title><rect x="300.1" y="1267.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="303.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (15 samples, 1.56%)</title><rect x="301.3" y="1555.0" width="18.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="304.3" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (15 samples, 1.56%)</title><rect x="301.3" y="1539.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (15 samples, 1.56%)</title><rect x="301.3" y="1523.0" width="18.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="304.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase$ExcludePhaseFilter.exclude (1 samples, 0.10%)</title><rect x="301.3" y="1507.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="304.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (14 samples, 1.46%)</title><rect x="302.5" y="1507.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (14 samples, 1.46%)</title><rect x="302.5" y="1491.0" width="17.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="305.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList.addAll (2 samples, 0.21%)</title><rect x="302.5" y="1475.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.5" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.add (1 samples, 0.10%)</title><rect x="303.8" y="1459.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.8" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.10%)</title><rect x="303.8" y="1443.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.8" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.10%)</title><rect x="303.8" y="1427.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.8" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.grow (1 samples, 0.10%)</title><rect x="303.8" y="1411.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.8" y="1422.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="303.8" y="1395.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.8" y="1406.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="303.8" y="1379.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="306.8" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (12 samples, 1.25%)</title><rect x="305.0" y="1475.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.0" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList$1.hasNext (1 samples, 0.10%)</title><rect x="305.0" y="1459.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$QueueConsumingIterator.dropDeleted (1 samples, 0.10%)</title><rect x="305.0" y="1443.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.0" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList$1.next (2 samples, 0.21%)</title><rect x="306.2" y="1459.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.2" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList$1.next (2 samples, 0.21%)</title><rect x="306.2" y="1443.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.2" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.remove (1 samples, 0.10%)</title><rect x="306.2" y="1427.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.2" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.removeFirst (1 samples, 0.10%)</title><rect x="306.2" y="1411.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.2" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.10%)</title><rect x="306.2" y="1395.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.2" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$QueueConsumingIterator.dropDeleted (1 samples, 0.10%)</title><rect x="307.5" y="1427.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (9 samples, 0.94%)</title><rect x="308.7" y="1459.0" width="11.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (6 samples, 0.62%)</title><rect x="308.7" y="1443.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (2 samples, 0.21%)</title><rect x="308.7" y="1427.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/PointerEqualsNode.canonical (2 samples, 0.21%)</title><rect x="308.7" y="1411.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/PointerEqualsNode.canonical (2 samples, 0.21%)</title><rect x="308.7" y="1395.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="311.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/PointerEqualsNode$PointerEqualsOp.canonical (2 samples, 0.21%)</title><rect x="308.7" y="1379.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/CompareNode$CompareOp.canonical (1 samples, 0.10%)</title><rect x="308.7" y="1363.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/CompareNode$CompareOp.canonicalizeSymmetricConstant (1 samples, 0.10%)</title><rect x="308.7" y="1347.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.7" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/CompareNode$CompareOp.canonicalConvertConstant (1 samples, 0.10%)</title><rect x="308.7" y="1331.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="311.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ConvertNode.preservesOrder (1 samples, 0.10%)</title><rect x="308.7" y="1315.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ConvertNode.preservesOrder (1 samples, 0.10%)</title><rect x="308.7" y="1299.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/PointerEqualsNode.findSynonym (1 samples, 0.10%)</title><rect x="309.9" y="1363.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.9" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/Stamp.alwaysDistinct (1 samples, 0.10%)</title><rect x="309.9" y="1347.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/nodes/type/MetaspacePointerStamp.join (1 samples, 0.10%)</title><rect x="309.9" y="1331.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractPointerStamp.defaultPointerJoin (1 samples, 0.10%)</title><rect x="309.9" y="1315.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.simplify (1 samples, 0.10%)</title><rect x="311.1" y="1427.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="314.1" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killCFG (1 samples, 0.10%)</title><rect x="311.1" y="1411.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="314.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killCFGInner (1 samples, 0.10%)</title><rect x="311.1" y="1395.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceFirstInput (1 samples, 0.10%)</title><rect x="311.1" y="1379.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.updateUsages (1 samples, 0.10%)</title><rect x="311.1" y="1363.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.1" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.maybeNotifyZeroUsages (1 samples, 0.10%)</title><rect x="311.1" y="1347.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="314.1" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="311.1" y="1331.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="314.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$1.usagesDroppedToZero (1 samples, 0.10%)</title><rect x="311.1" y="1315.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/PiNode.canonical (1 samples, 0.10%)</title><rect x="312.4" y="1427.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/PiNode.canonical (1 samples, 0.10%)</title><rect x="312.4" y="1411.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/FloatingNode.asNode (1 samples, 0.10%)</title><rect x="312.4" y="1395.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.4" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.getCanonicalizeableContractAssertion (1 samples, 0.10%)</title><rect x="313.6" y="1427.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="316.6" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.performReplacement (1 samples, 0.10%)</title><rect x="314.8" y="1427.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.8" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addOrUniqueWithInputs (1 samples, 0.10%)</title><rect x="314.8" y="1411.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="317.8" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="314.8" y="1395.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.8" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="314.8" y="1379.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="317.8" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="314.8" y="1363.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.8" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="314.8" y="1347.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="317.8" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryInferStamp (3 samples, 0.31%)</title><rect x="316.1" y="1443.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="319.1" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValuePhiNode.inferStamp (1 samples, 0.10%)</title><rect x="316.1" y="1427.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="319.1" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.meetOrNull (1 samples, 0.10%)</title><rect x="316.1" y="1411.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.meet (1 samples, 0.10%)</title><rect x="316.1" y="1395.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="319.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/Stamp.isEmpty (1 samples, 0.10%)</title><rect x="316.1" y="1379.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.hasValues (1 samples, 0.10%)</title><rect x="316.1" y="1363.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="319.1" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryNode.inferStamp (1 samples, 0.10%)</title><rect x="317.3" y="1427.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.3" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryArithmeticNode.foldStamp (1 samples, 0.10%)</title><rect x="317.3" y="1411.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="320.3" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp$12.foldStamp (1 samples, 0.10%)</title><rect x="317.3" y="1395.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.3" y="1406.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x000000011001a500 (1 samples, 0.10%)</title><rect x="317.3" y="1379.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.3" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/UnaryNode.inferStamp (1 samples, 0.10%)</title><rect x="318.5" y="1427.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/CompressionNode.foldStamp (1 samples, 0.10%)</title><rect x="318.5" y="1411.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.5" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/nodes/HotSpotCompressionNode.mkStamp (1 samples, 0.10%)</title><rect x="318.5" y="1395.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.5" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/nodes/type/HotSpotNarrowOopStamp.mkStamp (1 samples, 0.10%)</title><rect x="318.5" y="1379.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.5" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/NarrowOopStamp.uncompressed (1 samples, 0.10%)</title><rect x="318.5" y="1363.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="321.5" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/ObjectStamp.&lt;init&gt; (1 samples, 0.10%)</title><rect x="318.5" y="1347.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.5" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.&lt;init&gt; (1 samples, 0.10%)</title><rect x="318.5" y="1331.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="321.5" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractPointerStamp.&lt;init&gt; (1 samples, 0.10%)</title><rect x="318.5" y="1315.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="321.5" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.&lt;init&gt; (1 samples, 0.10%)</title><rect x="319.8" y="1619.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.8" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.&lt;init&gt; (1 samples, 0.10%)</title><rect x="319.8" y="1603.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="322.8" y="1614.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x000000011001e880 (1 samples, 0.10%)</title><rect x="319.8" y="1587.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="322.8" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/WriteBarrierAdditionPhase.run (2 samples, 0.21%)</title><rect x="321.0" y="1667.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="324.0" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/WriteBarrierAdditionPhase.run (2 samples, 0.21%)</title><rect x="321.0" y="1651.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.0" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterator.hasNext (1 samples, 0.10%)</title><rect x="321.0" y="1635.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.0" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator.forward (1 samples, 0.10%)</title><rect x="321.0" y="1619.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="324.0" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/GraphNodeIterator.hasNext (1 samples, 0.10%)</title><rect x="321.0" y="1603.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="324.0" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/gc/G1BarrierSet.addBarriers (1 samples, 0.10%)</title><rect x="322.2" y="1635.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.2" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/gc/G1BarrierSet.addWriteBarriers (1 samples, 0.10%)</title><rect x="322.2" y="1619.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.2" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningPhase.run (279 samples, 29.06%)</title><rect x="323.4" y="1667.0" width="343.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.4" y="1678.0">org/graalvm/compiler/phases/common/inlining/In..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningPhase.run (279 samples, 29.06%)</title><rect x="323.4" y="1651.0" width="343.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.4" y="1662.0">org/graalvm/compiler/phases/common/inlining/In..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.&lt;init&gt; (2 samples, 0.21%)</title><rect x="323.4" y="1635.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="326.4" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/CallsiteHolderExplorable.&lt;init&gt; (2 samples, 0.21%)</title><rect x="323.4" y="1619.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="326.4" y="1630.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="323.4" y="1603.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="326.4" y="1614.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1587.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="326.4" y="1598.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1571.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="326.4" y="1582.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1555.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="326.4" y="1566.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1539.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="326.4" y="1550.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1523.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="326.4" y="1534.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1507.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="326.4" y="1518.0"></text>
</g>
<g>
<title>VerificationType::is_reference_assignable_from(VerificationType const&amp;, ClassVerifier*, bool, Thread*) const (1 samples, 0.10%)</title><rect x="323.4" y="1491.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="326.4" y="1502.0"></text>
</g>
<g>
<title>VerificationType::resolve_and_check_assignability(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1475.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="326.4" y="1486.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1459.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="326.4" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.10%)</title><rect x="323.4" y="1443.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="326.4" y="1454.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.10%)</title><rect x="323.4" y="1427.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="326.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/CallsiteHolderExplorable.computeProbabilities (1 samples, 0.10%)</title><rect x="324.7" y="1603.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.7" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance.compute (1 samples, 0.10%)</title><rect x="324.7" y="1587.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.7" y="1598.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="324.7" y="1571.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="327.7" y="1582.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="324.7" y="1555.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="327.7" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="324.7" y="1539.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="327.7" y="1550.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.10%)</title><rect x="324.7" y="1523.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="327.7" y="1534.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.10%)</title><rect x="324.7" y="1507.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="327.7" y="1518.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="324.7" y="1491.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="327.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.moveForward (277 samples, 28.85%)</title><rect x="325.9" y="1635.0" width="340.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="328.9" y="1646.0">org/graalvm/compiler/phases/common/inlining/wa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/GreedyInliningPolicy.isWorthInlining (85 samples, 8.85%)</title><rect x="325.9" y="1619.0" width="104.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.9" y="1630.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/MultiTypeGuardInlineInfo.shouldInline (1 samples, 0.10%)</title><rect x="325.9" y="1603.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="328.9" y="1614.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.shouldBeInlined (1 samples, 0.10%)</title><rect x="325.9" y="1587.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="328.9" y="1598.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.compilerToVM (1 samples, 0.10%)</title><rect x="325.9" y="1571.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="328.9" y="1582.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.getCompilerToVM (1 samples, 0.10%)</title><rect x="325.9" y="1555.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="328.9" y="1566.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.runtime (1 samples, 0.10%)</title><rect x="325.9" y="1539.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="328.9" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/AbstractInliningPolicy.isIntrinsic (1 samples, 0.10%)</title><rect x="327.1" y="1603.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="330.1" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/AbstractInliningPolicy.onlyForcedIntrinsics (1 samples, 0.10%)</title><rect x="327.1" y="1587.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/AbstractInliningPolicy.onlyIntrinsics (1 samples, 0.10%)</title><rect x="327.1" y="1571.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="330.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.hasSubstitution (1 samples, 0.10%)</title><rect x="327.1" y="1555.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.lookupInvocation (1 samples, 0.10%)</title><rect x="327.1" y="1539.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.get (1 samples, 0.10%)</title><rect x="327.1" y="1523.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.1" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins$ClassPlugins.get (1 samples, 0.10%)</title><rect x="327.1" y="1507.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.10%)</title><rect x="327.1" y="1491.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="330.1" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.10%)</title><rect x="327.1" y="1475.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="330.1" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findLinear (1 samples, 0.10%)</title><rect x="327.1" y="1459.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="330.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.compareKeys (1 samples, 0.10%)</title><rect x="327.1" y="1443.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="330.1" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/AbstractInliningPolicy.previousLowLevelGraphSize (2 samples, 0.21%)</title><rect x="328.4" y="1603.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.4" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.getProfilingInfo (2 samples, 0.21%)</title><rect x="328.4" y="1587.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="331.4" y="1598.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaMethod.getProfilingInfo (2 samples, 0.21%)</title><rect x="328.4" y="1571.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="331.4" y="1582.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getProfilingInfo (2 samples, 0.21%)</title><rect x="328.4" y="1555.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.4" y="1566.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.&lt;init&gt; (2 samples, 0.21%)</title><rect x="328.4" y="1539.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.4" y="1550.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMethodData.isProfileMature (1 samples, 0.10%)</title><rect x="329.6" y="1523.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="332.6" y="1534.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.isMature (1 samples, 0.10%)</title><rect x="329.6" y="1507.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="332.6" y="1518.0"></text>
</g>
<g>
<title>c2v_isMature(JNIEnv_*, _jobject*, long) (1 samples, 0.10%)</title><rect x="329.6" y="1491.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="332.6" y="1502.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::is_mature(Method*) (1 samples, 0.10%)</title><rect x="329.6" y="1475.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="332.6" y="1486.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="329.6" y="1459.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="332.6" y="1470.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ull&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="329.6" y="1443.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="332.6" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/InliningPolicy$Decision.withReason (81 samples, 8.44%)</title><rect x="330.8" y="1603.0" width="99.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.8" y="1614.0">org/graalvm/..</text>
</g>
<g>
<title>java/lang/String.format (81 samples, 8.44%)</title><rect x="330.8" y="1587.0" width="99.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.8" y="1598.0">java/lang/St..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.62%)</title><rect x="330.8" y="1571.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.8" y="1582.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (6 samples, 0.62%)</title><rect x="330.8" y="1555.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.8" y="1566.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (6 samples, 0.62%)</title><rect x="330.8" y="1539.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="333.8" y="1550.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (6 samples, 0.62%)</title><rect x="330.8" y="1523.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.8" y="1534.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (6 samples, 0.62%)</title><rect x="330.8" y="1507.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.8" y="1518.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (6 samples, 0.62%)</title><rect x="330.8" y="1491.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="333.8" y="1502.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (6 samples, 0.62%)</title><rect x="330.8" y="1475.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.10%)</title><rect x="332.0" y="1459.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="335.0" y="1470.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (3 samples, 0.31%)</title><rect x="333.3" y="1459.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="336.3" y="1470.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.filter (1 samples, 0.10%)</title><rect x="333.3" y="1443.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.3" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$9.&lt;init&gt; (1 samples, 0.10%)</title><rect x="333.3" y="1427.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.3" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (2 samples, 0.21%)</title><rect x="334.5" y="1443.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="337.5" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="334.5" y="1427.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.5" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.21%)</title><rect x="334.5" y="1411.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="337.5" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="334.5" y="1395.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="337.5" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="334.5" y="1379.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="337.5" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.10%)</title><rect x="335.7" y="1363.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.7" y="1374.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (1 samples, 0.10%)</title><rect x="335.7" y="1347.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.estimateSize (1 samples, 0.10%)</title><rect x="335.7" y="1331.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.7" y="1342.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (1 samples, 0.10%)</title><rect x="337.0" y="1459.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="340.0" y="1470.0"></text>
</g>
<g>
<title>java/util/Formatter.format (75 samples, 7.81%)</title><rect x="338.2" y="1571.0" width="92.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="341.2" y="1582.0">java/util/F..</text>
</g>
<g>
<title>java/util/Formatter.format (75 samples, 7.81%)</title><rect x="338.2" y="1555.0" width="92.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="341.2" y="1566.0">java/util/F..</text>
</g>
<g>
<title>java/util/Formatter$FixedString.print (2 samples, 0.21%)</title><rect x="339.4" y="1539.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.4" y="1550.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.21%)</title><rect x="339.4" y="1523.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="342.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.21%)</title><rect x="339.4" y="1507.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.21%)</title><rect x="339.4" y="1491.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.4" y="1502.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.10%)</title><rect x="340.6" y="1475.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="343.6" y="1486.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (43 samples, 4.48%)</title><rect x="341.9" y="1539.0" width="52.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="344.9" y="1550.0">java/..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printFloat (39 samples, 4.06%)</title><rect x="341.9" y="1523.0" width="47.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.9" y="1534.0">java..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (39 samples, 4.06%)</title><rect x="341.9" y="1507.0" width="47.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.9" y="1518.0">java..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.appendJustified (1 samples, 0.10%)</title><rect x="343.1" y="1491.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.1" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="343.1" y="1475.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.1" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="343.1" y="1459.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="343.1" y="1443.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="343.1" y="1427.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="346.1" y="1438.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (37 samples, 3.85%)</title><rect x="344.3" y="1491.0" width="45.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.3" y="1502.0">java..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="344.3" y="1475.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="344.3" y="1459.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.3" y="1470.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.10%)</title><rect x="344.3" y="1443.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.3" y="1454.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.addZeros (1 samples, 0.10%)</title><rect x="345.6" y="1475.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.6" y="1486.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.localizedMagnitude (20 samples, 2.08%)</title><rect x="346.8" y="1475.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.8" y="1486.0">j..</text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (18 samples, 1.88%)</title><rect x="348.0" y="1459.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.0" y="1470.0">j..</text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (17 samples, 1.77%)</title><rect x="348.0" y="1443.0" width="20.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="351.0" y="1454.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (16 samples, 1.67%)</title><rect x="349.3" y="1427.0" width="19.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.3" y="1438.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (16 samples, 1.67%)</title><rect x="349.3" y="1411.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="352.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.10%)</title><rect x="349.3" y="1395.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.3" y="1406.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (13 samples, 1.35%)</title><rect x="350.5" y="1395.0" width="16.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.chars (5 samples, 0.52%)</title><rect x="351.7" y="1379.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="354.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="352.9" y="1363.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringLatin1$CharsSpliterator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="352.9" y="1347.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="355.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="354.2" y="1363.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="357.2" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (2 samples, 0.21%)</title><rect x="355.4" y="1363.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="358.4" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.21%)</title><rect x="355.4" y="1347.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="358.4" y="1358.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="356.6" y="1331.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="359.6" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="356.6" y="1315.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="359.6" y="1326.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="356.6" y="1299.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="359.6" y="1310.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="356.6" y="1283.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="359.6" y="1294.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="356.6" y="1267.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="359.6" y="1278.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="356.6" y="1251.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="359.6" y="1262.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="356.6" y="1235.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="359.6" y="1246.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="356.6" y="1219.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="359.6" y="1230.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="356.6" y="1203.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="359.6" y="1214.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="356.6" y="1187.0" width="1.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="359.6" y="1198.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="356.6" y="1171.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="359.6" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.filter (2 samples, 0.21%)</title><rect x="357.9" y="1379.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.9" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$9.&lt;init&gt; (1 samples, 0.10%)</title><rect x="359.1" y="1363.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.1" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$StatelessOp.&lt;init&gt; (1 samples, 0.10%)</title><rect x="359.1" y="1347.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.1" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.&lt;init&gt; (1 samples, 0.10%)</title><rect x="359.1" y="1331.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.1" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.10%)</title><rect x="359.1" y="1315.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.1" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/PipelineHelper.&lt;init&gt; (1 samples, 0.10%)</title><rect x="359.1" y="1299.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="362.1" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (5 samples, 0.52%)</title><rect x="360.3" y="1379.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.3" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.52%)</title><rect x="360.3" y="1363.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="363.3" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.52%)</title><rect x="360.3" y="1347.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="363.3" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.52%)</title><rect x="360.3" y="1331.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="363.3" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.42%)</title><rect x="360.3" y="1315.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="363.3" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.42%)</title><rect x="360.3" y="1299.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="363.3" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="360.3" y="1283.0" width="1.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="363.3" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$9$1.begin (1 samples, 0.10%)</title><rect x="361.5" y="1283.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.5" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (2 samples, 0.21%)</title><rect x="362.8" y="1283.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.tryAdvance (1 samples, 0.10%)</title><rect x="364.0" y="1267.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="367.0" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$9$1.accept (1 samples, 0.10%)</title><rect x="364.0" y="1251.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.0" y="1262.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols$$Lambda$26.0x0000000800b63f40.test (1 samples, 0.10%)</title><rect x="364.0" y="1235.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="367.0" y="1246.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="364.0" y="1219.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="367.0" y="1230.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="364.0" y="1203.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="367.0" y="1214.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="364.0" y="1187.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="367.0" y="1198.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="364.0" y="1171.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="367.0" y="1182.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(methodHandle const&amp;, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="364.0" y="1155.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="367.0" y="1166.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, methodHandle const&amp;), methodHandle const&amp;, CompLevel, bool) (1 samples, 0.10%)</title><rect x="364.0" y="1139.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="367.0" y="1150.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, methodHandle const&amp;), methodHandle const&amp;, CompLevel, bool) (1 samples, 0.10%)</title><rect x="364.0" y="1123.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="367.0" y="1134.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="364.0" y="1107.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="367.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.10%)</title><rect x="365.2" y="1315.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="368.2" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$9.opWrapSink (1 samples, 0.10%)</title><rect x="365.2" y="1299.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.2" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$9$1.&lt;init&gt; (1 samples, 0.10%)</title><rect x="365.2" y="1283.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.2" y="1294.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="365.2" y="1267.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="368.2" y="1278.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="365.2" y="1251.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="368.2" y="1262.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="365.2" y="1235.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="368.2" y="1246.0"></text>
</g>
<g>
<title>java/util/Locale.getUnicodeLocaleType (2 samples, 0.21%)</title><rect x="366.5" y="1395.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.5" y="1406.0"></text>
</g>
<g>
<title>java/util/Locale.hasExtensions (1 samples, 0.10%)</title><rect x="366.5" y="1379.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="369.5" y="1390.0"></text>
</g>
<g>
<title>java/util/Locale.isUnicodeExtensionKey (1 samples, 0.10%)</title><rect x="367.7" y="1379.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.7" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="367.7" y="1363.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="370.7" y="1374.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="367.7" y="1347.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="370.7" y="1358.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="367.7" y="1331.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="370.7" y="1342.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="367.7" y="1315.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="370.7" y="1326.0"></text>
</g>
<g>
<title>MethodCounters::highest_osr_comp_level() const (1 samples, 0.10%)</title><rect x="367.7" y="1299.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="370.7" y="1310.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.getAdapter (1 samples, 0.10%)</title><rect x="368.9" y="1443.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="371.9" y="1454.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.10%)</title><rect x="368.9" y="1427.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="371.9" y="1438.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.getZero (1 samples, 0.10%)</title><rect x="370.1" y="1459.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.1" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/math/FormattedFloatingDecimal.valueOf (15 samples, 1.56%)</title><rect x="371.4" y="1475.0" width="18.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.getBinaryToASCIIConverter (9 samples, 0.94%)</title><rect x="371.4" y="1459.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.4" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="372.6" y="1443.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="375.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer.dtoa (5 samples, 0.52%)</title><rect x="373.8" y="1443.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.8" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/math/FDBigInteger.quoRemIteration (1 samples, 0.10%)</title><rect x="376.3" y="1427.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/math/FDBigInteger.multAndCarryBy10 (1 samples, 0.10%)</title><rect x="376.3" y="1411.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer.estimateDecExp (1 samples, 0.10%)</title><rect x="377.5" y="1427.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="380.5" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer.roundup (1 samples, 0.10%)</title><rect x="378.8" y="1427.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.getBinaryToASCIIBuffer (2 samples, 0.21%)</title><rect x="380.0" y="1443.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.0" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="380.0" y="1427.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="383.0" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="380.0" y="1411.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="383.0" y="1422.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="380.0" y="1395.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="383.0" y="1406.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="380.0" y="1379.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="383.0" y="1390.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="380.0" y="1363.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="383.0" y="1374.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="380.0" y="1347.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="383.0" y="1358.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;286838ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 286838ull&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.10%)</title><rect x="380.0" y="1331.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="383.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="381.2" y="1427.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.10%)</title><rect x="381.2" y="1411.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="384.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/math/FormattedFloatingDecimal.&lt;init&gt; (6 samples, 0.62%)</title><rect x="382.4" y="1459.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.4" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/math/FormattedFloatingDecimal.fillDecimal (2 samples, 0.21%)</title><rect x="384.9" y="1443.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.9" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/math/FormattedFloatingDecimal.getBuffer (2 samples, 0.21%)</title><rect x="387.4" y="1443.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="390.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.21%)</title><rect x="387.4" y="1427.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/Thread.currentThread (1 samples, 0.10%)</title><rect x="387.4" y="1411.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.10%)</title><rect x="388.6" y="1411.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.6" y="1422.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printInteger (4 samples, 0.42%)</title><rect x="389.8" y="1523.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="392.8" y="1534.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (4 samples, 0.42%)</title><rect x="389.8" y="1507.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="392.8" y="1518.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (3 samples, 0.31%)</title><rect x="391.0" y="1491.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.0" y="1502.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.10%)</title><rect x="391.0" y="1475.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.10%)</title><rect x="391.0" y="1459.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (1 samples, 0.10%)</title><rect x="391.0" y="1443.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="394.0" y="1454.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.appendJustified (1 samples, 0.10%)</title><rect x="392.3" y="1475.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="392.3" y="1459.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.3" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="392.3" y="1443.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.3" y="1454.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="392.3" y="1427.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.3" y="1438.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="392.3" y="1411.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.3" y="1422.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.localizedMagnitude (1 samples, 0.10%)</title><rect x="393.5" y="1475.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="396.5" y="1486.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (29 samples, 3.02%)</title><rect x="394.7" y="1539.0" width="35.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.7" y="1550.0">jav..</text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.10%)</title><rect x="394.7" y="1523.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.7" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.10%)</title><rect x="394.7" y="1507.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="397.7" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.10%)</title><rect x="394.7" y="1491.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.7" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.10%)</title><rect x="394.7" y="1475.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.7" y="1486.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="394.7" y="1459.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.7" y="1470.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.10%)</title><rect x="394.7" y="1443.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="397.7" y="1454.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.10%)</title><rect x="394.7" y="1427.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.7" y="1438.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWordImpl**, unsigned long) (1 samples, 0.10%)</title><rect x="394.7" y="1411.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="397.7" y="1422.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (10 samples, 1.04%)</title><rect x="396.0" y="1523.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="399.0" y="1534.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xba000000)@0x0000000110020380 (1 samples, 0.10%)</title><rect x="396.0" y="1507.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="399.0" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="397.2" y="1507.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="400.2" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="397.2" y="1491.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="400.2" y="1502.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="397.2" y="1475.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="400.2" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="397.2" y="1459.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="400.2" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(methodHandle const&amp;, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="397.2" y="1443.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="400.2" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, methodHandle const&amp;), methodHandle const&amp;, CompLevel, bool) (1 samples, 0.10%)</title><rect x="397.2" y="1427.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="400.2" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::loop_predicate(int, int, CompLevel, methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="397.2" y="1411.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="400.2" y="1422.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.checkFloat (2 samples, 0.21%)</title><rect x="398.4" y="1507.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="401.4" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="398.4" y="1491.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="401.4" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="398.4" y="1475.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="401.4" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="398.4" y="1459.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="401.4" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="398.4" y="1443.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="401.4" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(methodHandle const&amp;, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="398.4" y="1427.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="401.4" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, methodHandle const&amp;), methodHandle const&amp;, CompLevel, bool) (1 samples, 0.10%)</title><rect x="398.4" y="1411.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="401.4" y="1422.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.checkNumeric (1 samples, 0.10%)</title><rect x="399.6" y="1491.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="402.6" y="1502.0"></text>
</g>
<g>
<title>java/util/Formatter$Flags.contains (1 samples, 0.10%)</title><rect x="399.6" y="1475.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.6" y="1486.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.conversion (5 samples, 0.52%)</title><rect x="400.9" y="1507.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.9" y="1518.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (1 samples, 0.10%)</title><rect x="403.3" y="1491.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.3" y="1502.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (1 samples, 0.10%)</title><rect x="403.3" y="1475.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="1486.0"></text>
</g>
<g>
<title>java/util/Formatter$Conversion.isValid (2 samples, 0.21%)</title><rect x="404.6" y="1491.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="407.6" y="1502.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.end (1 samples, 0.10%)</title><rect x="407.0" y="1507.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.0" y="1518.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.groupCount (1 samples, 0.10%)</title><rect x="407.0" y="1491.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.0" y="1502.0"></text>
</g>
<g>
<title>java/util/Formatter.checkText (1 samples, 0.10%)</title><rect x="408.3" y="1523.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.3" y="1534.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (16 samples, 1.67%)</title><rect x="409.5" y="1523.0" width="19.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.5" y="1534.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (16 samples, 1.67%)</title><rect x="409.5" y="1507.0" width="19.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.5" y="1518.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (14 samples, 1.46%)</title><rect x="411.9" y="1491.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.9" y="1502.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (14 samples, 1.46%)</title><rect x="411.9" y="1475.0" width="17.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="414.9" y="1486.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (14 samples, 1.46%)</title><rect x="411.9" y="1459.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.9" y="1470.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (11 samples, 1.15%)</title><rect x="413.2" y="1443.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.2" y="1454.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (10 samples, 1.04%)</title><rect x="414.4" y="1427.0" width="12.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.4" y="1438.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (10 samples, 1.04%)</title><rect x="414.4" y="1411.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.4" y="1422.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (10 samples, 1.04%)</title><rect x="414.4" y="1395.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.4" y="1406.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (10 samples, 1.04%)</title><rect x="414.4" y="1379.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.4" y="1390.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (10 samples, 1.04%)</title><rect x="414.4" y="1363.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.4" y="1374.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.52%)</title><rect x="414.4" y="1347.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.4" y="1358.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (5 samples, 0.52%)</title><rect x="414.4" y="1331.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.4" y="1342.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.52%)</title><rect x="414.4" y="1315.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.4" y="1326.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (5 samples, 0.52%)</title><rect x="414.4" y="1299.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="417.4" y="1310.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbab0000)@0x0000000110024580 (1 samples, 0.10%)</title><rect x="414.4" y="1283.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.4" y="1294.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$23.0x0000000800b61800.is (2 samples, 0.21%)</title><rect x="415.6" y="1283.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.6" y="1294.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate.lambda$union$2 (2 samples, 0.21%)</title><rect x="415.6" y="1267.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.6" y="1278.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xba000000)@0x0000000110020380 (1 samples, 0.10%)</title><rect x="415.6" y="1251.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.6" y="1262.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate$$Lambda$23.0x0000000800b61800.is (1 samples, 0.10%)</title><rect x="416.9" y="1251.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.9" y="1262.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPredicate.lambda$union$2 (1 samples, 0.10%)</title><rect x="416.9" y="1235.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.9" y="1246.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$$Lambda$22.0x0000000800b61578.is (1 samples, 0.10%)</title><rect x="416.9" y="1219.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.9" y="1230.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.lambda$Range$11 (1 samples, 0.10%)</title><rect x="416.9" y="1203.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="419.9" y="1214.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.inRange (1 samples, 0.10%)</title><rect x="416.9" y="1187.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.9" y="1198.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (2 samples, 0.21%)</title><rect x="418.1" y="1283.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.1" y="1294.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (5 samples, 0.52%)</title><rect x="420.5" y="1347.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.5" y="1358.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (5 samples, 0.52%)</title><rect x="420.5" y="1331.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="423.5" y="1342.0"></text>
</g>
<g>
<title>java/util/regex/CharPredicates$$Lambda$20.0x0000000800b5a680.is (3 samples, 0.31%)</title><rect x="423.0" y="1315.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="426.0" y="1326.0"></text>
</g>
<g>
<title>java/util/regex/CharPredicates.lambda$ASCII_DIGIT$18 (2 samples, 0.21%)</title><rect x="424.2" y="1299.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="427.2" y="1310.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="424.2" y="1283.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="427.2" y="1294.0"></text>
</g>
<g>
<title>java/util/regex/ASCII.isDigit (1 samples, 0.10%)</title><rect x="425.5" y="1283.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.5" y="1294.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (2 samples, 0.21%)</title><rect x="426.7" y="1443.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.7" y="1454.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (1 samples, 0.10%)</title><rect x="427.9" y="1427.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.9" y="1438.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.start (1 samples, 0.10%)</title><rect x="429.1" y="1523.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.1" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.inliningContext (1 samples, 0.10%)</title><rect x="430.4" y="1619.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="433.4" y="1630.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xba000000)@0x0000000110020380 (1 samples, 0.10%)</title><rect x="430.4" y="1603.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.4" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.processNextInvoke (94 samples, 9.79%)</title><rect x="431.6" y="1619.0" width="115.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.6" y="1630.0">org/graalvm/co..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.populateInlinableElements (85 samples, 8.85%)</title><rect x="431.6" y="1603.0" width="104.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.6" y="1614.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/Inlineable.getInlineableElement (85 samples, 8.85%)</title><rect x="431.6" y="1587.0" width="104.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="434.6" y="1598.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.&lt;init&gt; (85 samples, 8.85%)</title><rect x="431.6" y="1571.0" width="104.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.6" y="1582.0">org/graalvm/..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSubstitution (1 samples, 0.10%)</title><rect x="432.8" y="1555.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSubstitution (1 samples, 0.10%)</title><rect x="432.8" y="1539.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="435.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.10%)</title><rect x="432.8" y="1523.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.10%)</title><rect x="432.8" y="1507.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.8" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.10%)</title><rect x="432.8" y="1491.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.8" y="1502.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getAnnotation (1 samples, 0.10%)</title><rect x="432.8" y="1475.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.8" y="1486.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJDKReflection.getMethodAnnotation (1 samples, 0.10%)</title><rect x="432.8" y="1459.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.getAnnotation (1 samples, 0.10%)</title><rect x="432.8" y="1443.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="435.8" y="1454.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.getAnnotation (1 samples, 0.10%)</title><rect x="432.8" y="1427.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.8" y="1438.0"></text>
</g>
<g>
<title>java/lang/reflect/Executable.declaredAnnotations (1 samples, 0.10%)</title><rect x="432.8" y="1411.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.8" y="1422.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.10%)</title><rect x="432.8" y="1395.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.8" y="1406.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.10%)</title><rect x="432.8" y="1379.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.8" y="1390.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.10%)</title><rect x="432.8" y="1363.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.8" y="1374.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.getInstance (1 samples, 0.10%)</title><rect x="432.8" y="1347.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.8" y="1358.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationType.&lt;init&gt; (1 samples, 0.10%)</title><rect x="432.8" y="1331.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.8" y="1342.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSelectAnnotations (1 samples, 0.10%)</title><rect x="432.8" y="1315.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.8" y="1326.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.10%)</title><rect x="432.8" y="1299.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.8" y="1310.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.10%)</title><rect x="432.8" y="1283.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.8" y="1294.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.annotationForMap (1 samples, 0.10%)</title><rect x="432.8" y="1267.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.8" y="1278.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.10%)</title><rect x="432.8" y="1251.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.8" y="1262.0"></text>
</g>
<g>
<title>java/security/AccessController.executePrivileged (1 samples, 0.10%)</title><rect x="432.8" y="1235.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.8" y="1246.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.10%)</title><rect x="432.8" y="1219.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.8" y="1230.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$1.run (1 samples, 0.10%)</title><rect x="432.8" y="1203.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.10%)</title><rect x="432.8" y="1187.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Proxy.newProxyInstance (1 samples, 0.10%)</title><rect x="432.8" y="1171.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="435.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.10%)</title><rect x="432.8" y="1155.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstanceWithCaller (1 samples, 0.10%)</title><rect x="432.8" y="1139.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.10%)</title><rect x="432.8" y="1123.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.10%)</title><rect x="432.8" y="1107.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generateConstructor (1 samples, 0.10%)</title><rect x="432.8" y="1091.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/reflect/MethodAccessorGenerator.generate (1 samples, 0.10%)</title><rect x="432.8" y="1075.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="435.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ClassFileAssembler.emitConstantPoolUTF8 (1 samples, 0.10%)</title><rect x="432.8" y="1059.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.parseBytecodes (75 samples, 7.81%)</title><rect x="434.1" y="1555.0" width="92.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.1" y="1566.0">org/graalvm..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph$Builder.build (3 samples, 0.31%)</title><rect x="434.1" y="1539.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="437.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.&lt;init&gt; (3 samples, 0.31%)</title><rect x="434.1" y="1523.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="437.1" y="1534.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.10%)</title><rect x="435.3" y="1507.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getAndAddLong (1 samples, 0.10%)</title><rect x="435.3" y="1491.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.3" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.weakCompareAndSetLong (1 samples, 0.10%)</title><rect x="435.3" y="1475.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="438.3" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.compareAndSetLong (1 samples, 0.10%)</title><rect x="435.3" y="1459.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.3" y="1470.0"></text>
</g>
<g>
<title>Unsafe_CompareAndSetLong(JNIEnv_*, _jobject*, _jobject*, long, long, long) (1 samples, 0.10%)</title><rect x="435.3" y="1443.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="438.3" y="1454.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.10%)</title><rect x="435.3" y="1427.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="438.3" y="1438.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested(JavaThread*) (1 samples, 0.10%)</title><rect x="435.3" y="1411.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="438.3" y="1422.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.10%)</title><rect x="435.3" y="1395.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="438.3" y="1406.0"></text>
</g>
<g>
<title>void volatile* Atomic::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.10%)</title><rect x="435.3" y="1379.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="438.3" y="1390.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, Atomic::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.10%)</title><rect x="435.3" y="1363.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="438.3" y="1374.0"></text>
</g>
<g>
<title>void volatile* Atomic::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;::operator()&lt;void volatile*&gt;(void volatile* const volatile*) const (1 samples, 0.10%)</title><rect x="435.3" y="1347.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="438.3" y="1358.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::~ScopedFence() (1 samples, 0.10%)</title><rect x="435.3" y="1331.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="438.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.add (1 samples, 0.10%)</title><rect x="436.5" y="1507.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="436.5" y="1491.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="436.5" y="1475.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.5" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.registerAtSuccessorsAsPredecessor (1 samples, 0.10%)</title><rect x="436.5" y="1459.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="439.5" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (72 samples, 7.50%)</title><rect x="437.8" y="1539.0" width="88.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.8" y="1550.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (72 samples, 7.50%)</title><rect x="437.8" y="1523.0" width="88.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.8" y="1534.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase$ExcludePhaseFilter.exclude (1 samples, 0.10%)</title><rect x="437.8" y="1507.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="440.8" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (63 samples, 6.56%)</title><rect x="439.0" y="1507.0" width="77.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="442.0" y="1518.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (63 samples, 6.56%)</title><rect x="439.0" y="1491.0" width="77.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="442.0" y="1502.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (63 samples, 6.56%)</title><rect x="439.0" y="1475.0" width="77.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="442.0" y="1486.0">org/graal..</text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.enterCompilerPhase (2 samples, 0.21%)</title><rect x="439.0" y="1459.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="442.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.enterCompilerPhase (2 samples, 0.21%)</title><rect x="439.0" y="1443.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="442.0" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/CompilationListenerProfiler.enterPhase (2 samples, 0.21%)</title><rect x="439.0" y="1427.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="442.0" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/JFRCompilerProfiler.getTicks (2 samples, 0.21%)</title><rect x="439.0" y="1411.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="442.0" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/JFR$Ticks.now (2 samples, 0.21%)</title><rect x="439.0" y="1395.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.0" y="1406.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.ticksNow (2 samples, 0.21%)</title><rect x="439.0" y="1379.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="442.0" y="1390.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.10%)</title><rect x="439.0" y="1363.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="442.0" y="1374.0"></text>
</g>
<g>
<title>c2v_ticksNow(JNIEnv_*, _jobject*) (1 samples, 0.10%)</title><rect x="440.2" y="1363.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="443.2" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (61 samples, 6.35%)</title><rect x="441.4" y="1459.0" width="75.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="444.4" y="1470.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (61 samples, 6.35%)</title><rect x="441.4" y="1443.0" width="75.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="444.4" y="1454.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (61 samples, 6.35%)</title><rect x="441.4" y="1427.0" width="75.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="444.4" y="1438.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (59 samples, 6.15%)</title><rect x="442.7" y="1411.0" width="72.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.7" y="1422.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (54 samples, 5.62%)</title><rect x="445.1" y="1395.0" width="66.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="448.1" y="1406.0">org/gra..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.create (2 samples, 0.21%)</title><rect x="445.1" y="1379.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="448.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.build (2 samples, 0.21%)</title><rect x="445.1" y="1363.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="448.1" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.iterateOverBytecodes (1 samples, 0.10%)</title><rect x="446.4" y="1347.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="449.4" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BytecodeStream.next (1 samples, 0.10%)</title><rect x="446.4" y="1331.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="449.4" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BytecodeStream.setBCI (1 samples, 0.10%)</title><rect x="446.4" y="1315.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="449.4" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createFrameState (3 samples, 0.31%)</title><rect x="447.6" y="1379.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="450.6" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.create (3 samples, 0.31%)</title><rect x="447.6" y="1363.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="450.6" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.create (3 samples, 0.31%)</title><rect x="447.6" y="1347.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.6" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.&lt;init&gt; (3 samples, 0.31%)</title><rect x="447.6" y="1331.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.6" y="1342.0"></text>
</g>
<g>
<title>java/util/Collections.emptyList (1 samples, 0.10%)</title><rect x="447.6" y="1315.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.6" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.&lt;init&gt; (2 samples, 0.21%)</title><rect x="448.8" y="1315.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.8" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/ResolvedJavaMethodBytecode.getCodeSize (1 samples, 0.10%)</title><rect x="450.0" y="1299.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="453.0" y="1310.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getCodeSize (1 samples, 0.10%)</title><rect x="450.0" y="1283.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.0" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.openNodeContext (1 samples, 0.10%)</title><rect x="451.3" y="1379.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.3" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.openNodeContext (1 samples, 0.10%)</title><rect x="451.3" y="1363.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.3" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.createBytecodePosition (1 samples, 0.10%)</title><rect x="451.3" y="1347.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.3" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.create (1 samples, 0.10%)</title><rect x="451.3" y="1331.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeSourcePosition.&lt;init&gt; (1 samples, 0.10%)</title><rect x="451.3" y="1315.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="454.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (47 samples, 4.90%)</title><rect x="452.5" y="1379.0" width="57.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="455.5" y="1390.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (46 samples, 4.79%)</title><rect x="453.7" y="1363.0" width="56.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="456.7" y="1374.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.openNodeContext (2 samples, 0.21%)</title><rect x="455.0" y="1347.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.0" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.openNodeContext (2 samples, 0.21%)</title><rect x="455.0" y="1331.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="458.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.createBytecodePosition (2 samples, 0.21%)</title><rect x="455.0" y="1315.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="458.0" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.create (2 samples, 0.21%)</title><rect x="455.0" y="1299.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.0" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeSourcePosition.&lt;init&gt; (1 samples, 0.10%)</title><rect x="456.2" y="1283.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeSourcePosition.&lt;init&gt; (1 samples, 0.10%)</title><rect x="456.2" y="1267.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="459.2" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeSourcePosition.&lt;init&gt; (1 samples, 0.10%)</title><rect x="456.2" y="1251.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="459.2" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/BytecodePosition.&lt;init&gt; (1 samples, 0.10%)</title><rect x="456.2" y="1235.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.2" y="1246.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getCodeSize (1 samples, 0.10%)</title><rect x="456.2" y="1219.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.2" y="1230.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotVMConfig.config (1 samples, 0.10%)</title><rect x="456.2" y="1203.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.2" y="1214.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.getConfig (1 samples, 0.10%)</title><rect x="456.2" y="1187.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="459.2" y="1198.0"></text>
</g>
<g>
<title>SafepointBlob (1 samples, 0.10%)</title><rect x="456.2" y="1171.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="459.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (43 samples, 4.48%)</title><rect x="457.4" y="1347.0" width="52.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="460.4" y="1358.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendConstant (1 samples, 0.10%)</title><rect x="458.6" y="1331.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.6" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="458.6" y="1315.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.6" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.createPrimitive (1 samples, 0.10%)</title><rect x="458.6" y="1299.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.6" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genArithmeticOp (1 samples, 0.10%)</title><rect x="459.9" y="1331.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIntegerAdd (1 samples, 0.10%)</title><rect x="459.9" y="1315.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AddNode.create (1 samples, 0.10%)</title><rect x="459.9" y="1299.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AddNode.canonical (1 samples, 0.10%)</title><rect x="459.9" y="1283.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AddNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="459.9" y="1267.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AddNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="459.9" y="1251.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryArithmeticNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="459.9" y="1235.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.9" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="459.9" y="1219.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.9" y="1230.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbb00000)@0x000000011001ee80 (1 samples, 0.10%)</title><rect x="459.9" y="1203.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.9" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.10%)</title><rect x="461.1" y="1331.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.10%)</title><rect x="461.1" y="1315.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (1 samples, 0.10%)</title><rect x="461.1" y="1299.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="464.1" y="1310.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupField (1 samples, 0.10%)</title><rect x="461.1" y="1283.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.1" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.getHolder (1 samples, 0.10%)</title><rect x="461.1" y="1267.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.1" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getResolvedJavaType (1 samples, 0.10%)</title><rect x="461.1" y="1251.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.1" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getResolvedJavaType0 (1 samples, 0.10%)</title><rect x="461.1" y="1235.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="464.1" y="1246.0"></text>
</g>
<g>
<title>c2v_getResolvedJavaType0(JNIEnv_*, _jobject*, _jobject*, long, unsigned char) (1 samples, 0.10%)</title><rect x="461.1" y="1219.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="464.1" y="1230.0"></text>
</g>
<g>
<title>JVMCIEnv::get_jvmci_type(JVMCIKlassHandle const&amp;, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="461.1" y="1203.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="464.1" y="1214.0"></text>
</g>
<g>
<title>JVMCIEnv::create_string(char const*, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="461.1" y="1187.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="464.1" y="1198.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) (1 samples, 0.10%)</title><rect x="461.1" y="1171.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="464.1" y="1182.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.10%)</title><rect x="461.1" y="1155.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="464.1" y="1166.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.10%)</title><rect x="461.1" y="1139.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="464.1" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.10%)</title><rect x="461.1" y="1123.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="464.1" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::finish(HeapWordImpl**) const (1 samples, 0.10%)</title><rect x="461.1" y="1107.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="464.1" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (3 samples, 0.31%)</title><rect x="462.3" y="1331.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.10%)</title><rect x="462.3" y="1315.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleLoadStaticField (1 samples, 0.10%)</title><rect x="462.3" y="1299.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="465.3" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryReadField (1 samples, 0.10%)</title><rect x="462.3" y="1283.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.3" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.tryConstantFold (1 samples, 0.10%)</title><rect x="462.3" y="1267.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.3" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (2 samples, 0.21%)</title><rect x="463.6" y="1315.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.6" y="1326.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupField (2 samples, 0.21%)</title><rect x="463.6" y="1299.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.6" y="1310.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupType (1 samples, 0.10%)</title><rect x="464.8" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.8" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.getJavaType (1 samples, 0.10%)</title><rect x="464.8" y="1267.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.8" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGoto (1 samples, 0.10%)</title><rect x="466.0" y="1331.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="469.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfNull (2 samples, 0.21%)</title><rect x="467.3" y="1331.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendConstant (1 samples, 0.10%)</title><rect x="467.3" y="1315.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.forConstant (1 samples, 0.10%)</title><rect x="467.3" y="1299.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.3" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ConstantNode.unique (1 samples, 0.10%)</title><rect x="467.3" y="1283.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.3" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.10%)</title><rect x="467.3" y="1267.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="470.3" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="467.3" y="1251.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.3" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.10%)</title><rect x="467.3" y="1235.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.3" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findNodeInCache (1 samples, 0.10%)</title><rect x="467.3" y="1219.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.get (1 samples, 0.10%)</title><rect x="467.3" y="1203.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.10%)</title><rect x="467.3" y="1187.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findHash (1 samples, 0.10%)</title><rect x="467.3" y="1171.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="470.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.10%)</title><rect x="467.3" y="1155.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$1.hashCode (1 samples, 0.10%)</title><rect x="467.3" y="1139.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.valueNumber (1 samples, 0.10%)</title><rect x="467.3" y="1123.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/Fields.getCount (1 samples, 0.10%)</title><rect x="467.3" y="1107.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="470.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.10%)</title><rect x="468.5" y="1315.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.5" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.10%)</title><rect x="468.5" y="1299.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.5" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfSame (3 samples, 0.31%)</title><rect x="469.7" y="1331.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (3 samples, 0.31%)</title><rect x="469.7" y="1315.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createLogicNode (1 samples, 0.10%)</title><rect x="469.7" y="1299.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIntegerLessThan (1 samples, 0.10%)</title><rect x="469.7" y="1283.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.7" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.create (1 samples, 0.10%)</title><rect x="469.7" y="1267.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.7" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.create (1 samples, 0.10%)</title><rect x="469.7" y="1251.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.7" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.create (1 samples, 0.10%)</title><rect x="469.7" y="1235.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.7" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.findSynonym (1 samples, 0.10%)</title><rect x="469.7" y="1219.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="472.7" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.findSynonym (1 samples, 0.10%)</title><rect x="469.7" y="1203.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.7" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonicalizeXLowerXPlusA (1 samples, 0.10%)</title><rect x="469.7" y="1187.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="472.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.10%)</title><rect x="470.9" y="1299.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.append (1 samples, 0.10%)</title><rect x="470.9" y="1283.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.updateLastInstruction (1 samples, 0.10%)</title><rect x="470.9" y="1267.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.getProfileProbability (1 samples, 0.10%)</title><rect x="472.2" y="1299.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.2" y="1310.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.getBranchTakenProbability (1 samples, 0.10%)</title><rect x="472.2" y="1283.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.2" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.findBCI (1 samples, 0.10%)</title><rect x="472.2" y="1267.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.2" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMethodData.normalDataSize (1 samples, 0.10%)</title><rect x="472.2" y="1251.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="475.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfZero (4 samples, 0.42%)</title><rect x="473.4" y="1331.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.4" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (4 samples, 0.42%)</title><rect x="473.4" y="1315.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.4" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (3 samples, 0.31%)</title><rect x="473.4" y="1299.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.4" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendGoto (2 samples, 0.21%)</title><rect x="473.4" y="1283.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="476.4" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createTarget (2 samples, 0.21%)</title><rect x="473.4" y="1267.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.4" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.add (1 samples, 0.10%)</title><rect x="473.4" y="1251.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.4" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="473.4" y="1235.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.4" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="473.4" y="1219.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="473.4" y="1203.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.grow (1 samples, 0.10%)</title><rect x="473.4" y="1187.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.checkLoopExit (1 samples, 0.10%)</title><rect x="474.6" y="1251.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.6" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.create (1 samples, 0.10%)</title><rect x="474.6" y="1235.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.create (1 samples, 0.10%)</title><rect x="474.6" y="1219.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.add (1 samples, 0.10%)</title><rect x="474.6" y="1203.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="474.6" y="1187.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="477.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="474.6" y="1171.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="474.6" y="1155.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.grow (1 samples, 0.10%)</title><rect x="474.6" y="1139.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.isPotentialCountedLoopExit (1 samples, 0.10%)</title><rect x="475.9" y="1283.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="478.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.getProfileProbability (1 samples, 0.10%)</title><rect x="477.1" y="1299.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.1" y="1310.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.getBranchTakenProbability (1 samples, 0.10%)</title><rect x="477.1" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="480.1" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMethodData$BranchData.getBranchTakenProbability (1 samples, 0.10%)</title><rect x="477.1" y="1267.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="480.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeInterface (2 samples, 0.21%)</title><rect x="478.3" y="1331.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeInterface (2 samples, 0.21%)</title><rect x="478.3" y="1315.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (2 samples, 0.21%)</title><rect x="478.3" y="1299.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="481.3" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (1 samples, 0.10%)</title><rect x="479.5" y="1283.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.10%)</title><rect x="479.5" y="1267.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.5" y="1278.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.10%)</title><rect x="479.5" y="1251.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.5" y="1262.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.10%)</title><rect x="479.5" y="1235.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="482.5" y="1246.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.10%)</title><rect x="479.5" y="1219.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.5" y="1230.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.10%)</title><rect x="479.5" y="1203.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="482.5" y="1214.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.10%)</title><rect x="479.5" y="1187.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.5" y="1198.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.10%)</title><rect x="479.5" y="1171.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.5" y="1182.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.10%)</title><rect x="479.5" y="1155.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.5" y="1166.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.10%)</title><rect x="479.5" y="1139.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.5" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.filter (1 samples, 0.10%)</title><rect x="479.5" y="1123.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.5" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$9.&lt;init&gt; (1 samples, 0.10%)</title><rect x="479.5" y="1107.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="482.5" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline$StatelessOp.&lt;init&gt; (1 samples, 0.10%)</title><rect x="479.5" y="1091.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.5" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="479.5" y="1075.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="482.5" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="479.5" y="1059.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="482.5" y="1070.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="479.5" y="1043.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="482.5" y="1054.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="479.5" y="1027.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="482.5" y="1038.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="479.5" y="1011.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="482.5" y="1022.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="479.5" y="995.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="482.5" y="1006.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="479.5" y="979.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="482.5" y="990.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="479.5" y="963.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="482.5" y="974.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="479.5" y="947.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="482.5" y="958.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="479.5" y="931.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="482.5" y="942.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="479.5" y="915.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="482.5" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (6 samples, 0.62%)</title><rect x="480.8" y="1331.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.8" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (6 samples, 0.62%)</title><rect x="480.8" y="1315.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.8" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (6 samples, 0.62%)</title><rect x="480.8" y="1299.0" width="7.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.8" y="1310.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x000000011001e880 (1 samples, 0.10%)</title><rect x="480.8" y="1283.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.8" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.getActionForInvokeExceptionEdge (1 samples, 0.10%)</title><rect x="482.0" y="1283.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.0" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/OptimisticOptimizations.useExceptionProbability (1 samples, 0.10%)</title><rect x="482.0" y="1267.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.0" y="1278.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.10%)</title><rect x="482.0" y="1251.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (4 samples, 0.42%)</title><rect x="483.2" y="1283.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.31%)</title><rect x="483.2" y="1267.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.2" y="1278.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.21%)</title><rect x="483.2" y="1251.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.2" y="1262.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.21%)</title><rect x="483.2" y="1235.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.2" y="1246.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (2 samples, 0.21%)</title><rect x="483.2" y="1219.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="486.2" y="1230.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.10%)</title><rect x="483.2" y="1203.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.2" y="1214.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.10%)</title><rect x="483.2" y="1187.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.2" y="1198.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.10%)</title><rect x="483.2" y="1171.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.2" y="1182.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.10%)</title><rect x="483.2" y="1155.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.2" y="1166.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.10%)</title><rect x="483.2" y="1139.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.2" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.10%)</title><rect x="483.2" y="1123.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="486.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.10%)</title><rect x="483.2" y="1107.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="486.2" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.10%)</title><rect x="483.2" y="1091.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.10%)</title><rect x="483.2" y="1075.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.10%)</title><rect x="483.2" y="1059.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="486.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.10%)</title><rect x="483.2" y="1043.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="486.2" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (1 samples, 0.10%)</title><rect x="483.2" y="1027.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.tryAdvance (1 samples, 0.10%)</title><rect x="483.2" y="1011.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.10%)</title><rect x="483.2" y="995.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.10%)</title><rect x="483.2" y="979.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="486.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.length (1 samples, 0.10%)</title><rect x="483.2" y="963.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.2" y="974.0"></text>
</g>
<g>
<title>java/util/Locale.equals (1 samples, 0.10%)</title><rect x="484.5" y="1203.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.5" y="1214.0"></text>
</g>
<g>
<title>sun/util/locale/BaseLocale.equals (1 samples, 0.10%)</title><rect x="484.5" y="1187.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.5" y="1198.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.10%)</title><rect x="485.7" y="1251.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="488.7" y="1262.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.10%)</title><rect x="485.7" y="1235.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.7" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.notifyInlining (1 samples, 0.10%)</title><rect x="486.9" y="1267.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/CompilationListenerProfiler.notifyInlining (1 samples, 0.10%)</title><rect x="486.9" y="1251.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (8 samples, 0.83%)</title><rect x="488.1" y="1331.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="491.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (7 samples, 0.73%)</title><rect x="488.1" y="1315.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="491.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (7 samples, 0.73%)</title><rect x="488.1" y="1299.0" width="8.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.1" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (7 samples, 0.73%)</title><rect x="488.1" y="1283.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.1" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.getActionForInvokeExceptionEdge (1 samples, 0.10%)</title><rect x="488.1" y="1267.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.maybeEmitExplicitNullCheck (1 samples, 0.10%)</title><rect x="489.4" y="1267.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.4" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.needsExplicitNullCheckException (1 samples, 0.10%)</title><rect x="489.4" y="1251.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.4" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.needsExplicitException (1 samples, 0.10%)</title><rect x="489.4" y="1235.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="492.4" y="1246.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.getExceptionSeen (1 samples, 0.10%)</title><rect x="489.4" y="1219.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.10%)</title><rect x="490.6" y="1267.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="493.6" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.lookupInvocation (1 samples, 0.10%)</title><rect x="490.6" y="1251.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.6" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.get (1 samples, 0.10%)</title><rect x="490.6" y="1235.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="493.6" y="1246.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJavaType.getName (1 samples, 0.10%)</title><rect x="490.6" y="1219.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="493.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.flushDeferrables (1 samples, 0.10%)</title><rect x="490.6" y="1203.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (1 samples, 0.10%)</title><rect x="491.8" y="1267.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="494.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.10%)</title><rect x="491.8" y="1251.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.8" y="1262.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.10%)</title><rect x="491.8" y="1235.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.8" y="1246.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.10%)</title><rect x="491.8" y="1219.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.8" y="1230.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.10%)</title><rect x="491.8" y="1203.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.8" y="1214.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.10%)</title><rect x="491.8" y="1187.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.8" y="1198.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.10%)</title><rect x="491.8" y="1171.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="494.8" y="1182.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.10%)</title><rect x="491.8" y="1155.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.8" y="1166.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.10%)</title><rect x="491.8" y="1139.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.8" y="1150.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.10%)</title><rect x="491.8" y="1123.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (1 samples, 0.10%)</title><rect x="491.8" y="1107.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.8" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.10%)</title><rect x="491.8" y="1091.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.8" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.10%)</title><rect x="491.8" y="1075.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.8" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.get (1 samples, 0.10%)</title><rect x="491.8" y="1059.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.8" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfInt.get (1 samples, 0.10%)</title><rect x="491.8" y="1043.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.8" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/MethodCallTargetNode.findSpecialCallTarget (3 samples, 0.31%)</title><rect x="493.1" y="1267.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/MethodCallTargetNode.devirtualizeCall (3 samples, 0.31%)</title><rect x="493.1" y="1251.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.1" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod (1 samples, 0.10%)</title><rect x="493.1" y="1235.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.1" y="1246.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod (1 samples, 0.10%)</title><rect x="493.1" y="1219.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.1" y="1230.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.findUniqueConcreteMethod (1 samples, 0.10%)</title><rect x="493.1" y="1203.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.1" y="1214.0"></text>
</g>
<g>
<title>c2v_findUniqueConcreteMethod(JNIEnv_*, _jobject*, _jobject*, _jobject*) (1 samples, 0.10%)</title><rect x="493.1" y="1187.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="496.1" y="1198.0"></text>
</g>
<g>
<title>Mutex::lock() (1 samples, 0.10%)</title><rect x="493.1" y="1171.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="496.1" y="1182.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="493.1" y="1155.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="496.1" y="1166.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="493.1" y="1139.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="496.1" y="1150.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="493.1" y="1123.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="496.1" y="1134.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaType.resolveConcreteMethod (1 samples, 0.10%)</title><rect x="494.3" y="1235.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.3" y="1246.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.resolveMethod (1 samples, 0.10%)</title><rect x="494.3" y="1219.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="497.3" y="1230.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.resolveMethod (1 samples, 0.10%)</title><rect x="494.3" y="1203.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="497.3" y="1214.0"></text>
</g>
<g>
<title>c2v_resolveMethod(JNIEnv_*, _jobject*, _jobject*, _jobject*, _jobject*) (1 samples, 0.10%)</title><rect x="494.3" y="1187.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="497.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.getType (1 samples, 0.10%)</title><rect x="495.5" y="1235.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="498.5" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethod (1 samples, 0.10%)</title><rect x="496.8" y="1315.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="499.8" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupMethodInPool (1 samples, 0.10%)</title><rect x="496.8" y="1299.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.8" y="1310.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupMethod (1 samples, 0.10%)</title><rect x="496.8" y="1283.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.8" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.lookupMethodInPool (1 samples, 0.10%)</title><rect x="496.8" y="1267.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.8" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.fromMetaspace (1 samples, 0.10%)</title><rect x="496.8" y="1251.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.8" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.createMethod (1 samples, 0.10%)</title><rect x="496.8" y="1235.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.8" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genLoadIndexed (2 samples, 0.21%)</title><rect x="498.0" y="1331.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.maybeEmitExplicitNullCheck (1 samples, 0.10%)</title><rect x="498.0" y="1315.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.0" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.needsExplicitNullCheckException (1 samples, 0.10%)</title><rect x="498.0" y="1299.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.0" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.needsExplicitException (1 samples, 0.10%)</title><rect x="498.0" y="1283.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.0" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.getExceptionSeen (1 samples, 0.10%)</title><rect x="498.0" y="1267.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.0" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotProfilingInfo.findBCI (1 samples, 0.10%)</title><rect x="498.0" y="1251.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.0" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMethodDataAccessor.getSize (1 samples, 0.10%)</title><rect x="498.0" y="1235.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="501.0" y="1246.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.methodDataProfileDataSize (1 samples, 0.10%)</title><rect x="498.0" y="1219.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.0" y="1230.0"></text>
</g>
<g>
<title>BranchData::cell_count() const (1 samples, 0.10%)</title><rect x="498.0" y="1203.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="501.0" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.refineComponentType (1 samples, 0.10%)</title><rect x="499.2" y="1315.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.2" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.getMetaAccess (1 samples, 0.10%)</title><rect x="499.2" y="1299.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.2" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/CoreProvidersDelegate.getMetaAccess (1 samples, 0.10%)</title><rect x="499.2" y="1283.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genPutField (2 samples, 0.21%)</title><rect x="500.4" y="1331.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="503.4" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genPutField (1 samples, 0.10%)</title><rect x="500.4" y="1315.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.4" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genPutField (1 samples, 0.10%)</title><rect x="500.4" y="1299.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.4" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genStoreField (1 samples, 0.10%)</title><rect x="500.4" y="1283.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.4" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/GraphBuilderContext.maskSubWordValue (1 samples, 0.10%)</title><rect x="500.4" y="1267.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="503.4" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (1 samples, 0.10%)</title><rect x="501.7" y="1315.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.7" y="1326.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupField (1 samples, 0.10%)</title><rect x="501.7" y="1299.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.7" y="1310.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.lookupType (1 samples, 0.10%)</title><rect x="501.7" y="1283.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.7" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.lookupTypeInternal (1 samples, 0.10%)</title><rect x="501.7" y="1267.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.7" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.lookupType (1 samples, 0.10%)</title><rect x="501.7" y="1251.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="504.7" y="1262.0"></text>
</g>
<g>
<title>c2v_lookupType(JNIEnv_*, _jobject*, _jstring*, _jclass*, unsigned char) (1 samples, 0.10%)</title><rect x="501.7" y="1235.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="504.7" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genThrow (1 samples, 0.10%)</title><rect x="502.9" y="1331.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.handleException (1 samples, 0.10%)</title><rect x="502.9" y="1315.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createHandleExceptionTarget (1 samples, 0.10%)</title><rect x="502.9" y="1299.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.10%)</title><rect x="502.9" y="1283.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.10%)</title><rect x="502.9" y="1267.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.10%)</title><rect x="502.9" y="1251.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.10%)</title><rect x="502.9" y="1235.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.10%)</title><rect x="502.9" y="1219.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="502.9" y="1203.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.10%)</title><rect x="502.9" y="1187.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.10%)</title><rect x="502.9" y="1171.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findConstructor (1 samples, 0.10%)</title><rect x="502.9" y="1155.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructor (1 samples, 0.10%)</title><rect x="502.9" y="1139.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectConstructorCommon (1 samples, 0.10%)</title><rect x="502.9" y="1123.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.10%)</title><rect x="502.9" y="1107.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="505.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makeAllocator (1 samples, 0.10%)</title><rect x="502.9" y="1091.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.10%)</title><rect x="502.9" y="1075.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.10%)</title><rect x="502.9" y="1059.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="505.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.10%)</title><rect x="502.9" y="1043.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.10%)</title><rect x="502.9" y="1027.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.10%)</title><rect x="502.9" y="1011.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.10%)</title><rect x="502.9" y="995.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="505.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.10%)</title><rect x="502.9" y="979.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.10%)</title><rect x="502.9" y="963.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.9" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.10%)</title><rect x="502.9" y="947.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.9" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArguments (1 samples, 0.10%)</title><rect x="502.9" y="931.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitPushArgument (1 samples, 0.10%)</title><rect x="502.9" y="915.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitImplicitConversion (1 samples, 0.10%)</title><rect x="502.9" y="899.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="505.9" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.loadLocalObject (5 samples, 0.52%)</title><rect x="504.1" y="1331.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="507.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (5 samples, 0.52%)</title><rect x="504.1" y="1315.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.10%)</title><rect x="504.1" y="1299.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="507.1" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.10%)</title><rect x="504.1" y="1283.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="507.1" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.append (1 samples, 0.10%)</title><rect x="504.1" y="1267.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addOrUniqueWithInputs (1 samples, 0.10%)</title><rect x="504.1" y="1251.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (4 samples, 0.42%)</title><rect x="505.4" y="1299.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.4" y="1310.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="505.4" y="1283.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="508.4" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupField (3 samples, 0.31%)</title><rect x="506.6" y="1283.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.6" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.compilerToVM (1 samples, 0.10%)</title><rect x="506.6" y="1267.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="509.6" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.getCompilerToVM (1 samples, 0.10%)</title><rect x="506.6" y="1251.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.6" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.getHolder (1 samples, 0.10%)</title><rect x="507.8" y="1267.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.8" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getResolvedJavaType (1 samples, 0.10%)</title><rect x="507.8" y="1251.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.8" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getResolvedJavaType0 (1 samples, 0.10%)</title><rect x="507.8" y="1235.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="510.8" y="1246.0"></text>
</g>
<g>
<title>c2v_getResolvedJavaType0(JNIEnv_*, _jobject*, _jobject*, long, unsigned char) (1 samples, 0.10%)</title><rect x="507.8" y="1219.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="510.8" y="1230.0"></text>
</g>
<g>
<title>JVMCIEnv::get_jvmci_type(JVMCIKlassHandle const&amp;, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="507.8" y="1203.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="510.8" y="1214.0"></text>
</g>
<g>
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.10%)</title><rect x="507.8" y="1187.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="510.8" y="1198.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.10%)</title><rect x="507.8" y="1171.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="510.8" y="1182.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_static_method(LinkInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="507.8" y="1155.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="510.8" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="507.8" y="1139.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="510.8" y="1150.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.lookupType (1 samples, 0.10%)</title><rect x="509.0" y="1267.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.0" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.lookupTypeInternal (1 samples, 0.10%)</title><rect x="509.0" y="1251.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="512.0" y="1262.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedPrimitiveType.forKind (1 samples, 0.10%)</title><rect x="509.0" y="1235.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.0" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.compute (1 samples, 0.10%)</title><rect x="510.3" y="1379.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="513.3" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.computeLiveness (1 samples, 0.10%)</title><rect x="510.3" y="1363.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="513.3" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.computeLocalLiveness (1 samples, 0.10%)</title><rect x="510.3" y="1347.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.3" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BytecodeStream.currentBCI (1 samples, 0.10%)</title><rect x="510.3" y="1331.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.3" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/BytecodeStream.setBCI (1 samples, 0.10%)</title><rect x="510.3" y="1315.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.3" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.cleanupFinalGraph (2 samples, 0.21%)</title><rect x="511.5" y="1395.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="514.5" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.getNodes (1 samples, 0.10%)</title><rect x="511.5" y="1379.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.5" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$4.&lt;init&gt; (1 samples, 0.10%)</title><rect x="511.5" y="1363.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.5" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.next (1 samples, 0.10%)</title><rect x="512.7" y="1379.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.next (1 samples, 0.10%)</title><rect x="512.7" y="1363.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.initializeForMethodStart (1 samples, 0.10%)</title><rect x="514.0" y="1395.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.0" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forDeclaredType (1 samples, 0.10%)</title><rect x="514.0" y="1379.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.0" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.createTrusted (1 samples, 0.10%)</title><rect x="514.0" y="1363.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.0" y="1374.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype (1 samples, 0.10%)</title><rect x="514.0" y="1347.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="517.0" y="1358.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getSingleImplementor (1 samples, 0.10%)</title><rect x="514.0" y="1331.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="517.0" y="1342.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getImplementor (1 samples, 0.10%)</title><rect x="514.0" y="1315.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.0" y="1326.0"></text>
</g>
<g>
<title>c2v_getImplementor(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.10%)</title><rect x="514.0" y="1299.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="517.0" y="1310.0"></text>
</g>
<g>
<title>JVMCIEnv::get_jvmci_type(JVMCIKlassHandle const&amp;, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="514.0" y="1283.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="517.0" y="1294.0"></text>
</g>
<g>
<title>JVMCIEnv::create_string(char const*, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="514.0" y="1267.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="517.0" y="1278.0"></text>
</g>
<g>
<title>java_lang_String::create_from_str(char const*, Thread*) (1 samples, 0.10%)</title><rect x="514.0" y="1251.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="517.0" y="1262.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.10%)</title><rect x="514.0" y="1235.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="517.0" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.10%)</title><rect x="514.0" y="1219.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="517.0" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.createBytecodeParser (1 samples, 0.10%)</title><rect x="515.2" y="1411.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.&lt;init&gt; (1 samples, 0.10%)</title><rect x="515.2" y="1395.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.2" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/bytecode/ResolvedJavaMethodBytecode.getProfilingInfo (1 samples, 0.10%)</title><rect x="515.2" y="1379.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="518.2" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (8 samples, 0.83%)</title><rect x="516.4" y="1507.0" width="9.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="519.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (8 samples, 0.83%)</title><rect x="516.4" y="1491.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.4" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (8 samples, 0.83%)</title><rect x="516.4" y="1475.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.4" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (8 samples, 0.83%)</title><rect x="516.4" y="1459.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.4" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (8 samples, 0.83%)</title><rect x="516.4" y="1443.0" width="9.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (8 samples, 0.83%)</title><rect x="516.4" y="1427.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="519.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.withNodeSourcePosition (1 samples, 0.10%)</title><rect x="516.4" y="1411.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.withNodeSourcePosition (1 samples, 0.10%)</title><rect x="516.4" y="1395.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.4" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.withNodeSourcePosition (1 samples, 0.10%)</title><rect x="516.4" y="1379.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="519.4" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeSourcePositionScope.&lt;init&gt; (1 samples, 0.10%)</title><rect x="516.4" y="1363.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.4" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (2 samples, 0.21%)</title><rect x="517.6" y="1411.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.6" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode.canonical (1 samples, 0.10%)</title><rect x="517.6" y="1395.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="520.6" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode.canonical (1 samples, 0.10%)</title><rect x="517.6" y="1379.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.6" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode$IntegerEqualsOp.canonical (1 samples, 0.10%)</title><rect x="517.6" y="1363.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.6" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/SubNode.canonical (1 samples, 0.10%)</title><rect x="518.9" y="1395.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.9" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/SubNode.canonical (1 samples, 0.10%)</title><rect x="518.9" y="1379.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.9" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryArithmeticNode.canonical (1 samples, 0.10%)</title><rect x="518.9" y="1363.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.9" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValueNode.stamp (1 samples, 0.10%)</title><rect x="518.9" y="1347.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryArithmeticNode.getOp (1 samples, 0.10%)</title><rect x="518.9" y="1331.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="521.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Unary.canonical (2 samples, 0.21%)</title><rect x="520.1" y="1411.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (2 samples, 0.21%)</title><rect x="520.1" y="1395.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="523.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (2 samples, 0.21%)</title><rect x="520.1" y="1379.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="521.3" y="1363.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="524.3" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.asPhi (1 samples, 0.10%)</title><rect x="521.3" y="1347.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.3" y="1358.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaField.isFinal (1 samples, 0.10%)</title><rect x="521.3" y="1331.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="524.3" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="521.3" y="1315.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="524.3" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="521.3" y="1299.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="524.3" y="1310.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="521.3" y="1283.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="524.3" y="1294.0"></text>
</g>
<g>
<title>LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.10%)</title><rect x="521.3" y="1267.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="524.3" y="1278.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="521.3" y="1251.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="524.3" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/MethodCallTargetNode.simplify (3 samples, 0.31%)</title><rect x="522.6" y="1411.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.6" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.isAssignableFrom (1 samples, 0.10%)</title><rect x="522.6" y="1395.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="525.6" y="1406.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJDKReflection.isAssignableFrom (1 samples, 0.10%)</title><rect x="522.6" y="1379.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.6" y="1390.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJDKReflection.getMirror (1 samples, 0.10%)</title><rect x="522.6" y="1363.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.6" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/CallTargetNode.invokeKind (1 samples, 0.10%)</title><rect x="523.8" y="1395.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="526.8" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/MethodCallTargetNode.findSpecialCallTarget (1 samples, 0.10%)</title><rect x="525.0" y="1395.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="528.0" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/MethodCallTargetNode.devirtualizeCall (1 samples, 0.10%)</title><rect x="525.0" y="1379.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="528.0" y="1390.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod (1 samples, 0.10%)</title><rect x="525.0" y="1363.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="528.0" y="1374.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod (1 samples, 0.10%)</title><rect x="525.0" y="1347.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="528.0" y="1358.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.findUniqueConcreteMethod (1 samples, 0.10%)</title><rect x="525.0" y="1331.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="528.0" y="1342.0"></text>
</g>
<g>
<title>c2v_findUniqueConcreteMethod(JNIEnv_*, _jobject*, _jobject*, _jobject*) (1 samples, 0.10%)</title><rect x="525.0" y="1315.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="528.0" y="1326.0"></text>
</g>
<g>
<title>Mutex::lock() (1 samples, 0.10%)</title><rect x="525.0" y="1299.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="528.0" y="1310.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="525.0" y="1283.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="528.0" y="1294.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="525.0" y="1267.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="528.0" y="1278.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="525.0" y="1251.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="528.0" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.specializeGraphToArguments (8 samples, 0.83%)</title><rect x="526.2" y="1555.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="529.2" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (3 samples, 0.31%)</title><rect x="528.7" y="1539.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.7" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (3 samples, 0.31%)</title><rect x="528.7" y="1523.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.31%)</title><rect x="528.7" y="1507.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.31%)</title><rect x="528.7" y="1491.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (3 samples, 0.31%)</title><rect x="528.7" y="1475.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (3 samples, 0.31%)</title><rect x="528.7" y="1459.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="531.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList.addAll (2 samples, 0.21%)</title><rect x="528.7" y="1443.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.add (2 samples, 0.21%)</title><rect x="528.7" y="1427.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.7" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.10%)</title><rect x="528.7" y="1411.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeBitMap.isMarkedAndGrow (1 samples, 0.10%)</title><rect x="529.9" y="1411.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="532.9" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (1 samples, 0.10%)</title><rect x="531.2" y="1443.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (1 samples, 0.10%)</title><rect x="531.2" y="1427.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.2" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (1 samples, 0.10%)</title><rect x="531.2" y="1411.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="534.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Unary.canonical (1 samples, 0.10%)</title><rect x="531.2" y="1395.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.2" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="531.2" y="1379.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.2" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="531.2" y="1363.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.2" y="1374.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="531.2" y="1347.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="534.2" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.replaceParamsWithMoreInformativeArguments (3 samples, 0.31%)</title><rect x="532.4" y="1539.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.4" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.10%)</title><rect x="533.6" y="1523.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="536.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterable.snapshot (1 samples, 0.10%)</title><rect x="534.9" y="1523.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="537.9" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterable.snapshotTo (1 samples, 0.10%)</title><rect x="534.9" y="1507.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.9" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.10%)</title><rect x="534.9" y="1491.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.9" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.10%)</title><rect x="534.9" y="1475.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.9" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.10%)</title><rect x="534.9" y="1459.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.9" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.10%)</title><rect x="534.9" y="1443.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/CallsiteHolderExplorable.invokeRelevance (2 samples, 0.21%)</title><rect x="536.1" y="1603.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.1" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance.getRelevance (2 samples, 0.21%)</title><rect x="536.1" y="1587.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance$Scope.computeInvokeRelevance (2 samples, 0.21%)</title><rect x="536.1" y="1571.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance$Scope.getFastPathMinProbability (2 samples, 0.21%)</title><rect x="536.1" y="1555.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="539.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance.computeFastPathMinProbability (2 samples, 0.21%)</title><rect x="536.1" y="1539.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterable.first (1 samples, 0.10%)</title><rect x="537.3" y="1523.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.10%)</title><rect x="537.3" y="1507.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.forward (1 samples, 0.10%)</title><rect x="537.3" y="1491.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="540.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.getInput (1 samples, 0.10%)</title><rect x="537.3" y="1475.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.3" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.10%)</title><rect x="537.3" y="1459.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="540.3" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.getInlineInfo (2 samples, 0.21%)</title><rect x="538.5" y="1603.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.5" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.checkInvokeConditions (1 samples, 0.10%)</title><rect x="538.5" y="1587.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.5" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/MethodCallTargetNode.receiver (1 samples, 0.10%)</title><rect x="538.5" y="1571.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.5" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/CallTargetNode.arguments (1 samples, 0.10%)</title><rect x="538.5" y="1555.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.5" y="1566.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="538.5" y="1539.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="541.5" y="1550.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="538.5" y="1523.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="541.5" y="1534.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="538.5" y="1507.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="541.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.getTypeCheckedInlineInfo (1 samples, 0.10%)</title><rect x="539.8" y="1587.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="542.8" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.checkTargetConditions (1 samples, 0.10%)</title><rect x="539.8" y="1571.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="542.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.checkTargetConditionsHelper (1 samples, 0.10%)</title><rect x="539.8" y="1555.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="542.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.countRecursiveInlining (1 samples, 0.10%)</title><rect x="539.8" y="1539.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.8" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayDeque$DeqIterator.next (1 samples, 0.10%)</title><rect x="539.8" y="1523.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.pushInvocationAndGraphs (5 samples, 0.52%)</title><rect x="541.0" y="1603.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="544.0" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/MethodInvocation.buildCallsiteHolderForElement (4 samples, 0.42%)</title><rect x="542.2" y="1587.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.2" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/CallsiteHolderExplorable.&lt;init&gt; (4 samples, 0.42%)</title><rect x="542.2" y="1571.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="545.2" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/CallsiteHolderExplorable.computeProbabilities (3 samples, 0.31%)</title><rect x="542.2" y="1555.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="545.2" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance.compute (3 samples, 0.31%)</title><rect x="542.2" y="1539.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance$Scope.&lt;init&gt; (1 samples, 0.10%)</title><rect x="542.2" y="1523.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance$Scope.process (2 samples, 0.21%)</title><rect x="543.5" y="1523.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="546.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance$Scope.computeInvokeRelevance (2 samples, 0.21%)</title><rect x="543.5" y="1507.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance$Scope.getFastPathMinProbability (1 samples, 0.10%)</title><rect x="543.5" y="1491.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance.computeFastPathMinProbability (1 samples, 0.10%)</title><rect x="543.5" y="1475.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.5" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance.getMaxProbabilitySux (1 samples, 0.10%)</title><rect x="543.5" y="1459.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.5" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.successors (1 samples, 0.10%)</title><rect x="543.5" y="1443.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.5" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getSuccessorIterable (1 samples, 0.10%)</title><rect x="543.5" y="1427.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.5" y="1438.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.10%)</title><rect x="543.5" y="1411.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="546.5" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/FixedNodeRelativeFrequencyCache.applyAsDouble (1 samples, 0.10%)</title><rect x="544.7" y="1491.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/FixedNodeRelativeFrequencyCache.applyAsDouble (1 samples, 0.10%)</title><rect x="544.7" y="1475.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/FixedNodeRelativeFrequencyCache.applyAsDouble (1 samples, 0.10%)</title><rect x="544.7" y="1459.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/FixedNodeRelativeFrequencyCache.applyAsDouble (1 samples, 0.10%)</title><rect x="544.7" y="1443.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.7" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="544.7" y="1427.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.7" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.createHash (1 samples, 0.10%)</title><rect x="544.7" y="1411.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="547.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.10%)</title><rect x="544.7" y="1395.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.10%)</title><rect x="544.7" y="1379.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.7" y="1390.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="544.7" y="1363.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="547.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningIterator.apply (1 samples, 0.10%)</title><rect x="545.9" y="1555.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.9" y="1566.0"></text>
</g>
<g>
<title>java/util/LinkedList.addLast (1 samples, 0.10%)</title><rect x="545.9" y="1539.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="548.9" y="1550.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.10%)</title><rect x="545.9" y="1523.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.9" y="1534.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (1 samples, 0.10%)</title><rect x="545.9" y="1507.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="548.9" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.tryToInline (97 samples, 10.10%)</title><rect x="547.1" y="1619.0" width="119.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="550.1" y="1630.0">org/graalvm/com..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/GreedyInliningPolicy.isWorthInlining (40 samples, 4.17%)</title><rect x="547.1" y="1603.0" width="49.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="550.1" y="1614.0">org/g..</text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="547.1" y="1587.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="550.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/AbstractInliningPolicy.isIntrinsic (1 samples, 0.10%)</title><rect x="548.4" y="1587.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.4" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/AbstractInliningPolicy.onlyForcedIntrinsics (1 samples, 0.10%)</title><rect x="548.4" y="1571.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.4" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/AbstractInliningPolicy.onlyIntrinsics (1 samples, 0.10%)</title><rect x="548.4" y="1555.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="551.4" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.hasSubstitution (1 samples, 0.10%)</title><rect x="548.4" y="1539.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="551.4" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.lookupInvocation (1 samples, 0.10%)</title><rect x="548.4" y="1523.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.get (1 samples, 0.10%)</title><rect x="548.4" y="1507.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="551.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/policy/InliningPolicy$Decision.withReason (38 samples, 3.96%)</title><rect x="549.6" y="1587.0" width="46.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.6" y="1598.0">org/..</text>
</g>
<g>
<title>java/lang/String.format (38 samples, 3.96%)</title><rect x="549.6" y="1571.0" width="46.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.6" y="1582.0">java..</text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.31%)</title><rect x="550.8" y="1555.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="553.8" y="1566.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (3 samples, 0.31%)</title><rect x="550.8" y="1539.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="553.8" y="1550.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (3 samples, 0.31%)</title><rect x="550.8" y="1523.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="553.8" y="1534.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 0.21%)</title><rect x="550.8" y="1507.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.8" y="1518.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.21%)</title><rect x="550.8" y="1491.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.8" y="1502.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.21%)</title><rect x="550.8" y="1475.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.8" y="1486.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (2 samples, 0.21%)</title><rect x="550.8" y="1459.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.8" y="1470.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (1 samples, 0.10%)</title><rect x="552.1" y="1443.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="555.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.10%)</title><rect x="552.1" y="1427.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.1" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="552.1" y="1411.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="555.1" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="552.1" y="1395.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="555.1" y="1406.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="552.1" y="1379.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="555.1" y="1390.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="552.1" y="1363.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="555.1" y="1374.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="552.1" y="1347.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="555.1" y="1358.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="552.1" y="1331.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="555.1" y="1342.0"></text>
</g>
<g>
<title>java/util/Locale.equals (1 samples, 0.10%)</title><rect x="553.3" y="1507.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.3" y="1518.0"></text>
</g>
<g>
<title>java/util/Formatter.format (34 samples, 3.54%)</title><rect x="554.5" y="1555.0" width="41.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.5" y="1566.0">jav..</text>
</g>
<g>
<title>java/util/Formatter.format (34 samples, 3.54%)</title><rect x="554.5" y="1539.0" width="41.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.5" y="1550.0">jav..</text>
</g>
<g>
<title>java/util/Formatter$FixedString.print (2 samples, 0.21%)</title><rect x="554.5" y="1523.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.5" y="1534.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="555.7" y="1507.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="558.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="555.7" y="1491.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="555.7" y="1475.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="558.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.10%)</title><rect x="555.7" y="1459.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.10%)</title><rect x="555.7" y="1443.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.7" y="1454.0"></text>
</g>
<g>
<title>TypeArrayKlass::copy_array(arrayOopDesc*, int, arrayOopDesc*, int, int, Thread*) (1 samples, 0.10%)</title><rect x="555.7" y="1427.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="558.7" y="1438.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (23 samples, 2.40%)</title><rect x="557.0" y="1523.0" width="28.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.0" y="1534.0">ja..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.printFloat (23 samples, 2.40%)</title><rect x="557.0" y="1507.0" width="28.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.0" y="1518.0">ja..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (23 samples, 2.40%)</title><rect x="557.0" y="1491.0" width="28.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.0" y="1502.0">ja..</text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.appendJustified (4 samples, 0.42%)</title><rect x="557.0" y="1475.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.42%)</title><rect x="557.0" y="1459.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.0" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.42%)</title><rect x="557.0" y="1443.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.42%)</title><rect x="557.0" y="1427.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.0" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="558.2" y="1411.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="561.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.21%)</title><rect x="559.4" y="1411.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.4" y="1422.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.leadingSign (1 samples, 0.10%)</title><rect x="561.9" y="1475.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="564.9" y="1486.0"></text>
</g>
<g>
<title>java/util/Formatter$Flags.contains (1 samples, 0.10%)</title><rect x="561.9" y="1459.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.9" y="1470.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.print (18 samples, 1.88%)</title><rect x="563.1" y="1475.0" width="22.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.1" y="1486.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="563.1" y="1459.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="563.1" y="1443.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.1" y="1454.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.10%)</title><rect x="563.1" y="1427.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.1" y="1438.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.addZeros (1 samples, 0.10%)</title><rect x="564.4" y="1459.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="567.4" y="1470.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.localizedMagnitude (12 samples, 1.25%)</title><rect x="565.6" y="1459.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.6" y="1470.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (11 samples, 1.15%)</title><rect x="566.8" y="1443.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="569.8" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.10%)</title><rect x="566.8" y="1427.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="569.8" y="1438.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (10 samples, 1.04%)</title><rect x="568.0" y="1427.0" width="12.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.0" y="1438.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (10 samples, 1.04%)</title><rect x="568.0" y="1411.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.0" y="1422.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (10 samples, 1.04%)</title><rect x="568.0" y="1395.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.0" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.10%)</title><rect x="570.5" y="1379.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="573.5" y="1390.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.10%)</title><rect x="570.5" y="1363.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="573.5" y="1374.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.10%)</title><rect x="570.5" y="1347.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="573.5" y="1358.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (6 samples, 0.62%)</title><rect x="571.7" y="1379.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.chars (4 samples, 0.42%)</title><rect x="571.7" y="1363.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.&lt;init&gt; (2 samples, 0.21%)</title><rect x="571.7" y="1347.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.&lt;init&gt; (2 samples, 0.21%)</title><rect x="571.7" y="1331.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.7" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.intStream (2 samples, 0.21%)</title><rect x="574.2" y="1347.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.2" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (1 samples, 0.10%)</title><rect x="575.4" y="1331.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.4" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (2 samples, 0.21%)</title><rect x="576.6" y="1363.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="579.6" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="576.6" y="1347.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="579.6" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.21%)</title><rect x="576.6" y="1331.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.6" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.10%)</title><rect x="577.9" y="1315.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.9" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.10%)</title><rect x="577.9" y="1299.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="580.9" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.10%)</title><rect x="577.9" y="1283.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="580.9" y="1294.0"></text>
</g>
<g>
<title>sun/util/locale/provider/JRELocaleProviderAdapter.getLocaleResources (1 samples, 0.10%)</title><rect x="579.1" y="1379.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/math/FormattedFloatingDecimal.valueOf (4 samples, 0.42%)</title><rect x="580.3" y="1459.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.3" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.getBinaryToASCIIConverter (4 samples, 0.42%)</title><rect x="580.3" y="1443.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.3" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal$BinaryToASCIIBuffer.dtoa (4 samples, 0.42%)</title><rect x="580.3" y="1427.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/math/FDBigInteger.leftShift (1 samples, 0.10%)</title><rect x="581.6" y="1411.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/math/FDBigInteger.quoRemIteration (2 samples, 0.21%)</title><rect x="582.8" y="1411.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.8" y="1422.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="582.8" y="1395.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="585.8" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="582.8" y="1379.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="585.8" y="1390.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="582.8" y="1363.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="585.8" y="1374.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="582.8" y="1347.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="585.8" y="1358.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="582.8" y="1331.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="585.8" y="1342.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="582.8" y="1315.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="585.8" y="1326.0"></text>
</g>
<g>
<title>JVMCIRuntime::get_HotSpotJVMCIRuntime(JVMCIEnv*) (1 samples, 0.10%)</title><rect x="582.8" y="1299.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="585.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/math/FDBigInteger.multDiffMe (1 samples, 0.10%)</title><rect x="584.0" y="1395.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="587.0" y="1406.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (9 samples, 0.94%)</title><rect x="585.2" y="1523.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="588.2" y="1534.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.&lt;init&gt; (4 samples, 0.42%)</title><rect x="586.5" y="1507.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="589.5" y="1518.0"></text>
</g>
<g>
<title>java/util/Formatter$Conversion.isInteger (1 samples, 0.10%)</title><rect x="587.7" y="1491.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="590.7" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="587.7" y="1475.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="590.7" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="587.7" y="1459.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="590.7" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="587.7" y="1443.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="590.7" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="587.7" y="1427.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="590.7" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="587.7" y="1411.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="590.7" y="1422.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="587.7" y="1395.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="590.7" y="1406.0"></text>
</g>
<g>
<title>JVMCIRuntime::get_HotSpotJVMCIRuntime(JVMCIEnv*) (1 samples, 0.10%)</title><rect x="587.7" y="1379.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="590.7" y="1390.0"></text>
</g>
<g>
<title>JVMCIRuntime::initialize(JVMCIEnv*) (1 samples, 0.10%)</title><rect x="587.7" y="1363.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="590.7" y="1374.0"></text>
</g>
<g>
<title>java/util/Formatter$FormatSpecifier.conversion (1 samples, 0.10%)</title><rect x="588.9" y="1491.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (1 samples, 0.10%)</title><rect x="588.9" y="1475.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.9" y="1486.0"></text>
</g>
<g>
<title>java/lang/Character.isUpperCase (1 samples, 0.10%)</title><rect x="588.9" y="1459.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="591.9" y="1470.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.isUpperCase (1 samples, 0.10%)</title><rect x="588.9" y="1443.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="591.9" y="1454.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.start (1 samples, 0.10%)</title><rect x="590.2" y="1491.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.2" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="590.2" y="1475.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="593.2" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="590.2" y="1459.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="593.2" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="590.2" y="1443.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="593.2" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="590.2" y="1427.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="593.2" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="590.2" y="1411.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="593.2" y="1422.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="590.2" y="1395.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="593.2" y="1406.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.10%)</title><rect x="590.2" y="1379.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="593.2" y="1390.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.find (3 samples, 0.31%)</title><rect x="591.4" y="1507.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.4" y="1518.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.search (3 samples, 0.31%)</title><rect x="591.4" y="1491.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.4" y="1502.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Start.match (3 samples, 0.31%)</title><rect x="591.4" y="1475.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.4" y="1486.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (3 samples, 0.31%)</title><rect x="591.4" y="1459.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.4" y="1470.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.31%)</title><rect x="591.4" y="1443.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.4" y="1454.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (3 samples, 0.31%)</title><rect x="591.4" y="1427.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.4" y="1438.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (3 samples, 0.31%)</title><rect x="591.4" y="1411.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.4" y="1422.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharPropertyGreedy.match (3 samples, 0.31%)</title><rect x="591.4" y="1395.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.4" y="1406.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BitClass.is (1 samples, 0.10%)</title><rect x="592.6" y="1379.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.6" y="1390.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.10%)</title><rect x="593.9" y="1379.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.9" y="1390.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BranchConn.match (1 samples, 0.10%)</title><rect x="593.9" y="1363.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.9" y="1374.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.10%)</title><rect x="593.9" y="1347.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.9" y="1358.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.10%)</title><rect x="593.9" y="1331.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="596.9" y="1342.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$Branch.match (1 samples, 0.10%)</title><rect x="593.9" y="1315.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="596.9" y="1326.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupHead.match (1 samples, 0.10%)</title><rect x="593.9" y="1299.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.9" y="1310.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$BmpCharProperty.match (1 samples, 0.10%)</title><rect x="593.9" y="1283.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="596.9" y="1294.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$GroupTail.match (1 samples, 0.10%)</title><rect x="593.9" y="1267.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="596.9" y="1278.0"></text>
</g>
<g>
<title>java/util/regex/Pattern$LastNode.match (1 samples, 0.10%)</title><rect x="593.9" y="1251.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="596.9" y="1262.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.10%)</title><rect x="595.1" y="1507.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.1" y="1518.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (1 samples, 0.10%)</title><rect x="595.1" y="1491.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.1" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.doInline (57 samples, 5.94%)</title><rect x="596.3" y="1603.0" width="70.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="599.3" y="1614.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (16 samples, 1.67%)</title><rect x="596.3" y="1587.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.3" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (16 samples, 1.67%)</title><rect x="596.3" y="1571.0" width="19.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="599.3" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (16 samples, 1.67%)</title><rect x="596.3" y="1555.0" width="19.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.3" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (16 samples, 1.67%)</title><rect x="596.3" y="1539.0" width="19.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="599.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext$1.close (1 samples, 0.10%)</title><rect x="596.3" y="1523.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/CompilationListenerProfiler$1.close (1 samples, 0.10%)</title><rect x="596.3" y="1507.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="599.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/JFRCompilerProfiler.notifyCompilerPhaseEvent (1 samples, 0.10%)</title><rect x="596.3" y="1491.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="599.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (15 samples, 1.56%)</title><rect x="597.5" y="1523.0" width="18.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="600.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (15 samples, 1.56%)</title><rect x="597.5" y="1507.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="600.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList.addAll (1 samples, 0.10%)</title><rect x="597.5" y="1491.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="600.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.add (1 samples, 0.10%)</title><rect x="597.5" y="1475.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="600.5" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.10%)</title><rect x="597.5" y="1459.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="600.5" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="597.5" y="1443.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="600.5" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="597.5" y="1427.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="600.5" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="597.5" y="1411.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="600.5" y="1422.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="597.5" y="1395.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="600.5" y="1406.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="597.5" y="1379.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="600.5" y="1390.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="597.5" y="1363.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="600.5" y="1374.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.10%)</title><rect x="597.5" y="1347.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="600.5" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (14 samples, 1.46%)</title><rect x="598.8" y="1491.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.8" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (14 samples, 1.46%)</title><rect x="598.8" y="1475.0" width="17.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="601.8" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (11 samples, 1.15%)</title><rect x="598.8" y="1459.0" width="13.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.8" y="1470.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x000000011001e880 (1 samples, 0.10%)</title><rect x="598.8" y="1443.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="601.8" y="1454.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.10%)</title><rect x="600.0" y="1443.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.0" y="1454.0"></text>
</g>
<g>
<title>java/lang/Object.getClass (1 samples, 0.10%)</title><rect x="600.0" y="1427.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="603.0" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (3 samples, 0.31%)</title><rect x="601.2" y="1443.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode.canonical (1 samples, 0.10%)</title><rect x="601.2" y="1427.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.2" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerEqualsNode.canonical (1 samples, 0.10%)</title><rect x="601.2" y="1411.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$Tool.smallestCompareWidth (1 samples, 0.10%)</title><rect x="601.2" y="1395.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="604.2" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/CoreProvidersDelegate.getLowerer (1 samples, 0.10%)</title><rect x="601.2" y="1379.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.2" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (2 samples, 0.21%)</title><rect x="602.5" y="1427.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (2 samples, 0.21%)</title><rect x="602.5" y="1411.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.5" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (2 samples, 0.21%)</title><rect x="602.5" y="1395.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.5" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.findSynonym (2 samples, 0.21%)</title><rect x="602.5" y="1379.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.5" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Unary.canonical (1 samples, 0.10%)</title><rect x="604.9" y="1443.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="604.9" y="1427.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="607.9" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.canonical (1 samples, 0.10%)</title><rect x="604.9" y="1411.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.9" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="604.9" y="1395.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="607.9" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FixedGuardNode.simplify (1 samples, 0.10%)</title><rect x="606.1" y="1443.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.1" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.removeFixed (1 samples, 0.10%)</title><rect x="606.1" y="1427.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.1" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.safeDelete (1 samples, 0.10%)</title><rect x="606.1" y="1411.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="609.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clearInputs (1 samples, 0.10%)</title><rect x="606.1" y="1395.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.unregisterAtInputsAsUsage (1 samples, 0.10%)</title><rect x="606.1" y="1379.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="609.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.maybeNotifyZeroUsages (1 samples, 0.10%)</title><rect x="606.1" y="1363.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.1" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="606.1" y="1347.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.1" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$1.usagesDroppedToZero (1 samples, 0.10%)</title><rect x="606.1" y="1331.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.1" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.add (1 samples, 0.10%)</title><rect x="606.1" y="1315.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/LoadHubNode.canonical (4 samples, 0.42%)</title><rect x="607.4" y="1443.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/LoadHubNode.canonical (4 samples, 0.42%)</title><rect x="607.4" y="1427.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="610.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/LoadHubNode.findSynonym (3 samples, 0.31%)</title><rect x="608.6" y="1411.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.6" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.typeReferenceOrNull (3 samples, 0.31%)</title><rect x="608.6" y="1395.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.6" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (3 samples, 0.31%)</title><rect x="608.6" y="1379.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="611.6" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (3 samples, 0.31%)</title><rect x="608.6" y="1363.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="611.6" y="1374.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (3 samples, 0.31%)</title><rect x="608.6" y="1347.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="611.6" y="1358.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (3 samples, 0.31%)</title><rect x="608.6" y="1331.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="611.6" y="1342.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (3 samples, 0.31%)</title><rect x="608.6" y="1315.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="611.6" y="1326.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (3 samples, 0.31%)</title><rect x="608.6" y="1299.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="611.6" y="1310.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (3 samples, 0.31%)</title><rect x="608.6" y="1283.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="611.6" y="1294.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (3 samples, 0.31%)</title><rect x="608.6" y="1267.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="611.6" y="1278.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (3 samples, 0.31%)</title><rect x="608.6" y="1251.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="611.6" y="1262.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (3 samples, 0.31%)</title><rect x="608.6" y="1235.0" width="3.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="611.6" y="1246.0"></text>
</g>
<g>
<title>__psynch_mutexwait (3 samples, 0.31%)</title><rect x="608.6" y="1219.0" width="3.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="611.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryInferStamp (3 samples, 0.31%)</title><rect x="612.3" y="1459.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.3" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadIndexedNode.inferStamp (3 samples, 0.31%)</title><rect x="612.3" y="1443.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.3" y="1454.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x000000011001a500 (1 samples, 0.10%)</title><rect x="612.3" y="1427.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.3" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.getAssumptions (1 samples, 0.10%)</title><rect x="613.5" y="1427.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadIndexedNode.createStamp (1 samples, 0.10%)</title><rect x="614.7" y="1427.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.typeOrNull (1 samples, 0.10%)</title><rect x="614.7" y="1411.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.typeOrNull (1 samples, 0.10%)</title><rect x="614.7" y="1395.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="617.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.typeReferenceOrNull (1 samples, 0.10%)</title><rect x="614.7" y="1379.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.hasValues (1 samples, 0.10%)</title><rect x="614.7" y="1363.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.isConcreteType (1 samples, 0.10%)</title><rect x="614.7" y="1347.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="617.7" y="1358.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ModifiersProvider.isAbstract (1 samples, 0.10%)</title><rect x="614.7" y="1331.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="617.7" y="1342.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getModifiers (1 samples, 0.10%)</title><rect x="614.7" y="1315.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.7" y="1326.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaType.getElementalType (1 samples, 0.10%)</title><rect x="614.7" y="1299.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="617.7" y="1310.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getComponentType (1 samples, 0.10%)</title><rect x="614.7" y="1283.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="617.7" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.getComponentType (1 samples, 0.10%)</title><rect x="614.7" y="1267.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.7" y="1278.0"></text>
</g>
<g>
<title>c2v_getComponentType(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.10%)</title><rect x="614.7" y="1251.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="617.7" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/ExactInlineInfo.inline (22 samples, 2.29%)</title><rect x="616.0" y="1587.0" width="27.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.0" y="1598.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.inline (22 samples, 2.29%)</title><rect x="616.0" y="1571.0" width="27.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.0" y="1582.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (22 samples, 2.29%)</title><rect x="616.0" y="1555.0" width="27.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.0" y="1566.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (22 samples, 2.29%)</title><rect x="616.0" y="1539.0" width="27.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.0" y="1550.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inline (22 samples, 2.29%)</title><rect x="616.0" y="1523.0" width="27.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="619.0" y="1534.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (8 samples, 0.83%)</title><rect x="616.0" y="1507.0" width="9.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.0" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (8 samples, 0.83%)</title><rect x="616.0" y="1491.0" width="9.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.0" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (6 samples, 0.62%)</title><rect x="616.0" y="1475.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="619.0" y="1486.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="616.0" y="1459.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="619.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (4 samples, 0.42%)</title><rect x="617.2" y="1459.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="620.2" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="617.2" y="1443.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.copyOrClearEdgesForClone (1 samples, 0.10%)</title><rect x="618.4" y="1443.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.copy (1 samples, 0.10%)</title><rect x="618.4" y="1427.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeInputList.&lt;init&gt; (1 samples, 0.10%)</title><rect x="618.4" y="1411.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeList.&lt;init&gt; (1 samples, 0.10%)</title><rect x="618.4" y="1395.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.4" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="618.4" y="1379.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="621.4" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.setNodeInfo (1 samples, 0.10%)</title><rect x="619.7" y="1443.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.7" y="1454.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="620.9" y="1443.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="623.9" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="620.9" y="1427.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.9" y="1438.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance(JNIEnv_*, _jobject*, _jclass*) (1 samples, 0.10%)</title><rect x="620.9" y="1411.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="623.9" y="1422.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.10%)</title><rect x="620.9" y="1395.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="623.9" y="1406.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.10%)</title><rect x="620.9" y="1379.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="623.9" y="1390.0"></text>
</g>
<g>
<title>void volatile* Atomic::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.10%)</title><rect x="620.9" y="1363.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="623.9" y="1374.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, Atomic::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.10%)</title><rect x="620.9" y="1347.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="623.9" y="1358.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::~ScopedFence() (1 samples, 0.10%)</title><rect x="620.9" y="1331.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="623.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil$1.replacement (1 samples, 0.10%)</title><rect x="622.1" y="1459.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.1" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateInputSuccInPlace (2 samples, 0.21%)</title><rect x="623.4" y="1475.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.4" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateEdgesInPlace (1 samples, 0.10%)</title><rect x="624.6" y="1459.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.6" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.initializeList (1 samples, 0.10%)</title><rect x="624.6" y="1443.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.6" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.verifyUpdateValid (1 samples, 0.10%)</title><rect x="624.6" y="1427.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="627.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.10%)</title><rect x="624.6" y="1411.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.6" y="1422.0"></text>
</g>
<g>
<title>jni_IsAssignableFrom (1 samples, 0.10%)</title><rect x="624.6" y="1395.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="627.6" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (5 samples, 0.52%)</title><rect x="625.8" y="1507.0" width="6.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.format (5 samples, 0.52%)</title><rect x="625.8" y="1491.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.8" y="1502.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.42%)</title><rect x="625.8" y="1475.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.8" y="1486.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (4 samples, 0.42%)</title><rect x="625.8" y="1459.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="628.8" y="1470.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (4 samples, 0.42%)</title><rect x="625.8" y="1443.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="628.8" y="1454.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (4 samples, 0.42%)</title><rect x="625.8" y="1427.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.8" y="1438.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (4 samples, 0.42%)</title><rect x="625.8" y="1411.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.8" y="1422.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (4 samples, 0.42%)</title><rect x="625.8" y="1395.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.8" y="1406.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (4 samples, 0.42%)</title><rect x="625.8" y="1379.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.8" y="1390.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (4 samples, 0.42%)</title><rect x="625.8" y="1363.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.chars (1 samples, 0.10%)</title><rect x="625.8" y="1347.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="625.8" y="1331.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="625.8" y="1315.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="628.8" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (3 samples, 0.31%)</title><rect x="627.0" y="1347.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.0" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="628.3" y="1331.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="631.3" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.21%)</title><rect x="628.3" y="1315.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="631.3" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="628.3" y="1299.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.3" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="628.3" y="1283.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="631.3" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.21%)</title><rect x="628.3" y="1267.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.3" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.forEachWithCancel (2 samples, 0.21%)</title><rect x="628.3" y="1251.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringUTF16$CharsSpliterator.tryAdvance (2 samples, 0.21%)</title><rect x="628.3" y="1235.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="631.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.10%)</title><rect x="629.5" y="1219.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="632.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.10%)</title><rect x="629.5" y="1203.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.5" y="1214.0"></text>
</g>
<g>
<title>java/util/Formatter.toString (1 samples, 0.10%)</title><rect x="630.7" y="1475.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killCFG (1 samples, 0.10%)</title><rect x="632.0" y="1507.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.0" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killCFGInner (1 samples, 0.10%)</title><rect x="632.0" y="1491.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.0" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.contains (1 samples, 0.10%)</title><rect x="632.0" y="1475.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.0" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.containsKey (1 samples, 0.10%)</title><rect x="632.0" y="1459.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.0" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.find (1 samples, 0.10%)</title><rect x="632.0" y="1443.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findLinear (1 samples, 0.10%)</title><rect x="632.0" y="1427.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.compareKeys (1 samples, 0.10%)</title><rect x="632.0" y="1411.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.0" y="1422.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="632.0" y="1395.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="635.0" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.finishInlining (2 samples, 0.21%)</title><rect x="633.2" y="1507.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.2" y="1518.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/Assumptions.record (1 samples, 0.10%)</title><rect x="633.2" y="1491.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.2" y="1502.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.10%)</title><rect x="633.2" y="1475.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="636.2" y="1486.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.10%)</title><rect x="633.2" y="1459.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.2" y="1470.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.10%)</title><rect x="633.2" y="1443.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.2" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.10%)</title><rect x="633.2" y="1427.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.2" y="1438.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/Assumptions$LeafType.hashCode (1 samples, 0.10%)</title><rect x="633.2" y="1411.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="636.2" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaType.hashCode (1 samples, 0.10%)</title><rect x="633.2" y="1395.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="636.2" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="633.2" y="1379.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="636.2" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="633.2" y="1363.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="636.2" y="1374.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="633.2" y="1347.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="636.2" y="1358.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="633.2" y="1331.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="636.2" y="1342.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="633.2" y="1315.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="636.2" y="1326.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="633.2" y="1299.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="636.2" y="1310.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.10%)</title><rect x="633.2" y="1283.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="636.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtUsages (1 samples, 0.10%)</title><rect x="634.4" y="1491.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.4" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtAllUsages (1 samples, 0.10%)</title><rect x="634.4" y="1475.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.4" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtUsage (1 samples, 0.10%)</title><rect x="634.4" y="1459.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="637.4" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.maybeNotifyInputChanged (1 samples, 0.10%)</title><rect x="634.4" y="1443.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="637.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="634.4" y="1427.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="634.4" y="1411.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="637.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.add (1 samples, 0.10%)</title><rect x="634.4" y="1395.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="637.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.10%)</title><rect x="634.4" y="1379.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="637.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="634.4" y="1363.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.grow (1 samples, 0.10%)</title><rect x="634.4" y="1347.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.4" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.nonNullReceiver (2 samples, 0.21%)</title><rect x="635.6" y="1507.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.6" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.create (1 samples, 0.10%)</title><rect x="635.6" y="1491.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="638.6" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.filterInterfaceTypesOut (1 samples, 0.10%)</title><rect x="635.6" y="1475.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.6" y="1486.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.isInterface (1 samples, 0.10%)</title><rect x="635.6" y="1459.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.6" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unique (1 samples, 0.10%)</title><rect x="636.9" y="1491.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="639.9" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="636.9" y="1475.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="639.9" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="636.9" y="1459.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.9" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="636.9" y="1443.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="636.9" y="1427.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.9" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="636.9" y="1411.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.9" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="636.9" y="1395.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.9" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.processFrameStates (2 samples, 0.21%)</title><rect x="638.1" y="1507.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.1" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.duplicateModifiedDuringCall (2 samples, 0.21%)</title><rect x="638.1" y="1491.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.1" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.duplicateModified (2 samples, 0.21%)</title><rect x="638.1" y="1475.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="641.1" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.10%)</title><rect x="639.3" y="1459.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.3" y="1470.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.10%)</title><rect x="639.3" y="1443.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.3" y="1454.0"></text>
</g>
<g>
<title>java/util/AbstractList$SubList.iterator (1 samples, 0.10%)</title><rect x="639.3" y="1427.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.3" y="1438.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.10%)</title><rect x="639.3" y="1411.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.3" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePositions (2 samples, 0.21%)</title><rect x="640.6" y="1507.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.6" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePosition (2 samples, 0.21%)</title><rect x="640.6" y="1491.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="641.8" y="1475.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="644.8" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.10%)</title><rect x="641.8" y="1459.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.8" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.createHash (1 samples, 0.10%)</title><rect x="641.8" y="1443.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.8" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.10%)</title><rect x="641.8" y="1427.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.8" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getRawValue (1 samples, 0.10%)</title><rect x="641.8" y="1411.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.8" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/MultiTypeGuardInlineInfo.inline (7 samples, 0.73%)</title><rect x="643.0" y="1587.0" width="8.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="646.0" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/MultiTypeGuardInlineInfo.inlineMultipleMethods (7 samples, 0.73%)</title><rect x="643.0" y="1571.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.0" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/MultiTypeGuardInlineInfo.createDispatchOnTypeBeforeInvoke (1 samples, 0.10%)</title><rect x="643.0" y="1555.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="646.0" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/TypeSwitchNode.&lt;init&gt; (1 samples, 0.10%)</title><rect x="643.0" y="1539.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="646.0" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/MultiTypeGuardInlineInfo.doInline (6 samples, 0.62%)</title><rect x="644.2" y="1555.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.2" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.inline (6 samples, 0.62%)</title><rect x="644.2" y="1539.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (6 samples, 0.62%)</title><rect x="644.2" y="1523.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (6 samples, 0.62%)</title><rect x="644.2" y="1507.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="647.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inline (6 samples, 0.62%)</title><rect x="644.2" y="1491.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="644.2" y="1475.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="647.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.10%)</title><rect x="644.2" y="1459.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.2" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateInputSuccInPlace (1 samples, 0.10%)</title><rect x="644.2" y="1443.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateEdgesInPlace (1 samples, 0.10%)</title><rect x="644.2" y="1427.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.2" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateEdgeListCopy (1 samples, 0.10%)</title><rect x="644.2" y="1411.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeList.count (1 samples, 0.10%)</title><rect x="644.2" y="1395.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="647.2" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (1 samples, 0.10%)</title><rect x="645.5" y="1475.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.10%)</title><rect x="645.5" y="1459.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.5" y="1470.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.10%)</title><rect x="645.5" y="1443.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.5" y="1454.0"></text>
</g>
<g>
<title>java/util/Formatter.format (1 samples, 0.10%)</title><rect x="645.5" y="1427.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="648.5" y="1438.0"></text>
</g>
<g>
<title>java/util/Formatter$FixedString.print (1 samples, 0.10%)</title><rect x="645.5" y="1411.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="648.5" y="1422.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="645.5" y="1395.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.10%)</title><rect x="645.5" y="1379.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.5" y="1390.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.10%)</title><rect x="645.5" y="1363.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="648.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.appendChars (1 samples, 0.10%)</title><rect x="645.5" y="1347.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="648.5" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.finishInlining (2 samples, 0.21%)</title><rect x="646.7" y="1475.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="649.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAndDelete (1 samples, 0.10%)</title><rect x="646.7" y="1459.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.safeDelete (1 samples, 0.10%)</title><rect x="646.7" y="1443.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clearInputs (1 samples, 0.10%)</title><rect x="646.7" y="1427.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.unregisterAtInputsAsUsage (1 samples, 0.10%)</title><rect x="646.7" y="1411.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.removeThisFromUsages (1 samples, 0.10%)</title><rect x="646.7" y="1395.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="649.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.removeUsage (1 samples, 0.10%)</title><rect x="646.7" y="1379.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.fixFrameStates (1 samples, 0.10%)</title><rect x="647.9" y="1459.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.9" y="1470.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pop (1 samples, 0.10%)</title><rect x="647.9" y="1443.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="650.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePositions (2 samples, 0.21%)</title><rect x="649.2" y="1475.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePosition (2 samples, 0.21%)</title><rect x="649.2" y="1459.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.2" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicSet.addAll (1 samples, 0.10%)</title><rect x="649.2" y="1443.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.2" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicSet.addAll (1 samples, 0.10%)</title><rect x="649.2" y="1427.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="652.2" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.10%)</title><rect x="649.2" y="1411.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="649.2" y="1395.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="652.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.size (1 samples, 0.10%)</title><rect x="649.2" y="1379.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.2" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeMap$2.getKey (1 samples, 0.10%)</title><rect x="650.4" y="1443.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/TypeGuardInlineInfo.inline (10 samples, 1.04%)</title><rect x="651.6" y="1587.0" width="12.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.6" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.inline (10 samples, 1.04%)</title><rect x="651.6" y="1571.0" width="12.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.6" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (10 samples, 1.04%)</title><rect x="651.6" y="1555.0" width="12.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.6" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (10 samples, 1.04%)</title><rect x="651.6" y="1539.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.6" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inline (10 samples, 1.04%)</title><rect x="651.6" y="1523.0" width="12.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="654.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (5 samples, 0.52%)</title><rect x="651.6" y="1507.0" width="6.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.6" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (5 samples, 0.52%)</title><rect x="651.6" y="1491.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.6" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (4 samples, 0.42%)</title><rect x="651.6" y="1475.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.6" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (4 samples, 0.42%)</title><rect x="651.6" y="1459.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="654.6" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.copyOrClearEdgesForClone (2 samples, 0.21%)</title><rect x="651.6" y="1443.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.6" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.copy (2 samples, 0.21%)</title><rect x="651.6" y="1427.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.6" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.initializeNode (1 samples, 0.10%)</title><rect x="651.6" y="1411.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="654.6" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.verifyUpdateValid (1 samples, 0.10%)</title><rect x="651.6" y="1395.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.6" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeInputList.&lt;init&gt; (1 samples, 0.10%)</title><rect x="652.9" y="1411.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="655.9" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeList.&lt;init&gt; (1 samples, 0.10%)</title><rect x="652.9" y="1395.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="655.9" y="1406.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="652.9" y="1379.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="655.9" y="1390.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.allocateInstance (2 samples, 0.21%)</title><rect x="654.1" y="1443.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.1" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (2 samples, 0.21%)</title><rect x="654.1" y="1427.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.1" y="1438.0"></text>
</g>
<g>
<title>Unsafe_AllocateInstance(JNIEnv_*, _jobject*, _jclass*) (2 samples, 0.21%)</title><rect x="654.1" y="1411.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="657.1" y="1422.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(oopDesc*, Thread*) (2 samples, 0.21%)</title><rect x="654.1" y="1395.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="657.1" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::should_be_initialized() const (1 samples, 0.10%)</title><rect x="655.3" y="1379.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="658.3" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateInputSuccInPlace (1 samples, 0.10%)</title><rect x="656.5" y="1475.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.5" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateEdgesInPlace (1 samples, 0.10%)</title><rect x="656.5" y="1459.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="659.5" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.initializeList (1 samples, 0.10%)</title><rect x="656.5" y="1443.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="659.5" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.verifyUpdateValid (1 samples, 0.10%)</title><rect x="656.5" y="1427.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/Class.isAssignableFrom (1 samples, 0.10%)</title><rect x="656.5" y="1411.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.5" y="1422.0"></text>
</g>
<g>
<title>jni_IsAssignableFrom (1 samples, 0.10%)</title><rect x="656.5" y="1395.0" width="1.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="659.5" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.addDecision (2 samples, 0.21%)</title><rect x="657.8" y="1507.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.format (2 samples, 0.21%)</title><rect x="657.8" y="1491.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.8" y="1502.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.21%)</title><rect x="657.8" y="1475.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.8" y="1486.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (2 samples, 0.21%)</title><rect x="657.8" y="1459.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.8" y="1470.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (2 samples, 0.21%)</title><rect x="657.8" y="1443.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.8" y="1454.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (2 samples, 0.21%)</title><rect x="657.8" y="1427.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.8" y="1438.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.21%)</title><rect x="657.8" y="1411.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.8" y="1422.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.21%)</title><rect x="657.8" y="1395.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.8" y="1406.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (2 samples, 0.21%)</title><rect x="657.8" y="1379.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.8" y="1390.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.findNonFormatChar (2 samples, 0.21%)</title><rect x="657.8" y="1363.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.8" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/IntPipeline.findFirst (2 samples, 0.21%)</title><rect x="657.8" y="1347.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.8" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="657.8" y="1331.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.8" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.21%)</title><rect x="657.8" y="1315.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.8" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="657.8" y="1299.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.8" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="657.8" y="1283.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.8" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.10%)</title><rect x="659.0" y="1267.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.0" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.processFrameStates (3 samples, 0.31%)</title><rect x="660.2" y="1507.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="663.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.duplicateModifiedDuringCall (2 samples, 0.21%)</title><rect x="660.2" y="1491.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.duplicateModified (2 samples, 0.21%)</title><rect x="660.2" y="1475.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.2" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.21%)</title><rect x="660.2" y="1459.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.2" y="1470.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.21%)</title><rect x="660.2" y="1443.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.2" y="1454.0"></text>
</g>
<g>
<title>java/util/AbstractList$SubList$1.next (2 samples, 0.21%)</title><rect x="660.2" y="1427.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="663.2" y="1438.0"></text>
</g>
<g>
<title>java/util/AbstractList$SubList$1.hasNext (1 samples, 0.10%)</title><rect x="661.5" y="1411.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.5" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.processFrameState (1 samples, 0.10%)</title><rect x="662.7" y="1491.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="665.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.handleAfterBciFrameState (1 samples, 0.10%)</title><rect x="662.7" y="1475.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.duplicateModified (1 samples, 0.10%)</title><rect x="662.7" y="1459.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/FrameState.duplicateModified (1 samples, 0.10%)</title><rect x="662.7" y="1443.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="665.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.add (1 samples, 0.10%)</title><rect x="662.7" y="1427.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="665.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="662.7" y="1411.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="665.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="662.7" y="1395.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="665.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="662.7" y="1379.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="662.7" y="1363.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="665.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/EconomicSetNodeEventListener.changed (1 samples, 0.10%)</title><rect x="662.7" y="1347.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="665.7" y="1358.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.10%)</title><rect x="662.7" y="1331.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/CallsiteHolderExplorable.computeProbabilities (2 samples, 0.21%)</title><rect x="663.9" y="1587.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="666.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance.compute (2 samples, 0.21%)</title><rect x="663.9" y="1571.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="666.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/ComputeInliningRelevance$Scope.process (2 samples, 0.21%)</title><rect x="663.9" y="1555.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.9" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$SingletonNodeWorkList$1.next (1 samples, 0.10%)</title><rect x="665.1" y="1539.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$SingletonNodeWorkList$1.next (1 samples, 0.10%)</title><rect x="665.1" y="1523.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.1" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.remove (1 samples, 0.10%)</title><rect x="665.1" y="1507.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="668.1" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.removeFirst (1 samples, 0.10%)</title><rect x="665.1" y="1491.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="668.1" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.10%)</title><rect x="665.1" y="1475.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="668.1" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.inc (1 samples, 0.10%)</title><rect x="665.1" y="1459.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.1" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EarlyReadEliminationPhase.run (6 samples, 0.62%)</title><rect x="666.4" y="1667.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="669.4" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EarlyReadEliminationPhase.run (6 samples, 0.62%)</title><rect x="666.4" y="1651.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.4" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsPhase.runAnalysis (6 samples, 0.62%)</title><rect x="666.4" y="1635.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.4" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.10%)</title><rect x="666.4" y="1619.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.4" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.21%)</title><rect x="667.6" y="1619.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.6" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.21%)</title><rect x="667.6" y="1603.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.6" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (2 samples, 0.21%)</title><rect x="667.6" y="1587.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="670.6" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.getEnclosingPhase (1 samples, 0.10%)</title><rect x="667.6" y="1571.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="670.6" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="668.8" y="1571.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="671.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.run (1 samples, 0.10%)</title><rect x="668.8" y="1555.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.iterateSuccessorsAndInputs (1 samples, 0.10%)</title><rect x="668.8" y="1539.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="671.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.applyInputs (1 samples, 0.10%)</title><rect x="668.8" y="1523.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="671.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.applyInputs (1 samples, 0.10%)</title><rect x="668.8" y="1507.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.8" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.applyEdges (1 samples, 0.10%)</title><rect x="668.8" y="1491.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="671.8" y="1502.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.10%)</title><rect x="668.8" y="1475.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="671.8" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (2 samples, 0.21%)</title><rect x="670.1" y="1619.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.1" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (2 samples, 0.21%)</title><rect x="670.1" y="1603.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.1" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.processMultipleSuccessors (1 samples, 0.10%)</title><rect x="670.1" y="1587.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="673.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/ReadEliminationClosure.cloneState (1 samples, 0.10%)</title><rect x="670.1" y="1571.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/ReadEliminationClosure.cloneState (1 samples, 0.10%)</title><rect x="670.1" y="1555.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="673.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/ReadEliminationBlockState.&lt;init&gt; (1 samples, 0.10%)</title><rect x="670.1" y="1539.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="673.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsBlockState.&lt;init&gt; (1 samples, 0.10%)</title><rect x="670.1" y="1523.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.1" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="670.1" y="1507.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="673.1" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="670.1" y="1491.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="673.1" y="1502.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="670.1" y="1475.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="673.1" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="670.1" y="1459.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="673.1" y="1470.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="670.1" y="1443.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="673.1" y="1454.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="670.1" y="1427.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="673.1" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="670.1" y="1411.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="673.1" y="1422.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="670.1" y="1395.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="673.1" y="1406.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="670.1" y="1379.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="673.1" y="1390.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="670.1" y="1363.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="673.1" y="1374.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="670.1" y="1347.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="673.1" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.recurseIntoLoop (1 samples, 0.10%)</title><rect x="671.3" y="1587.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.3" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processLoop (1 samples, 0.10%)</title><rect x="671.3" y="1571.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="674.3" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processLoop (1 samples, 0.10%)</title><rect x="671.3" y="1555.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="674.3" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/ReadEliminationBlockState.equivalentTo (1 samples, 0.10%)</title><rect x="671.3" y="1539.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="674.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/ReadEliminationBlockState.equivalentTo (1 samples, 0.10%)</title><rect x="671.3" y="1523.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="674.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EarlyReadEliminationPhase.createEffectsClosure (1 samples, 0.10%)</title><rect x="672.5" y="1619.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="675.5" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="672.5" y="1603.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="675.5" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="672.5" y="1587.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.5" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="672.5" y="1571.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="675.5" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="672.5" y="1555.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="675.5" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="672.5" y="1539.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.5" y="1550.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="672.5" y="1523.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.5" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="672.5" y="1507.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="675.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.10%)</title><rect x="672.5" y="1491.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="675.5" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.10%)</title><rect x="672.5" y="1475.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="675.5" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.10%)</title><rect x="672.5" y="1459.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="675.5" y="1470.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.10%)</title><rect x="672.5" y="1443.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="675.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (1 samples, 0.10%)</title><rect x="672.5" y="1427.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="675.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.run (11 samples, 1.15%)</title><rect x="673.8" y="1667.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.8" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.run (11 samples, 1.15%)</title><rect x="673.8" y="1651.0" width="13.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="676.8" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsPhase.runAnalysis (11 samples, 1.15%)</title><rect x="673.8" y="1635.0" width="13.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="676.8" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.21%)</title><rect x="673.8" y="1619.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="676.8" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="673.8" y="1603.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="676.8" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="673.8" y="1587.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.8" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (1 samples, 0.10%)</title><rect x="673.8" y="1571.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (1 samples, 0.10%)</title><rect x="673.8" y="1555.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (1 samples, 0.10%)</title><rect x="673.8" y="1539.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="676.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processNodes (1 samples, 0.10%)</title><rect x="673.8" y="1523.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="676.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStack (1 samples, 0.10%)</title><rect x="673.8" y="1507.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.8" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processInputs (1 samples, 0.10%)</title><rect x="673.8" y="1491.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="676.8" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.hasNext (1 samples, 0.10%)</title><rect x="673.8" y="1475.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.8" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.forward (1 samples, 0.10%)</title><rect x="673.8" y="1459.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.8" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$RawEdgesIterator.getInput (1 samples, 0.10%)</title><rect x="673.8" y="1443.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="676.8" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.10%)</title><rect x="673.8" y="1427.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="676.8" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="675.0" y="1603.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.0" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="675.0" y="1587.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.0" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="675.0" y="1571.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="678.0" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.run (1 samples, 0.10%)</title><rect x="675.0" y="1555.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="678.0" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeadCodeEliminationPhase.deleteNodes (1 samples, 0.10%)</title><rect x="675.0" y="1539.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.0" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/GraphNodeIterator.hasNext (1 samples, 0.10%)</title><rect x="675.0" y="1523.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="678.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/GraphNodeIterator.checkForDeletedNode (1 samples, 0.10%)</title><rect x="675.0" y="1507.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.0" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (8 samples, 0.83%)</title><rect x="676.2" y="1619.0" width="9.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.2" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (8 samples, 0.83%)</title><rect x="676.2" y="1603.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="679.2" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.recurseIntoLoop (2 samples, 0.21%)</title><rect x="676.2" y="1587.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.2" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processLoop (2 samples, 0.21%)</title><rect x="676.2" y="1571.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.2" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processLoop (2 samples, 0.21%)</title><rect x="676.2" y="1555.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="679.2" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.processLoop (1 samples, 0.10%)</title><rect x="676.2" y="1539.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (1 samples, 0.10%)</title><rect x="676.2" y="1523.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="679.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processBlock (1 samples, 0.10%)</title><rect x="676.2" y="1507.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="679.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processBlock (1 samples, 0.10%)</title><rect x="676.2" y="1491.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/GraphEffectList.killIfBranch (1 samples, 0.10%)</title><rect x="676.2" y="1475.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="676.2" y="1459.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.2" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="676.2" y="1443.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="679.2" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="676.2" y="1427.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.2" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="676.2" y="1411.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="679.2" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="676.2" y="1395.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="679.2" y="1406.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="676.2" y="1379.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="676.2" y="1363.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="676.2" y="1347.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="679.2" y="1358.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="676.2" y="1331.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="679.2" y="1342.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="676.2" y="1315.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="679.2" y="1326.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="676.2" y="1299.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="679.2" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="676.2" y="1283.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="679.2" y="1294.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="676.2" y="1267.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="679.2" y="1278.0"></text>
</g>
<g>
<title>FieldLayoutBuilder::FieldLayoutBuilder(Symbol const*, InstanceKlass const*, ConstantPool*, Array&lt;unsigned short&gt;*, bool, FieldLayoutInfo*) (1 samples, 0.10%)</title><rect x="676.2" y="1251.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="679.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.doMergeWithoutDead (1 samples, 0.10%)</title><rect x="677.4" y="1539.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="680.4" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure$ReadEliminationMergeProcessor.merge (1 samples, 0.10%)</title><rect x="677.4" y="1523.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="680.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure$MergeProcessor.merge (1 samples, 0.10%)</title><rect x="677.4" y="1507.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure$MergeProcessor.intersectVirtualObjects (1 samples, 0.10%)</title><rect x="677.4" y="1491.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.4" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeBlockState.getStateCount (1 samples, 0.10%)</title><rect x="677.4" y="1475.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.4" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="677.4" y="1459.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="680.4" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="677.4" y="1443.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="680.4" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="677.4" y="1427.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="680.4" y="1438.0"></text>
</g>
<g>
<title>CompilationPolicy::can_be_compiled(methodHandle const&amp;, int) (1 samples, 0.10%)</title><rect x="677.4" y="1411.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="680.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.merge (2 samples, 0.21%)</title><rect x="678.7" y="1587.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.7" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.merge (2 samples, 0.21%)</title><rect x="678.7" y="1571.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="681.7" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.doMergeWithoutDead (1 samples, 0.10%)</title><rect x="679.9" y="1555.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="682.9" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure$ReadEliminationMergeProcessor.merge (1 samples, 0.10%)</title><rect x="679.9" y="1539.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="682.9" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure$MergeProcessor.merge (1 samples, 0.10%)</title><rect x="679.9" y="1523.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.9" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure$MergeProcessor.getPhis (1 samples, 0.10%)</title><rect x="679.9" y="1507.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.9" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.phis (1 samples, 0.10%)</title><rect x="679.9" y="1491.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.9" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/FilteredNodeIterable.filter (1 samples, 0.10%)</title><rect x="679.9" y="1475.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="682.9" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/FilteredNodeIterable.and (1 samples, 0.10%)</title><rect x="679.9" y="1459.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="682.9" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodePredicate.and (1 samples, 0.10%)</title><rect x="679.9" y="1443.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="682.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processBlock (4 samples, 0.42%)</title><rect x="681.1" y="1587.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="684.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processBlock (4 samples, 0.42%)</title><rect x="681.1" y="1571.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processNode (3 samples, 0.31%)</title><rect x="682.4" y="1555.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.4" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processNode (3 samples, 0.31%)</title><rect x="682.4" y="1539.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="685.4" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processArrayLength (1 samples, 0.10%)</title><rect x="682.4" y="1523.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processLoad (1 samples, 0.10%)</title><rect x="682.4" y="1507.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="685.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationBlockState.addReadCache (1 samples, 0.10%)</title><rect x="682.4" y="1491.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="685.4" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.10%)</title><rect x="682.4" y="1475.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="685.4" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.grow (1 samples, 0.10%)</title><rect x="682.4" y="1459.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="685.4" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.10%)</title><rect x="682.4" y="1443.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="685.4" y="1454.0"></text>
</g>
<g>
<title>Klass::check_array_allocation_length(int, int, Thread*) (1 samples, 0.10%)</title><rect x="682.4" y="1427.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="685.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processLoadField (1 samples, 0.10%)</title><rect x="683.6" y="1523.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="686.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processNode (1 samples, 0.10%)</title><rect x="684.8" y="1523.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processNodeInternal (1 samples, 0.10%)</title><rect x="684.8" y="1507.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.8" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processVirtualizable (1 samples, 0.10%)</title><rect x="684.8" y="1491.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="687.8" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.virtualize (1 samples, 0.10%)</title><rect x="684.8" y="1475.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.8" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/StoreFieldNode.virtualize (1 samples, 0.10%)</title><rect x="684.8" y="1459.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.8" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/VirtualizerTool.setVirtualEntry (1 samples, 0.10%)</title><rect x="684.8" y="1443.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="687.8" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/VirtualizerToolImpl.setVirtualEntry (1 samples, 0.10%)</title><rect x="684.8" y="1427.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="687.8" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValueNode.isIllegalConstant (1 samples, 0.10%)</title><rect x="684.8" y="1411.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.8" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/PrimitiveConstant.equals (1 samples, 0.10%)</title><rect x="684.8" y="1395.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.8" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.applyEffects (1 samples, 0.10%)</title><rect x="686.0" y="1619.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.0" y="1630.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.10%)</title><rect x="686.0" y="1603.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="689.0" y="1614.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="686.0" y="1587.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="689.0" y="1598.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="686.0" y="1571.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="689.0" y="1582.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="686.0" y="1555.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="689.0" y="1566.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="686.0" y="1539.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="689.0" y="1550.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.10%)</title><rect x="686.0" y="1523.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="689.0" y="1534.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.10%)</title><rect x="686.0" y="1507.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="689.0" y="1518.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="686.0" y="1491.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="689.0" y="1502.0"></text>
</g>
<g>
<title>LinkResolver::check_method_accessability(Klass*, Klass*, Klass*, methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="686.0" y="1475.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="689.0" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="687.3" y="1747.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="690.3" y="1758.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="687.3" y="1731.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="690.3" y="1742.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="687.3" y="1715.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.3" y="1726.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/target/Backend.emitBackEnd (105 samples, 10.94%)</title><rect x="688.5" y="1763.0" width="129.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.5" y="1774.0">org/graalvm/comp..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitBackEnd (105 samples, 10.94%)</title><rect x="688.5" y="1747.0" width="129.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.5" y="1758.0">org/graalvm/comp..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitCode (16 samples, 1.67%)</title><rect x="688.5" y="1731.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="691.5" y="1742.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCode (15 samples, 1.56%)</title><rect x="688.5" y="1715.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="691.5" y="1726.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCodeBody (10 samples, 1.04%)</title><rect x="689.7" y="1699.0" width="12.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="692.7" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emit (10 samples, 1.04%)</title><rect x="689.7" y="1683.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.7" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend$HotSpotFrameContext.enter (1 samples, 0.10%)</title><rect x="689.7" y="1667.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.7" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emitBlock (9 samples, 0.94%)</title><rect x="691.0" y="1667.0" width="11.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.0" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emitOp (8 samples, 0.83%)</title><rect x="692.2" y="1651.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.2" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/StandardOp$LabelOp.emitCode (1 samples, 0.10%)</title><rect x="692.2" y="1635.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.2" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Assembler.bind (1 samples, 0.10%)</title><rect x="692.2" y="1619.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="695.2" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Label.bind (1 samples, 0.10%)</title><rect x="692.2" y="1603.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="695.2" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.patchJumpTarget (1 samples, 0.10%)</title><rect x="692.2" y="1587.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.2" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Assembler.getByte (1 samples, 0.10%)</title><rect x="692.2" y="1571.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="695.2" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Buffer.getByte (1 samples, 0.10%)</title><rect x="692.2" y="1555.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="695.2" y="1566.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.10%)</title><rect x="692.2" y="1539.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64BlockEndOp.emitCode (4 samples, 0.42%)</title><rect x="693.4" y="1635.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.4" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotReturnOp.emitCode (1 samples, 0.10%)</title><rect x="693.4" y="1619.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.4" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotSafepointOp.emitCode (1 samples, 0.10%)</title><rect x="693.4" y="1603.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="696.4" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotSafepointOp.emitThreadLocalPoll (1 samples, 0.10%)</title><rect x="693.4" y="1587.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="696.4" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64MacroAssembler.movptr (1 samples, 0.10%)</title><rect x="693.4" y="1571.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.4" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.movq (1 samples, 0.10%)</title><rect x="693.4" y="1555.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="696.4" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.movq (1 samples, 0.10%)</title><rect x="693.4" y="1539.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="696.4" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64BaseAssembler.inRC (1 samples, 0.10%)</title><rect x="693.4" y="1523.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotStrategySwitchOp.emitCode (1 samples, 0.10%)</title><rect x="694.6" y="1619.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.6" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/SwitchStrategy$SequentialStrategy.run (1 samples, 0.10%)</title><rect x="694.6" y="1603.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="697.6" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/SwitchStrategy$BaseSwitchClosure.conditionalJumpOrDefault (1 samples, 0.10%)</title><rect x="694.6" y="1587.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.6" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ControlFlow$StrategySwitchOp$SwitchClosure.conditionalJump (1 samples, 0.10%)</title><rect x="694.6" y="1571.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.6" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotStrategySwitchOp$HotSpotSwitchClosure.emitComparison (1 samples, 0.10%)</title><rect x="694.6" y="1555.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="697.6" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.cmpq (1 samples, 0.10%)</title><rect x="694.6" y="1539.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="697.6" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler$AMD64RMOp.emit (1 samples, 0.10%)</title><rect x="694.6" y="1523.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="697.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64BaseAssembler.getRXB (1 samples, 0.10%)</title><rect x="694.6" y="1507.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.6" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Address.getIndex (1 samples, 0.10%)</title><rect x="694.6" y="1491.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="697.6" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ControlFlow$TestBranchOp.emitCode (2 samples, 0.21%)</title><rect x="695.9" y="1619.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.9" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64MacroAssembler.testAndJcc (2 samples, 0.21%)</title><rect x="695.9" y="1603.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.9" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64MacroAssembler.applyRMOpAndJcc (2 samples, 0.21%)</title><rect x="695.9" y="1587.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.jcc (2 samples, 0.21%)</title><rect x="695.9" y="1571.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.jcc (2 samples, 0.21%)</title><rect x="695.9" y="1555.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.9" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Assembler.emitInt (2 samples, 0.21%)</title><rect x="695.9" y="1539.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.9" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Buffer.emitInt (2 samples, 0.21%)</title><rect x="695.9" y="1523.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.9" y="1534.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putInt (1 samples, 0.10%)</title><rect x="695.9" y="1507.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.9" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putIntUnaligned (1 samples, 0.10%)</title><rect x="695.9" y="1491.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.9" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putIntUnaligned (1 samples, 0.10%)</title><rect x="695.9" y="1475.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.9" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putIntParts (1 samples, 0.10%)</title><rect x="695.9" y="1459.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.9" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putShort (1 samples, 0.10%)</title><rect x="695.9" y="1443.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.9" y="1454.0"></text>
</g>
<g>
<title>MemoryAccess&lt;short&gt;::MemoryAccess(JavaThread*, _jobject*, long) (1 samples, 0.10%)</title><rect x="695.9" y="1427.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="698.9" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/Buffer.ensureSize (1 samples, 0.10%)</title><rect x="697.1" y="1507.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="700.1" y="1518.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbaa00000)@0x0000000110020080 (1 samples, 0.10%)</title><rect x="697.1" y="1491.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="700.1" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64LIRInstruction.emitCode (3 samples, 0.31%)</title><rect x="698.3" y="1635.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="701.3" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64BinaryConsumer$MemoryConstOp.emitCode (2 samples, 0.21%)</title><rect x="698.3" y="1619.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.3" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler$AMD64MIOp.emit (2 samples, 0.21%)</title><rect x="698.3" y="1603.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.3" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler$AMD64ImmOp.emitImmediate (1 samples, 0.10%)</title><rect x="698.3" y="1587.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="701.3" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64BaseAssembler$OperandSize$4.emitImmediate (1 samples, 0.10%)</title><rect x="698.3" y="1571.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="701.3" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64BaseAssembler.emitOperandHelper (1 samples, 0.10%)</title><rect x="699.6" y="1587.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.6" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move$MoveToRegOp.emitCode (1 samples, 0.10%)</title><rect x="700.8" y="1619.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="703.8" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move$AbstractMoveOp.emitCode (1 samples, 0.10%)</title><rect x="700.8" y="1603.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.8" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move.move (1 samples, 0.10%)</title><rect x="700.8" y="1587.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.8" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move.stack2reg (1 samples, 0.10%)</title><rect x="700.8" y="1571.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.movl (1 samples, 0.10%)</title><rect x="700.8" y="1555.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64BaseAssembler.prefix (1 samples, 0.10%)</title><rect x="700.8" y="1539.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64BaseAssembler.prefix (1 samples, 0.10%)</title><rect x="700.8" y="1523.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="703.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCodeSuffix (4 samples, 0.42%)</title><rect x="702.0" y="1699.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.0" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (4 samples, 0.42%)</title><rect x="702.0" y="1683.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.0" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (4 samples, 0.42%)</title><rect x="702.0" y="1667.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.0" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.finalizeAddress (4 samples, 0.42%)</title><rect x="702.0" y="1651.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="705.0" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.getCode (4 samples, 0.42%)</title><rect x="702.0" y="1635.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.0" y="1646.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotCodeCacheProvider.installCode (1 samples, 0.10%)</title><rect x="702.0" y="1619.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="705.0" y="1630.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotCodeCacheProvider.logOrDump (1 samples, 0.10%)</title><rect x="702.0" y="1603.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.0" y="1614.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.notifyInstall (1 samples, 0.10%)</title><rect x="702.0" y="1587.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.0" y="1598.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.getVmEventListeners (1 samples, 0.10%)</title><rect x="702.0" y="1571.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="705.0" y="1582.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.10%)</title><rect x="702.0" y="1555.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="705.0" y="1566.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1539.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="705.0" y="1550.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1523.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="705.0" y="1534.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1507.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="705.0" y="1518.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1491.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="705.0" y="1502.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1475.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="705.0" y="1486.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1459.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="705.0" y="1470.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1443.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="705.0" y="1454.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1427.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="705.0" y="1438.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1411.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="705.0" y="1422.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1395.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="705.0" y="1406.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.10%)</title><rect x="702.0" y="1379.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="705.0" y="1390.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.10%)</title><rect x="702.0" y="1363.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="705.0" y="1374.0"></text>
</g>
<g>
<title>SymbolTable::lookup_shared(char const*, int, unsigned int) (1 samples, 0.10%)</title><rect x="702.0" y="1347.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="705.0" y="1358.0"></text>
</g>
<g>
<title>_platform_memcmp (1 samples, 0.10%)</title><rect x="702.0" y="1331.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="705.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.buildCompilationResult (3 samples, 0.31%)</title><rect x="703.2" y="1619.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.2" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitFrontEnd (1 samples, 0.10%)</title><rect x="703.2" y="1603.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.2" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="703.2" y="1587.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.2" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="703.2" y="1571.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.2" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (1 samples, 0.10%)</title><rect x="703.2" y="1555.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="706.2" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="703.2" y="1539.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="703.2" y="1523.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase.run (1 samples, 0.10%)</title><rect x="703.2" y="1507.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/GuardLoweringPhase.run (1 samples, 0.10%)</title><rect x="703.2" y="1491.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="706.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="703.2" y="1475.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="706.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.getGraph (2 samples, 0.21%)</title><rect x="704.5" y="1603.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.5" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.buildInitialGraph (2 samples, 0.21%)</title><rect x="704.5" y="1587.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="707.5" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getSnippet (2 samples, 0.21%)</title><rect x="704.5" y="1571.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="707.5" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (2 samples, 0.21%)</title><rect x="704.5" y="1555.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="707.5" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (2 samples, 0.21%)</title><rect x="704.5" y="1539.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (2 samples, 0.21%)</title><rect x="704.5" y="1523.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (2 samples, 0.21%)</title><rect x="704.5" y="1507.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.5" y="1518.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="704.5" y="1491.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.5" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="704.5" y="1475.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.5" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="704.5" y="1459.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.5" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="704.5" y="1443.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.5" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="704.5" y="1427.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.5" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.10%)</title><rect x="704.5" y="1411.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.5" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.10%)</title><rect x="704.5" y="1395.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.10%)</title><rect x="704.5" y="1379.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="707.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.10%)</title><rect x="704.5" y="1363.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="707.5" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.10%)</title><rect x="704.5" y="1347.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="707.5" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.hashCode (1 samples, 0.10%)</title><rect x="704.5" y="1331.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.unmaskedHashCode (1 samples, 0.10%)</title><rect x="704.5" y="1315.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="707.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.10%)</title><rect x="704.5" y="1299.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.10%)</title><rect x="704.5" y="1283.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.5" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="705.7" y="1491.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.10%)</title><rect x="705.7" y="1475.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="708.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="705.7" y="1459.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.10%)</title><rect x="705.7" y="1443.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.10%)</title><rect x="705.7" y="1427.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="708.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.10%)</title><rect x="705.7" y="1411.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.10%)</title><rect x="705.7" y="1395.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="708.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="705.7" y="1379.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.getEntryState (1 samples, 0.10%)</title><rect x="705.7" y="1363.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="708.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newCompilationResultBuilder (1 samples, 0.10%)</title><rect x="706.9" y="1715.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.9" y="1726.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilderFactory$1.createBuilder (1 samples, 0.10%)</title><rect x="706.9" y="1699.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.9" y="1710.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="706.9" y="1683.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="709.9" y="1694.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="706.9" y="1667.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="709.9" y="1678.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="706.9" y="1651.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="709.9" y="1662.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.10%)</title><rect x="706.9" y="1635.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="709.9" y="1646.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.10%)</title><rect x="706.9" y="1619.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="709.9" y="1630.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="706.9" y="1603.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="709.9" y="1614.0"></text>
</g>
<g>
<title>VerificationType::is_reference_assignable_from(VerificationType const&amp;, ClassVerifier*, bool, Thread*) const (1 samples, 0.10%)</title><rect x="706.9" y="1587.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="709.9" y="1598.0"></text>
</g>
<g>
<title>VerificationType::resolve_and_check_assignability(InstanceKlass*, Symbol*, Symbol*, bool, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="706.9" y="1571.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="709.9" y="1582.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ull&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="706.9" y="1555.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="709.9" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitLIR (89 samples, 9.27%)</title><rect x="708.2" y="1731.0" width="109.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="711.2" y="1742.0">org/graalvm/c..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitLIR0 (89 samples, 9.27%)</title><rect x="708.2" y="1715.0" width="109.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.2" y="1726.0">org/graalvm/c..</text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.computeCodeEmittingOrder (1 samples, 0.10%)</title><rect x="708.2" y="1699.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.2" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.computeCodeEmittingOrder (1 samples, 0.10%)</title><rect x="708.2" y="1683.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.2" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.addPathToCodeEmittingOrder (1 samples, 0.10%)</title><rect x="708.2" y="1667.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.2" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.findAndMarkMostLikelySuccessor (1 samples, 0.10%)</title><rect x="708.2" y="1651.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.2" y="1662.0"></text>
</g>
<g>
<title>java/util/BitSet.get (1 samples, 0.10%)</title><rect x="708.2" y="1635.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.2" y="1646.0"></text>
</g>
<g>
<title>java/util/BitSet.wordIndex (1 samples, 0.10%)</title><rect x="708.2" y="1619.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.2" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.computeLinearScanOrder (1 samples, 0.10%)</title><rect x="709.4" y="1699.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.4" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.computeLinearScanOrder (1 samples, 0.10%)</title><rect x="709.4" y="1683.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.4" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.addPathToLinearScanOrder (1 samples, 0.10%)</title><rect x="709.4" y="1667.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="712.4" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.enqueueSuccessors (1 samples, 0.10%)</title><rect x="709.4" y="1651.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.4" y="1662.0"></text>
</g>
<g>
<title>java/util/BitSet.get (1 samples, 0.10%)</title><rect x="709.4" y="1635.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.4" y="1646.0"></text>
</g>
<g>
<title>java/util/BitSet.wordIndex (1 samples, 0.10%)</title><rect x="709.4" y="1619.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.4" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitLowLevel (51 samples, 5.31%)</title><rect x="710.6" y="1699.0" width="62.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.6" y="1710.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (51 samples, 5.31%)</title><rect x="710.6" y="1683.0" width="62.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.6" y="1694.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (51 samples, 5.31%)</title><rect x="710.6" y="1667.0" width="62.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.6" y="1678.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhaseSuite.run (51 samples, 5.31%)</title><rect x="710.6" y="1651.0" width="62.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.6" y="1662.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (51 samples, 5.31%)</title><rect x="710.6" y="1635.0" width="62.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.6" y="1646.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (51 samples, 5.31%)</title><rect x="710.6" y="1619.0" width="62.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="713.6" y="1630.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext$1.close (1 samples, 0.10%)</title><rect x="711.9" y="1603.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.9" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/CompilationListenerProfiler$1.close (1 samples, 0.10%)</title><rect x="711.9" y="1587.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/JFRCompilerProfiler.notifyCompilerPhaseEvent (1 samples, 0.10%)</title><rect x="711.9" y="1571.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.9" y="1582.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/JFR$CompilerPhaseEvent.write (1 samples, 0.10%)</title><rect x="711.9" y="1555.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="714.9" y="1566.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/JFR$CompilerPhaseEvent.getPhaseToId (1 samples, 0.10%)</title><rect x="711.9" y="1539.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.9" y="1550.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (1 samples, 0.10%)</title><rect x="711.9" y="1523.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.9" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="711.9" y="1507.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.9" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination.run (3 samples, 0.31%)</title><rect x="713.1" y="1603.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="716.1" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination.run (3 samples, 0.31%)</title><rect x="713.1" y="1587.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination$Optimization.doOptimize (3 samples, 0.31%)</title><rect x="713.1" y="1571.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="716.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination$Optimization.solveDataFlow (3 samples, 0.31%)</title><rect x="713.1" y="1555.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="716.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination$Optimization.updateState (1 samples, 0.10%)</title><rect x="714.3" y="1539.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachTemp (1 samples, 0.10%)</title><rect x="714.3" y="1523.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachTemp (1 samples, 0.10%)</title><rect x="714.3" y="1507.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.10%)</title><rect x="714.3" y="1491.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="717.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueConsumer.visitValue (1 samples, 0.10%)</title><rect x="714.3" y="1475.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="717.3" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.isExceptionEntry (1 samples, 0.10%)</title><rect x="715.5" y="1539.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.predecessor (1 samples, 0.10%)</title><rect x="715.5" y="1523.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="718.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanPhase.run (36 samples, 3.75%)</title><rect x="716.8" y="1603.0" width="44.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="719.8" y="1614.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanPhase.run (36 samples, 3.75%)</title><rect x="716.8" y="1587.0" width="44.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="719.8" y="1598.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.allocate (36 samples, 3.75%)</title><rect x="716.8" y="1571.0" width="44.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="719.8" y="1582.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.apply (35 samples, 3.65%)</title><rect x="718.0" y="1555.0" width="43.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.0" y="1566.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.apply (35 samples, 3.65%)</title><rect x="718.0" y="1539.0" width="43.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="721.0" y="1550.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext$1.close (2 samples, 0.21%)</title><rect x="719.2" y="1523.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="722.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/CompilationListenerProfiler$1.close (2 samples, 0.21%)</title><rect x="719.2" y="1507.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/JFRCompilerProfiler.notifyCompilerPhaseEvent (2 samples, 0.21%)</title><rect x="719.2" y="1491.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.2" y="1502.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/JFR$CompilerPhaseEvent.write (2 samples, 0.21%)</title><rect x="719.2" y="1475.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.2" y="1486.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/JFR$CompilerPhaseEvent.getPhaseToId (2 samples, 0.21%)</title><rect x="719.2" y="1459.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.2" y="1470.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.computeIfAbsent (2 samples, 0.21%)</title><rect x="719.2" y="1443.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.10%)</title><rect x="719.2" y="1427.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.2" y="1438.0"></text>
</g>
<g>
<title>Stub&lt;AMD64ArrayEqualsStub.byteArraysEquals&gt; (1 samples, 0.10%)</title><rect x="719.2" y="1411.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.2" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.tabAt (1 samples, 0.10%)</title><rect x="720.5" y="1427.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.getName (1 samples, 0.10%)</title><rect x="721.7" y="1523.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.createName (1 samples, 0.10%)</title><rect x="721.7" y="1507.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.7" y="1518.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.10%)</title><rect x="721.7" y="1491.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.7" y="1502.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.10%)</title><rect x="721.7" y="1475.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.7" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.10%)</title><rect x="721.7" y="1459.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.7" y="1470.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.lastIndexOf (1 samples, 0.10%)</title><rect x="721.7" y="1443.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="724.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.run (2 samples, 0.21%)</title><rect x="722.9" y="1523.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.9" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.assignLocations (2 samples, 0.21%)</title><rect x="722.9" y="1507.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="725.9" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.assignLocations (2 samples, 0.21%)</title><rect x="722.9" y="1491.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.9" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.assignLocations (2 samples, 0.21%)</title><rect x="722.9" y="1475.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.9" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.forEachInput (1 samples, 0.10%)</title><rect x="722.9" y="1459.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.9" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.forEachUse (1 samples, 0.10%)</title><rect x="722.9" y="1443.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.forEach (1 samples, 0.10%)</title><rect x="722.9" y="1427.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="725.9" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/Fields.getCount (1 samples, 0.10%)</title><rect x="722.9" y="1411.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.9" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.forEachOutput (1 samples, 0.10%)</title><rect x="724.1" y="1459.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.1" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.forEachDef (1 samples, 0.10%)</title><rect x="724.1" y="1443.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.1" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.forEach (1 samples, 0.10%)</title><rect x="724.1" y="1427.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.1" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase$1.doValue (1 samples, 0.10%)</title><rect x="724.1" y="1411.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.colorLirOperand (1 samples, 0.10%)</title><rect x="724.1" y="1395.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.1" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.splitChildAtOpId (1 samples, 0.10%)</title><rect x="724.1" y="1379.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.1" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Interval.getSplitChildAtOpId (1 samples, 0.10%)</title><rect x="724.1" y="1363.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.1" y="1374.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="724.1" y="1347.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="727.1" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.run (18 samples, 1.88%)</title><rect x="725.4" y="1523.0" width="22.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.4" y="1534.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.buildIntervals (12 samples, 1.25%)</title><rect x="725.4" y="1507.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.4" y="1518.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSite (1 samples, 0.10%)</title><rect x="725.4" y="1491.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.4" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkCallSiteImpl (1 samples, 0.10%)</title><rect x="725.4" y="1475.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.4" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/CallSite.makeSite (1 samples, 0.10%)</title><rect x="725.4" y="1459.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="728.4" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/BootstrapMethodInvoker.invoke (1 samples, 0.10%)</title><rect x="725.4" y="1443.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.invokeExact_MT (1 samples, 0.10%)</title><rect x="725.4" y="1427.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="725.4" y="1411.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaMetafactory.metafactory (1 samples, 0.10%)</title><rect x="725.4" y="1395.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.buildCallSite (1 samples, 0.10%)</title><rect x="725.4" y="1379.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="728.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.spinInnerClass (1 samples, 0.10%)</title><rect x="725.4" y="1363.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/InnerClassLambdaMetafactory.generateInnerClass (1 samples, 0.10%)</title><rect x="725.4" y="1347.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.defineHiddenClass (1 samples, 0.10%)</title><rect x="725.4" y="1331.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.makeHiddenClassDefiner (1 samples, 0.10%)</title><rect x="725.4" y="1315.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="728.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup$ClassFile.newInstance (1 samples, 0.10%)</title><rect x="725.4" y="1299.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.readConst (1 samples, 0.10%)</title><rect x="725.4" y="1283.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.readUTF8 (1 samples, 0.10%)</title><rect x="725.4" y="1267.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.readUtf (1 samples, 0.10%)</title><rect x="725.4" y="1251.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassReader.readUtf (1 samples, 0.10%)</title><rect x="725.4" y="1235.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.4" y="1246.0"></text>
</g>
<g>
<title>java/util/BitSet.nextSetBit (1 samples, 0.10%)</title><rect x="726.6" y="1491.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.6" y="1502.0"></text>
</g>
<g>
<title>java/lang/Long.numberOfTrailingZeros (1 samples, 0.10%)</title><rect x="726.6" y="1475.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/Integer.numberOfTrailingZeros (1 samples, 0.10%)</title><rect x="726.6" y="1459.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="729.6" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="726.6" y="1443.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="729.6" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="726.6" y="1427.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="729.6" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="726.6" y="1411.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="729.6" y="1422.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="726.6" y="1395.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="729.6" y="1406.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(methodHandle const&amp;, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="726.6" y="1379.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="729.6" y="1390.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, methodHandle const&amp;), methodHandle const&amp;, CompLevel, bool) (1 samples, 0.10%)</title><rect x="726.6" y="1363.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="729.6" y="1374.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, methodHandle const&amp;), methodHandle const&amp;, CompLevel, bool) (1 samples, 0.10%)</title><rect x="726.6" y="1347.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="729.6" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachInput (2 samples, 0.21%)</title><rect x="727.8" y="1491.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.8" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachUse (2 samples, 0.21%)</title><rect x="727.8" y="1475.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="730.8" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (2 samples, 0.21%)</title><rect x="727.8" y="1459.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.8" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase$$Lambda$62.0x0000000800d360d8.visitValue (2 samples, 0.21%)</title><rect x="727.8" y="1443.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.8" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9 (2 samples, 0.21%)</title><rect x="727.8" y="1427.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.8" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.getFirstLirInstructionId (1 samples, 0.10%)</title><rect x="727.8" y="1411.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.8" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.10%)</title><rect x="727.8" y="1395.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.8" y="1406.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (1 samples, 0.10%)</title><rect x="727.8" y="1379.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.8" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/ssa/SSALinearScanLifetimeAnalysisPhase.addRegisterHint (1 samples, 0.10%)</title><rect x="729.1" y="1411.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.1" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.addRegisterHint (1 samples, 0.10%)</title><rect x="729.1" y="1395.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800ba2040.linkToTargetMethod (1 samples, 0.10%)</title><rect x="729.1" y="1379.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH.0x0000000800ba2840.newInvokeSpecial (1 samples, 0.10%)</title><rect x="729.1" y="1363.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.1" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachOutput (4 samples, 0.42%)</title><rect x="730.3" y="1491.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachDef (4 samples, 0.42%)</title><rect x="730.3" y="1475.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.3" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (4 samples, 0.42%)</title><rect x="730.3" y="1459.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="733.3" y="1470.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbbbb000)@0x0000000110024880 (1 samples, 0.10%)</title><rect x="730.3" y="1443.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="733.3" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase$$Lambda$59.0x0000000800d35a60.visitValue (3 samples, 0.31%)</title><rect x="731.5" y="1443.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.5" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$6 (3 samples, 0.31%)</title><rect x="731.5" y="1427.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="734.5" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.addDef (2 samples, 0.21%)</title><rect x="731.5" y="1411.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.5" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.getOrCreateInterval (1 samples, 0.10%)</title><rect x="731.5" y="1395.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.5" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.intervalFor (1 samples, 0.10%)</title><rect x="731.5" y="1379.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.5" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.operandNumber (1 samples, 0.10%)</title><rect x="731.5" y="1363.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="734.5" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.changeSpillDefinitionPos (1 samples, 0.10%)</title><rect x="732.7" y="1395.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/ssa/SSALinearScanLifetimeAnalysisPhase.addRegisterHint (1 samples, 0.10%)</title><rect x="734.0" y="1411.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="737.0" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.addRegisterHint (1 samples, 0.10%)</title><rect x="734.0" y="1395.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="737.0" y="1406.0"></text>
</g>
<g>
<title>java/util/RegularEnumSet.contains (1 samples, 0.10%)</title><rect x="734.0" y="1379.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.0" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachTemp (1 samples, 0.10%)</title><rect x="735.2" y="1491.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="738.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachTemp (1 samples, 0.10%)</title><rect x="735.2" y="1475.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.10%)</title><rect x="735.2" y="1459.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.2" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase$$Lambda$60.0x0000000800d35c88.visitValue (1 samples, 0.10%)</title><rect x="735.2" y="1443.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="738.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.getFirstLirInstructionId (1 samples, 0.10%)</title><rect x="736.4" y="1491.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="739.4" y="1502.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.10%)</title><rect x="736.4" y="1475.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="739.4" y="1486.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (1 samples, 0.10%)</title><rect x="736.4" y="1459.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.4" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.getLastLirInstructionId (1 samples, 0.10%)</title><rect x="737.7" y="1491.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.isLoopEnd (1 samples, 0.10%)</title><rect x="738.9" y="1491.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.9" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets (2 samples, 0.21%)</title><rect x="740.1" y="1507.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.1" y="1518.0"></text>
</g>
<g>
<title>java/util/BitSet.andNot (1 samples, 0.10%)</title><rect x="740.1" y="1491.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="743.1" y="1502.0"></text>
</g>
<g>
<title>java/util/BitSet.recalculateWordsInUse (1 samples, 0.10%)</title><rect x="740.1" y="1475.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.1" y="1486.0"></text>
</g>
<g>
<title>java/util/BitSet.or (1 samples, 0.10%)</title><rect x="741.4" y="1491.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.4" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.computeLocalLiveSets (4 samples, 0.42%)</title><rect x="742.6" y="1507.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.6" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.10%)</title><rect x="742.6" y="1491.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="745.6" y="1502.0"></text>
</g>
<g>
<title>java/util/Objects.checkIndex (1 samples, 0.10%)</title><rect x="742.6" y="1475.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/util/Preconditions.checkIndex (1 samples, 0.10%)</title><rect x="742.6" y="1459.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.6" y="1470.0"></text>
</g>
<g>
<title>java/util/BitSet.&lt;init&gt; (1 samples, 0.10%)</title><rect x="743.8" y="1491.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.8" y="1502.0"></text>
</g>
<g>
<title>java/util/BitSet.initWords (1 samples, 0.10%)</title><rect x="743.8" y="1475.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="746.8" y="1486.0"></text>
</g>
<g>
<title>java/util/BitSet.wordIndex (1 samples, 0.10%)</title><rect x="743.8" y="1459.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="746.8" y="1470.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="743.8" y="1443.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="746.8" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="743.8" y="1427.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="746.8" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="743.8" y="1411.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="746.8" y="1422.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="743.8" y="1395.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="746.8" y="1406.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="743.8" y="1379.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="746.8" y="1390.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="743.8" y="1363.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="746.8" y="1374.0"></text>
</g>
<g>
<title>JVMCIRuntime::get_HotSpotJVMCIRuntime(JVMCIEnv*) (1 samples, 0.10%)</title><rect x="743.8" y="1347.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="746.8" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachOutput (1 samples, 0.10%)</title><rect x="745.0" y="1491.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.0" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachDef (1 samples, 0.10%)</title><rect x="745.0" y="1475.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.0" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.10%)</title><rect x="745.0" y="1459.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueConsumer.visitValue (1 samples, 0.10%)</title><rect x="745.0" y="1443.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="748.0" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase$$Lambda$58.0x0000000800d35810.visitValue (1 samples, 0.10%)</title><rect x="745.0" y="1427.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="748.0" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.lambda$computeLocalLiveSets$3 (1 samples, 0.10%)</title><rect x="745.0" y="1411.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.0" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRValueUtil.isVariable (1 samples, 0.10%)</title><rect x="745.0" y="1395.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.0" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachState (1 samples, 0.10%)</title><rect x="746.3" y="1491.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachState (1 samples, 0.10%)</title><rect x="746.3" y="1475.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="749.3" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanOptimizeSpillPositionPhase.run (1 samples, 0.10%)</title><rect x="747.5" y="1523.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="750.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanOptimizeSpillPositionPhase.optimizeSpillPosition (1 samples, 0.10%)</title><rect x="747.5" y="1507.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="750.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanOptimizeSpillPositionPhase.optimizeInterval (1 samples, 0.10%)</title><rect x="747.5" y="1491.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="750.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanOptimizeSpillPositionPhase$IntervalBlockIterator.next (1 samples, 0.10%)</title><rect x="747.5" y="1475.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.5" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanOptimizeSpillPositionPhase$IntervalBlockIterator.next (1 samples, 0.10%)</title><rect x="747.5" y="1459.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="750.5" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanRegisterAllocationPhase.run (4 samples, 0.42%)</title><rect x="748.7" y="1523.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanRegisterAllocationPhase.allocateRegisters (4 samples, 0.42%)</title><rect x="748.7" y="1507.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/IntervalWalker.walk (4 samples, 0.42%)</title><rect x="748.7" y="1491.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="751.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/IntervalWalker.walkTo (4 samples, 0.42%)</title><rect x="748.7" y="1475.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions (1 samples, 0.10%)</title><rect x="748.7" y="1459.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="751.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.activateCurrent (3 samples, 0.31%)</title><rect x="750.0" y="1459.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.allocFreeRegister (1 samples, 0.10%)</title><rect x="750.0" y="1443.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.0" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.splitWhenPartialRegisterAvailable (1 samples, 0.10%)</title><rect x="750.0" y="1427.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.0" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.initVarsForAlloc (1 samples, 0.10%)</title><rect x="751.2" y="1443.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/RegisterAllocationConfig.getAllocatableRegisters (1 samples, 0.10%)</title><rect x="751.2" y="1427.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.2" y="1438.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/amd64/AMD64HotSpotRegisterConfig.filterAllocatableRegisters (1 samples, 0.10%)</title><rect x="751.2" y="1411.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.2" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/RegisterArray.&lt;init&gt; (1 samples, 0.10%)</title><rect x="751.2" y="1395.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.2" y="1406.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.10%)</title><rect x="751.2" y="1379.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="754.2" y="1390.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="751.2" y="1363.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="754.2" y="1374.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="751.2" y="1347.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="754.2" y="1358.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="751.2" y="1331.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="754.2" y="1342.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="751.2" y="1315.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="754.2" y="1326.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.10%)</title><rect x="751.2" y="1299.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="754.2" y="1310.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.10%)</title><rect x="751.2" y="1283.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="754.2" y="1294.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="751.2" y="1267.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="754.2" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="751.2" y="1251.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="754.2" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.10%)</title><rect x="751.2" y="1235.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="754.2" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.noAllocationPossible (1 samples, 0.10%)</title><rect x="752.4" y="1443.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.callKillsRegisters (1 samples, 0.10%)</title><rect x="752.4" y="1427.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.run (6 samples, 0.62%)</title><rect x="753.6" y="1523.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="756.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.resolveDataFlow (6 samples, 0.62%)</title><rect x="753.6" y="1507.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="756.6" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.optimizeEmptyBlocks (4 samples, 0.42%)</title><rect x="753.6" y="1491.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="756.6" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/cfg/AbstractBlockBase.getPredecessorCount (1 samples, 0.10%)</title><rect x="753.6" y="1475.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.6" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.hasMappings (1 samples, 0.10%)</title><rect x="754.9" y="1475.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="757.9" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.resolveAndAppendMoves (2 samples, 0.21%)</title><rect x="756.1" y="1475.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.1" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.resolveMappings (2 samples, 0.21%)</title><rect x="756.1" y="1459.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="759.1" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.safeToProcessMove (2 samples, 0.21%)</title><rect x="756.1" y="1443.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.1" y="1454.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x000000011001a500 (1 samples, 0.10%)</title><rect x="757.3" y="1427.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="760.3" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.resolveDataFlow0 (1 samples, 0.10%)</title><rect x="758.6" y="1491.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.6" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/ssa/SSALinearScan.createMoveResolver (1 samples, 0.10%)</title><rect x="759.8" y="1491.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="762.8" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/ssa/SSAMoveResolver.&lt;init&gt; (1 samples, 0.10%)</title><rect x="759.8" y="1475.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.8" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/framemap/FrameMap.frameNeedsAllocating (1 samples, 0.10%)</title><rect x="759.8" y="1459.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="762.8" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/framemap/FrameMap.returnAddressSize (1 samples, 0.10%)</title><rect x="759.8" y="1443.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.8" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization.run (3 samples, 0.31%)</title><rect x="761.0" y="1603.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.0" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization.run (3 samples, 0.31%)</title><rect x="761.0" y="1587.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.0" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.apply (3 samples, 0.31%)</title><rect x="761.0" y="1571.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="764.0" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.analyzeBlock (3 samples, 0.31%)</title><rect x="761.0" y="1555.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="764.0" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIR.getLIRforBlock (1 samples, 0.10%)</title><rect x="763.5" y="1539.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="766.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/cfg/BlockMap.get (1 samples, 0.10%)</title><rect x="763.5" y="1523.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase.run (1 samples, 0.10%)</title><rect x="764.7" y="1603.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="767.7" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase.run (1 samples, 0.10%)</title><rect x="764.7" y="1587.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.7" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.build (1 samples, 0.10%)</title><rect x="764.7" y="1571.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="767.7" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processBlock (1 samples, 0.10%)</title><rect x="764.7" y="1555.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.7" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processInstructionBottomUp (1 samples, 0.10%)</title><rect x="764.7" y="1539.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="767.7" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.forEachState (1 samples, 0.10%)</title><rect x="764.7" y="1523.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.forEachState (1 samples, 0.10%)</title><rect x="764.7" y="1507.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker$1.doState (1 samples, 0.10%)</title><rect x="764.7" y="1491.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase$Marker.processState (1 samples, 0.10%)</title><rect x="764.7" y="1475.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase$Marker.processState (1 samples, 0.10%)</title><rect x="764.7" y="1459.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="767.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/RegStackValueSet.addLiveValues (1 samples, 0.10%)</title><rect x="764.7" y="1443.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="767.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/util/IndexedValueMap.visitEach (1 samples, 0.10%)</title><rect x="764.7" y="1427.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="767.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueConsumer.visitValue (1 samples, 0.10%)</title><rect x="764.7" y="1411.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="767.7" y="1422.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="764.7" y="1395.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="767.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/MarkBasePointersPhase.run (5 samples, 0.52%)</title><rect x="765.9" y="1603.0" width="6.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.9" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/MarkBasePointersPhase.run (5 samples, 0.52%)</title><rect x="765.9" y="1587.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.build (5 samples, 0.52%)</title><rect x="765.9" y="1571.0" width="6.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processBlock (3 samples, 0.31%)</title><rect x="765.9" y="1555.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="768.9" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processInstructionBottomUp (1 samples, 0.10%)</title><rect x="765.9" y="1539.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.9" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachOutput (1 samples, 0.10%)</title><rect x="765.9" y="1523.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="768.9" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachDef (1 samples, 0.10%)</title><rect x="765.9" y="1507.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.9" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.updateOutBlock (2 samples, 0.21%)</title><rect x="767.2" y="1539.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="770.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/MarkBasePointersPhase$Marker$BasePointersSet.equals (1 samples, 0.10%)</title><rect x="767.2" y="1523.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.2" y="1534.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="767.2" y="1507.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="770.2" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="767.2" y="1491.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="770.2" y="1502.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="767.2" y="1475.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="770.2" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.10%)</title><rect x="767.2" y="1459.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="770.2" y="1470.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="767.2" y="1443.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="770.2" y="1454.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.10%)</title><rect x="767.2" y="1427.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="770.2" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/MarkBasePointersPhase$Marker$BasePointersSet.putAll (1 samples, 0.10%)</title><rect x="768.4" y="1523.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/UniqueWorkList.add (2 samples, 0.21%)</title><rect x="769.6" y="1555.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.6" y="1566.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (2 samples, 0.21%)</title><rect x="769.6" y="1539.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="772.6" y="1550.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (2 samples, 0.21%)</title><rect x="769.6" y="1523.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.6" y="1534.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.grow (1 samples, 0.10%)</title><rect x="769.6" y="1507.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="772.6" y="1518.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.inc (1 samples, 0.10%)</title><rect x="770.9" y="1507.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="773.9" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="770.9" y="1491.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="773.9" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="770.9" y="1475.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="773.9" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="770.9" y="1459.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="773.9" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="770.9" y="1443.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="773.9" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="770.9" y="1427.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="773.9" y="1438.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="770.9" y="1411.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="773.9" y="1422.0"></text>
</g>
<g>
<title>JVMCIRuntime::get_HotSpotJVMCIRuntime(JVMCIEnv*) (1 samples, 0.10%)</title><rect x="770.9" y="1395.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="773.9" y="1406.0"></text>
</g>
<g>
<title>JVMCIRuntime::initialize(JVMCIEnv*) (1 samples, 0.10%)</title><rect x="770.9" y="1379.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="773.9" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator.run (1 samples, 0.10%)</title><rect x="772.1" y="1603.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.1" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator.run (1 samples, 0.10%)</title><rect x="772.1" y="1587.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator.allocateStackSlots (1 samples, 0.10%)</title><rect x="772.1" y="1571.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="775.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator$Allocator.allocate (1 samples, 0.10%)</title><rect x="772.1" y="1555.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/LSStackSlotAllocator$Allocator.buildIntervals (1 samples, 0.10%)</title><rect x="772.1" y="1539.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="775.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/FixPointIntervalBuilder.build (1 samples, 0.10%)</title><rect x="772.1" y="1523.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.1" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/FixPointIntervalBuilder.processBlock (1 samples, 0.10%)</title><rect x="772.1" y="1507.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.1" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/stackslotalloc/FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp (1 samples, 0.10%)</title><rect x="772.1" y="1491.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.1" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachTemp (1 samples, 0.10%)</title><rect x="772.1" y="1475.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.1" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newLIRGenerator (2 samples, 0.21%)</title><rect x="773.3" y="1699.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="776.3" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="773.3" y="1683.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.3" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="773.3" y="1667.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="776.3" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="773.3" y="1651.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="776.3" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="773.3" y="1635.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.3" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="773.3" y="1619.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.3" y="1630.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="773.3" y="1603.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="776.3" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="773.3" y="1587.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="776.3" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="773.3" y="1571.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="776.3" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="773.3" y="1555.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="776.3" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="773.3" y="1539.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.3" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="773.3" y="1523.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="776.3" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="773.3" y="1507.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="776.3" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="773.3" y="1491.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="776.3" y="1502.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="773.3" y="1475.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="776.3" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="773.3" y="1459.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="776.3" y="1470.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="773.3" y="1443.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="776.3" y="1454.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="773.3" y="1427.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="776.3" y="1438.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="773.3" y="1411.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="776.3" y="1422.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="773.3" y="1395.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="776.3" y="1406.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="773.3" y="1379.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="776.3" y="1390.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="773.3" y="1363.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="776.3" y="1374.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.10%)</title><rect x="773.3" y="1347.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="776.3" y="1358.0"></text>
</g>
<g>
<title>klassVtable::compute_vtable_size_and_num_mirandas(int*, int*, GrowableArray&lt;Method*&gt;*, Klass const*, Array&lt;Method*&gt;*, AccessFlags, unsigned short, Handle, Symbol*, Array&lt;InstanceKlass*&gt;*, Thread*) (1 samples, 0.10%)</title><rect x="773.3" y="1331.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="776.3" y="1342.0"></text>
</g>
<g>
<title>klassVtable::add_new_mirandas_to_lists(GrowableArray&lt;Method*&gt;*, GrowableArray&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) (1 samples, 0.10%)</title><rect x="773.3" y="1315.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="776.3" y="1326.0"></text>
</g>
<g>
<title>klassVtable::is_miranda(Method*, Array&lt;Method*&gt;*, Array&lt;Method*&gt;*, Klass const*, bool) (1 samples, 0.10%)</title><rect x="773.3" y="1299.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="776.3" y="1310.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="773.3" y="1283.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="776.3" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.10%)</title><rect x="773.3" y="1267.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="776.3" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.&lt;init&gt; (1 samples, 0.10%)</title><rect x="774.5" y="1683.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.5" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64MoveFactoryBase$BackupSlotProvider.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="774.5" y="1667.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.5" y="1678.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="774.5" y="1651.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="777.5" y="1662.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="774.5" y="1635.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="777.5" y="1646.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="774.5" y="1619.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="777.5" y="1630.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.10%)</title><rect x="774.5" y="1603.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="777.5" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="774.5" y="1587.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="777.5" y="1598.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="774.5" y="1571.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="777.5" y="1582.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="774.5" y="1555.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="777.5" y="1566.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.10%)</title><rect x="774.5" y="1539.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="777.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newNodeLIRBuilder (4 samples, 0.42%)</title><rect x="775.8" y="1699.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.8" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotNodeLIRBuilder.&lt;init&gt; (4 samples, 0.42%)</title><rect x="775.8" y="1683.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.8" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeLIRBuilder.&lt;init&gt; (4 samples, 0.42%)</title><rect x="775.8" y="1667.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.8" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.&lt;init&gt; (4 samples, 0.42%)</title><rect x="775.8" y="1651.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.8" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchRuleRegistry.lookup (2 samples, 0.21%)</title><rect x="775.8" y="1635.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.8" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchRuleRegistry.createRules (2 samples, 0.21%)</title><rect x="775.8" y="1619.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.8" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeMatchRules_MatchStatementSet.statements (2 samples, 0.21%)</title><rect x="775.8" y="1603.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.8" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="775.8" y="1587.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="778.8" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="775.8" y="1571.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="778.8" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="775.8" y="1555.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.8" y="1566.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="775.8" y="1539.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.8" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="775.8" y="1523.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.8" y="1534.0"></text>
</g>
<g>
<title>java/lang/String.concat (1 samples, 0.10%)</title><rect x="775.8" y="1507.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="778.8" y="1518.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.simpleConcat (1 samples, 0.10%)</title><rect x="775.8" y="1491.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.8" y="1502.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mix (1 samples, 0.10%)</title><rect x="775.8" y="1475.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.8" y="1486.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.10%)</title><rect x="775.8" y="1459.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.8" y="1470.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.10%)</title><rect x="775.8" y="1443.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.8" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.&lt;init&gt; (1 samples, 0.10%)</title><rect x="777.0" y="1587.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="780.0" y="1598.0"></text>
</g>
<g>
<title>InterpreterRuntime::anewarray(JavaThread*, ConstantPool*, int, int) (1 samples, 0.10%)</title><rect x="777.0" y="1571.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="780.0" y="1582.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.10%)</title><rect x="777.0" y="1555.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="780.0" y="1566.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.10%)</title><rect x="777.0" y="1539.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="780.0" y="1550.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.10%)</title><rect x="777.0" y="1523.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="780.0" y="1534.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWordImpl**) const (1 samples, 0.10%)</title><rect x="777.0" y="1507.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="780.0" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/TTY.isSuppressed (1 samples, 0.10%)</title><rect x="778.2" y="1635.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="781.2" y="1646.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.10%)</title><rect x="778.2" y="1619.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="781.2" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotNodeLIRBuilder.createDebugInfoBuilder (1 samples, 0.10%)</title><rect x="779.5" y="1635.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.5" y="1646.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="779.5" y="1619.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="782.5" y="1630.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="779.5" y="1603.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="782.5" y="1614.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="779.5" y="1587.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="782.5" y="1598.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="779.5" y="1571.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="782.5" y="1582.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.10%)</title><rect x="779.5" y="1555.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="782.5" y="1566.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.10%)</title><rect x="779.5" y="1539.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="782.5" y="1550.0"></text>
</g>
<g>
<title>Rewriter::rewrite_bytecodes(Thread*) (1 samples, 0.10%)</title><rect x="779.5" y="1523.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="782.5" y="1534.0"></text>
</g>
<g>
<title>Rewriter::scan_method(Thread*, Method*, bool, bool*) (1 samples, 0.10%)</title><rect x="779.5" y="1507.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="782.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (30 samples, 3.12%)</title><rect x="780.7" y="1699.0" width="36.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="783.7" y="1710.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (30 samples, 3.12%)</title><rect x="780.7" y="1683.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.7" y="1694.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.run (30 samples, 3.12%)</title><rect x="780.7" y="1667.0" width="36.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="783.7" y="1678.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.run (30 samples, 3.12%)</title><rect x="780.7" y="1651.0" width="36.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.7" y="1662.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.emitBlock (28 samples, 2.92%)</title><rect x="780.7" y="1635.0" width="34.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="783.7" y="1646.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.doBlock (28 samples, 2.92%)</title><rect x="780.7" y="1619.0" width="34.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="783.7" y="1630.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.createPhiIn (1 samples, 0.10%)</title><rect x="781.9" y="1603.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.9" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.getExactPhiKind (1 samples, 0.10%)</title><rect x="781.9" y="1587.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/LIRKind.mergeReferenceInformation (1 samples, 0.10%)</title><rect x="781.9" y="1571.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="784.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.doRoot (24 samples, 2.50%)</title><rect x="783.1" y="1603.0" width="29.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.1" y="1614.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitNode (24 samples, 2.50%)</title><rect x="783.1" y="1587.0" width="29.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="786.1" y="1598.0">or..</text>
</g>
<g>
<title>itable stub (1 samples, 0.10%)</title><rect x="783.1" y="1571.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="786.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64AddressNode.generate (2 samples, 0.21%)</title><rect x="784.4" y="1571.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.4" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/LIRKind.combineDerived (1 samples, 0.10%)</title><rect x="784.4" y="1555.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="787.4" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/LIRKind.makeDerivedReference (1 samples, 0.10%)</title><rect x="784.4" y="1539.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.4" y="1550.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x000000011001e880 (1 samples, 0.10%)</title><rect x="784.4" y="1523.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="787.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.setResult (1 samples, 0.10%)</title><rect x="785.6" y="1555.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="788.6" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/CompressionNode.generate (1 samples, 0.10%)</title><rect x="786.8" y="1571.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.emitUncompress (1 samples, 0.10%)</title><rect x="786.8" y="1555.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="789.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/LIRGenerator.emitLoadConstant (1 samples, 0.10%)</title><rect x="786.8" y="1539.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="789.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/LIRGenerator.emitMoveConstant (1 samples, 0.10%)</title><rect x="786.8" y="1523.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.8" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotMoveFactory.createLoad (1 samples, 0.10%)</title><rect x="786.8" y="1507.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="789.8" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotMoveFactory.createLoad (1 samples, 0.10%)</title><rect x="786.8" y="1491.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="789.8" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/DynamicDeoptimizeNode.generate (2 samples, 0.21%)</title><rect x="788.1" y="1571.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.state (1 samples, 0.10%)</title><rect x="788.1" y="1555.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateFor (1 samples, 0.10%)</title><rect x="788.1" y="1539.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="791.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateForWithExceptionEdge (1 samples, 0.10%)</title><rect x="788.1" y="1523.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="791.1" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/DebugInfoBuilder.build (1 samples, 0.10%)</title><rect x="788.1" y="1507.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.1" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotDebugInfoBuilder.computeFrameForState (1 samples, 0.10%)</title><rect x="788.1" y="1491.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="791.1" y="1502.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotCodeCacheProvider.interpreterFrameSize (1 samples, 0.10%)</title><rect x="788.1" y="1475.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.1" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.emitDeoptimize (1 samples, 0.10%)</title><rect x="789.3" y="1555.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="792.3" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.moveDeoptValuesToThread (1 samples, 0.10%)</title><rect x="789.3" y="1539.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.moveValueToThread (1 samples, 0.10%)</title><rect x="789.3" y="1523.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64ArithmeticLIRGenerator.emitStore (1 samples, 0.10%)</title><rect x="789.3" y="1507.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="792.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64ArithmeticLIRGenerator.emitStoreConst (1 samples, 0.10%)</title><rect x="789.3" y="1491.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="792.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InvokeNode.generate (1 samples, 0.10%)</title><rect x="790.5" y="1571.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="793.5" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitInvoke (1 samples, 0.10%)</title><rect x="790.5" y="1555.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.5" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateWithExceptionEdge (1 samples, 0.10%)</title><rect x="790.5" y="1539.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateForWithExceptionEdge (1 samples, 0.10%)</title><rect x="790.5" y="1523.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/DebugInfoBuilder.build (1 samples, 0.10%)</title><rect x="790.5" y="1507.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotDebugInfoBuilder.computeFrameForState (1 samples, 0.10%)</title><rect x="790.5" y="1491.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/DebugInfoBuilder.computeFrameForState (1 samples, 0.10%)</title><rect x="790.5" y="1475.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="793.5" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotDebugInfoBuilder.computeFrameForState (1 samples, 0.10%)</title><rect x="790.5" y="1459.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="793.5" y="1470.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotCodeCacheProvider.interpreterFrameSize (1 samples, 0.10%)</title><rect x="790.5" y="1443.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.5" y="1454.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.interpreterFrameSize (1 samples, 0.10%)</title><rect x="790.5" y="1427.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.5" y="1438.0"></text>
</g>
<g>
<title>c2v_interpreterFrameSize(JNIEnv_*, _jobject*, _jobject*) (1 samples, 0.10%)</title><rect x="790.5" y="1411.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="793.5" y="1422.0"></text>
</g>
<g>
<title>HotSpotJVMCI::wrap(oopDesc*) (1 samples, 0.10%)</title><rect x="790.5" y="1395.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="793.5" y="1406.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2646132ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 2646132ull&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.10%)</title><rect x="790.5" y="1379.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="793.5" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/ConditionalNode.generate (1 samples, 0.10%)</title><rect x="791.7" y="1571.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="794.7" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitConditional (1 samples, 0.10%)</title><rect x="791.7" y="1555.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.7" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitConditional (1 samples, 0.10%)</title><rect x="791.7" y="1539.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="794.7" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.emitConditionalMove (1 samples, 0.10%)</title><rect x="791.7" y="1523.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.7" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.emitCompare (1 samples, 0.10%)</title><rect x="791.7" y="1507.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.7" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.emitRawCompare (1 samples, 0.10%)</title><rect x="791.7" y="1491.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.7" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64ArithmeticLIRGenerator.emitCompareOp (1 samples, 0.10%)</title><rect x="791.7" y="1475.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.7" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64BinaryConsumer$Op.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="791.7" y="1459.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.7" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.create (1 samples, 0.10%)</title><rect x="791.7" y="1443.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.7" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.10%)</title><rect x="791.7" y="1427.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.10%)</title><rect x="791.7" y="1411.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="794.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scan (1 samples, 0.10%)</title><rect x="791.7" y="1395.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/FieldsScanner.scan (1 samples, 0.10%)</title><rect x="791.7" y="1379.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scanField (1 samples, 0.10%)</title><rect x="791.7" y="1363.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.getAnnotation (1 samples, 0.10%)</title><rect x="791.7" y="1347.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.10%)</title><rect x="791.7" y="1331.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.10%)</title><rect x="791.7" y="1315.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.7" y="1326.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.10%)</title><rect x="791.7" y="1299.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="794.7" y="1310.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.10%)</title><rect x="791.7" y="1283.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="794.7" y="1294.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.10%)</title><rect x="791.7" y="1267.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="794.7" y="1278.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.&lt;init&gt; (1 samples, 0.10%)</title><rect x="791.7" y="1251.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.7" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.putMapEntries (1 samples, 0.10%)</title><rect x="791.7" y="1235.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="794.7" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.10%)</title><rect x="791.7" y="1219.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.7" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/ForeignCall.generate (7 samples, 0.73%)</title><rect x="793.0" y="1571.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="796.0" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitForeignCall (7 samples, 0.73%)</title><rect x="793.0" y="1555.0" width="8.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.0" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateWithExceptionEdge (1 samples, 0.10%)</title><rect x="793.0" y="1539.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.0" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/ForeignCall.canDeoptimize (1 samples, 0.10%)</title><rect x="793.0" y="1523.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/spi/ForeignCallDescriptor.canDeoptimize (1 samples, 0.10%)</title><rect x="793.0" y="1507.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.0" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="793.0" y="1491.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="796.0" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="793.0" y="1475.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="796.0" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="793.0" y="1459.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="796.0" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="793.0" y="1443.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="796.0" y="1454.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="793.0" y="1427.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="796.0" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="793.0" y="1411.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="796.0" y="1422.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="793.0" y="1395.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="796.0" y="1406.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="793.0" y="1379.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="796.0" y="1390.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="793.0" y="1363.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="796.0" y="1374.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="793.0" y="1347.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="796.0" y="1358.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="793.0" y="1331.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="796.0" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (6 samples, 0.62%)</title><rect x="794.2" y="1539.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="797.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (6 samples, 0.62%)</title><rect x="794.2" y="1523.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.finalizeAddress (6 samples, 0.62%)</title><rect x="794.2" y="1507.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.2" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.getCode (6 samples, 0.62%)</title><rect x="794.2" y="1491.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.2" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.buildCompilationResult (6 samples, 0.62%)</title><rect x="794.2" y="1475.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.2" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitFrontEnd (1 samples, 0.10%)</title><rect x="794.2" y="1459.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="797.2" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="794.2" y="1443.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="797.2" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="794.2" y="1427.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="797.2" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (1 samples, 0.10%)</title><rect x="794.2" y="1411.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="794.2" y="1395.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.2" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="794.2" y="1379.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="797.2" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="794.2" y="1363.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="797.2" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (1 samples, 0.10%)</title><rect x="794.2" y="1347.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.2" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (1 samples, 0.10%)</title><rect x="794.2" y="1331.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="797.2" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (1 samples, 0.10%)</title><rect x="794.2" y="1315.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.2" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (1 samples, 0.10%)</title><rect x="794.2" y="1299.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="797.2" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (1 samples, 0.10%)</title><rect x="794.2" y="1283.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.performReplacement (1 samples, 0.10%)</title><rect x="794.2" y="1267.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="797.2" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addOrUniqueWithInputs (1 samples, 0.10%)</title><rect x="794.2" y="1251.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.uniqueHelper (1 samples, 0.10%)</title><rect x="794.2" y="1235.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.2" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addHelper (1 samples, 0.10%)</title><rect x="794.2" y="1219.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="797.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.initialize (1 samples, 0.10%)</title><rect x="794.2" y="1203.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="797.2" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.10%)</title><rect x="794.2" y="1187.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="797.2" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.10%)</title><rect x="794.2" y="1171.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="797.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$1.nodeAdded (1 samples, 0.10%)</title><rect x="794.2" y="1155.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="797.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.add (1 samples, 0.10%)</title><rect x="794.2" y="1139.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="797.2" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.10%)</title><rect x="794.2" y="1123.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/target/Backend.emitBackEnd (2 samples, 0.21%)</title><rect x="795.4" y="1459.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.4" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitBackEnd (2 samples, 0.21%)</title><rect x="795.4" y="1443.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.4" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitCode (1 samples, 0.10%)</title><rect x="795.4" y="1427.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.4" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newCompilationResultBuilder (1 samples, 0.10%)</title><rect x="795.4" y="1411.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotBackend.updateStub (1 samples, 0.10%)</title><rect x="795.4" y="1395.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="798.4" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/StandardOp$SaveRegistersOp.getMap (1 samples, 0.10%)</title><rect x="795.4" y="1379.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.4" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/StandardOp$SaveRegistersOp.indexForStackSlot (1 samples, 0.10%)</title><rect x="795.4" y="1363.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.4" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64FrameMap.offsetForStackSlot (1 samples, 0.10%)</title><rect x="795.4" y="1347.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.4" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/framemap/FrameMap.offsetForStackSlot (1 samples, 0.10%)</title><rect x="795.4" y="1331.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.4" y="1342.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/StackSlot.isInCallerFrame (1 samples, 0.10%)</title><rect x="795.4" y="1315.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.4" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitLIR (1 samples, 0.10%)</title><rect x="796.7" y="1427.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.7" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/LIRCompilerBackend.emitLIR0 (1 samples, 0.10%)</title><rect x="796.7" y="1411.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.7" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.10%)</title><rect x="796.7" y="1395.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.10%)</title><rect x="796.7" y="1379.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="799.7" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.run (1 samples, 0.10%)</title><rect x="796.7" y="1363.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.run (1 samples, 0.10%)</title><rect x="796.7" y="1347.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.emitBlock (1 samples, 0.10%)</title><rect x="796.7" y="1331.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.doBlock (1 samples, 0.10%)</title><rect x="796.7" y="1315.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.doRoot (1 samples, 0.10%)</title><rect x="796.7" y="1299.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitNode (1 samples, 0.10%)</title><rect x="796.7" y="1283.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.7" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/amd64/AMD64ArrayIndexOfNode.generate (1 samples, 0.10%)</title><rect x="796.7" y="1267.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.7" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.emitArrayIndexOf (1 samples, 0.10%)</title><rect x="796.7" y="1251.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.7" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64ArrayIndexOfOp.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="796.7" y="1235.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.create (1 samples, 0.10%)</title><rect x="796.7" y="1219.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.7" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.10%)</title><rect x="796.7" y="1203.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.7" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.10%)</title><rect x="796.7" y="1187.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scan (1 samples, 0.10%)</title><rect x="796.7" y="1171.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/FieldsScanner.scan (1 samples, 0.10%)</title><rect x="796.7" y="1155.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scanField (1 samples, 0.10%)</title><rect x="796.7" y="1139.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$LIRFieldsScanner.scanField (1 samples, 0.10%)</title><rect x="796.7" y="1123.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="799.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$LIRFieldsScanner.getOperandModeAnnotation (1 samples, 0.10%)</title><rect x="796.7" y="1107.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.getAnnotation (1 samples, 0.10%)</title><rect x="796.7" y="1091.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.10%)</title><rect x="796.7" y="1075.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.10%)</title><rect x="796.7" y="1059.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.7" y="1070.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.10%)</title><rect x="796.7" y="1043.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="799.7" y="1054.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.10%)</title><rect x="796.7" y="1027.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.7" y="1038.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.10%)</title><rect x="796.7" y="1011.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.7" y="1022.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseMemberValue (1 samples, 0.10%)</title><rect x="796.7" y="995.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="799.7" y="1006.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseArray (1 samples, 0.10%)</title><rect x="796.7" y="979.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="990.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseEnumArray (1 samples, 0.10%)</title><rect x="796.7" y="963.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="974.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseArrayElements (1 samples, 0.10%)</title><rect x="796.7" y="947.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.7" y="958.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$$Lambda$31.0x0000000800b6a168.get (1 samples, 0.10%)</title><rect x="796.7" y="931.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.7" y="942.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.lambda$parseEnumArray$1 (1 samples, 0.10%)</title><rect x="796.7" y="915.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.7" y="926.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseEnumValue (1 samples, 0.10%)</title><rect x="796.7" y="899.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.7" y="910.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSig (1 samples, 0.10%)</title><rect x="796.7" y="883.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.7" y="894.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSig (1 samples, 0.10%)</title><rect x="796.7" y="867.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="799.7" y="878.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSignature (1 samples, 0.10%)</title><rect x="796.7" y="851.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="799.7" y="862.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.10%)</title><rect x="796.7" y="835.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.7" y="846.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.10%)</title><rect x="796.7" y="819.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.7" y="830.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseClassTypeSignature (1 samples, 0.10%)</title><rect x="796.7" y="803.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.7" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/ForeignCallStub.getGraph (3 samples, 0.31%)</title><rect x="797.9" y="1459.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="800.9" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/GraphKit.inlineInvokes (3 samples, 0.31%)</title><rect x="797.9" y="1443.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.9" y="1454.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/GraphKit.inline (3 samples, 0.31%)</title><rect x="797.9" y="1427.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.9" y="1438.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.21%)</title><rect x="797.9" y="1411.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.9" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.21%)</title><rect x="797.9" y="1395.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="800.9" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (2 samples, 0.21%)</title><rect x="797.9" y="1379.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.9" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (2 samples, 0.21%)</title><rect x="797.9" y="1363.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.9" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (2 samples, 0.21%)</title><rect x="797.9" y="1347.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="800.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (2 samples, 0.21%)</title><rect x="797.9" y="1331.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="800.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (2 samples, 0.21%)</title><rect x="797.9" y="1315.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="800.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.create (1 samples, 0.10%)</title><rect x="797.9" y="1299.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="800.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.build (1 samples, 0.10%)</title><rect x="797.9" y="1283.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="800.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.computeBlockOrder (1 samples, 0.10%)</title><rect x="797.9" y="1267.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.computeBlockOrder (1 samples, 0.10%)</title><rect x="797.9" y="1251.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="800.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.log (1 samples, 0.10%)</title><rect x="797.9" y="1235.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.9" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="799.1" y="1299.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.1" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.10%)</title><rect x="799.1" y="1283.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="802.1" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.10%)</title><rect x="799.1" y="1267.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="802.1" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfNull (1 samples, 0.10%)</title><rect x="799.1" y="1251.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="802.1" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.10%)</title><rect x="799.1" y="1235.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="802.1" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.10%)</title><rect x="799.1" y="1219.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.1" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createTarget (1 samples, 0.10%)</title><rect x="799.1" y="1203.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.1" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.copy (1 samples, 0.10%)</title><rect x="799.1" y="1187.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.&lt;init&gt; (1 samples, 0.10%)</title><rect x="799.1" y="1171.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="802.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.10%)</title><rect x="799.1" y="1155.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.1" y="1166.0"></text>
</g>
<g>
<title>G1BarrierSet::write_region(MemRegion) (1 samples, 0.10%)</title><rect x="799.1" y="1139.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="802.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inline (1 samples, 0.10%)</title><rect x="800.4" y="1411.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.4" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.10%)</title><rect x="800.4" y="1395.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="803.4" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.10%)</title><rect x="800.4" y="1379.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.4" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (1 samples, 0.10%)</title><rect x="800.4" y="1363.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.4" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (1 samples, 0.10%)</title><rect x="800.4" y="1347.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.4" y="1358.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="800.4" y="1331.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateInstance (1 samples, 0.10%)</title><rect x="800.4" y="1315.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.4" y="1326.0"></text>
</g>
<g>
<title>JavaThread::set_thread_state(JavaThreadState) (1 samples, 0.10%)</title><rect x="800.4" y="1299.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="803.4" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/IntegerSwitchNode.generate (1 samples, 0.10%)</title><rect x="801.6" y="1571.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.6" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitSwitch (1 samples, 0.10%)</title><rect x="801.6" y="1555.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="804.6" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/LIRGenerator.emitStrategySwitch (1 samples, 0.10%)</title><rect x="801.6" y="1539.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.6" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.hasherFor (1 samples, 0.10%)</title><rect x="801.6" y="1523.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.6" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/hashing/IntHasher.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="801.6" y="1507.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.6" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/NullCheckNode.generate (2 samples, 0.21%)</title><rect x="802.8" y="1571.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.8" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.state (2 samples, 0.21%)</title><rect x="802.8" y="1555.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.8" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.getFrameState (1 samples, 0.10%)</title><rect x="802.8" y="1539.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="805.8" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateFor (1 samples, 0.10%)</title><rect x="804.0" y="1539.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="807.0" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateForWithExceptionEdge (1 samples, 0.10%)</title><rect x="804.0" y="1523.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/DebugInfoBuilder.build (1 samples, 0.10%)</title><rect x="804.0" y="1507.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="807.0" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotDebugInfoBuilder.computeFrameForState (1 samples, 0.10%)</title><rect x="804.0" y="1491.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="807.0" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="804.0" y="1475.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="807.0" y="1486.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="804.0" y="1459.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="807.0" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="804.0" y="1443.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="807.0" y="1454.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.10%)</title><rect x="804.0" y="1427.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="807.0" y="1438.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.10%)</title><rect x="804.0" y="1411.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="807.0" y="1422.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, DirectiveSet*, Thread*) (1 samples, 0.10%)</title><rect x="804.0" y="1395.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="807.0" y="1406.0"></text>
</g>
<g>
<title>CompileBroker::compile_method_base(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, bool, Thread*) (1 samples, 0.10%)</title><rect x="804.0" y="1379.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="807.0" y="1390.0"></text>
</g>
<g>
<title>Mutex::lock(Thread*) (1 samples, 0.10%)</title><rect x="804.0" y="1363.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="807.0" y="1374.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="804.0" y="1347.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="807.0" y="1358.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="804.0" y="1331.0" width="1.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="807.0" y="1342.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="804.0" y="1315.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="807.0" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/memory/ReadNode.generate (2 samples, 0.21%)</title><rect x="805.3" y="1571.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.3" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64ArithmeticLIRGenerator.emitLoad (1 samples, 0.10%)</title><rect x="805.3" y="1555.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="808.3" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.toRegisterKind (1 samples, 0.10%)</title><rect x="805.3" y="1539.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.state (1 samples, 0.10%)</title><rect x="806.5" y="1555.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.5" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateFor (1 samples, 0.10%)</title><rect x="806.5" y="1539.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.5" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.stateForWithExceptionEdge (1 samples, 0.10%)</title><rect x="806.5" y="1523.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="809.5" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/DebugInfoBuilder.build (1 samples, 0.10%)</title><rect x="806.5" y="1507.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="809.5" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotDebugInfoBuilder.computeFrameForState (1 samples, 0.10%)</title><rect x="806.5" y="1491.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="809.5" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/DebugInfoBuilder.computeFrameForState (1 samples, 0.10%)</title><rect x="806.5" y="1475.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="809.5" y="1486.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/BytecodeFrame.&lt;init&gt; (1 samples, 0.10%)</title><rect x="806.5" y="1459.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.5" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/spi/ArithmeticLIRLowerable.generate (4 samples, 0.42%)</title><rect x="807.7" y="1571.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.7" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AddNode.generate (3 samples, 0.31%)</title><rect x="807.7" y="1555.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="810.7" y="1566.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x000000011001e880 (1 samples, 0.10%)</title><rect x="807.7" y="1539.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="810.7" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/ArithmeticLIRGenerator.emitAdd (1 samples, 0.10%)</title><rect x="809.0" y="1539.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="812.0" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/ArithmeticLIRGenerator.emitAdd (1 samples, 0.10%)</title><rect x="809.0" y="1523.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="812.0" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/ArithmeticLIRGenerator.emitAddOrSub (1 samples, 0.10%)</title><rect x="809.0" y="1507.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.0" y="1518.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.10%)</title><rect x="809.0" y="1491.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="812.0" y="1502.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.10%)</title><rect x="809.0" y="1475.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="812.0" y="1486.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.10%)</title><rect x="809.0" y="1459.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="812.0" y="1470.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/BinaryArithmeticNode.shouldSwapInputs (1 samples, 0.10%)</title><rect x="810.2" y="1539.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="813.2" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValueNode.hasUsagesOtherThan (1 samples, 0.10%)</title><rect x="810.2" y="1523.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.2" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/AndNode.generate (1 samples, 0.10%)</title><rect x="811.4" y="1555.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="814.4" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64ArithmeticLIRGenerator.emitAnd (1 samples, 0.10%)</title><rect x="811.4" y="1539.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="814.4" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64ArithmeticLIRGenerator.emitAnd (1 samples, 0.10%)</title><rect x="811.4" y="1523.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.4" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64ArithmeticLIRGenerator.emitBinary (1 samples, 0.10%)</title><rect x="811.4" y="1507.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="814.4" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64ArithmeticLIRGenerator.emitBinaryConst (1 samples, 0.10%)</title><rect x="811.4" y="1491.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.4" y="1502.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="811.4" y="1475.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="814.4" y="1486.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="811.4" y="1459.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="814.4" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="811.4" y="1443.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="814.4" y="1454.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.10%)</title><rect x="811.4" y="1427.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="814.4" y="1438.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.10%)</title><rect x="811.4" y="1411.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="814.4" y="1422.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="811.4" y="1395.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="814.4" y="1406.0"></text>
</g>
<g>
<title>StackMapFrame::set_locals_from_arg(methodHandle const&amp;, VerificationType, Thread*) (1 samples, 0.10%)</title><rect x="811.4" y="1379.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="814.4" y="1390.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.10%)</title><rect x="811.4" y="1363.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="814.4" y="1374.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.10%)</title><rect x="811.4" y="1347.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="814.4" y="1358.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.10%)</title><rect x="811.4" y="1331.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="814.4" y="1342.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.10%)</title><rect x="811.4" y="1315.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="814.4" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/LIRGenerator.getBlockScope (2 samples, 0.21%)</title><rect x="812.6" y="1603.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="815.6" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/gen/LIRGenerator$BlockScopeImpl.doBlockStart (2 samples, 0.21%)</title><rect x="812.6" y="1587.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.6" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/cfg/AbstractBlockBase.isAligned (1 samples, 0.10%)</title><rect x="813.9" y="1571.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.matchBlock (2 samples, 0.21%)</title><rect x="815.1" y="1635.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.1" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.matchBlock (2 samples, 0.21%)</title><rect x="815.1" y="1619.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="818.1" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.matchComplexExpressions (2 samples, 0.21%)</title><rect x="815.1" y="1603.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="818.1" y="1614.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchStatement.generate (2 samples, 0.21%)</title><rect x="815.1" y="1587.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.1" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.matchShape (2 samples, 0.21%)</title><rect x="815.1" y="1571.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="818.1" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.matchShape (2 samples, 0.21%)</title><rect x="815.1" y="1555.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.1" y="1566.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.getInput (1 samples, 0.10%)</title><rect x="815.1" y="1539.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.1" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Position.get (1 samples, 0.10%)</title><rect x="815.1" y="1523.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.1" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.matchShape (1 samples, 0.10%)</title><rect x="816.3" y="1539.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.3" y="1550.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.getInput (1 samples, 0.10%)</title><rect x="816.3" y="1523.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.3" y="1534.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Position.get (1 samples, 0.10%)</title><rect x="816.3" y="1507.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="819.3" y="1518.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNode (1 samples, 0.10%)</title><rect x="816.3" y="1491.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="819.3" y="1502.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.10%)</title><rect x="816.3" y="1475.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.3" y="1486.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.getSuites (2 samples, 0.21%)</title><rect x="817.6" y="1795.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="820.6" y="1806.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/SuitesProviderBase.getDefaultSuites (2 samples, 0.21%)</title><rect x="817.6" y="1779.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.6" y="1790.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/AddressLoweringHotSpotSuitesProvider.createSuites (2 samples, 0.21%)</title><rect x="817.6" y="1763.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.6" y="1774.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotSuitesProvider.createSuites (2 samples, 0.21%)</title><rect x="817.6" y="1747.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.6" y="1758.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/DefaultSuitesCreator.createSuites (2 samples, 0.21%)</title><rect x="817.6" y="1731.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.6" y="1742.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/tiers/Suites.createSuites (2 samples, 0.21%)</title><rect x="817.6" y="1715.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.6" y="1726.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/CommunityCompilerConfiguration.createHighTier (1 samples, 0.10%)</title><rect x="817.6" y="1699.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.6" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/HighTier.&lt;init&gt; (1 samples, 0.10%)</title><rect x="817.6" y="1683.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.6" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.&lt;init&gt; (1 samples, 0.10%)</title><rect x="817.6" y="1667.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.6" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.&lt;init&gt; (1 samples, 0.10%)</title><rect x="817.6" y="1651.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="820.6" y="1662.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="817.6" y="1635.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="820.6" y="1646.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.10%)</title><rect x="817.6" y="1619.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="820.6" y="1630.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/CommunityCompilerConfiguration.createMidTier (1 samples, 0.10%)</title><rect x="818.8" y="1699.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="821.8" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/MidTier.&lt;init&gt; (1 samples, 0.10%)</title><rect x="818.8" y="1683.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="821.8" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/MidTier.createLoopPolicies (1 samples, 0.10%)</title><rect x="818.8" y="1667.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.8" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.createGraph (10 samples, 1.04%)</title><rect x="820.0" y="1811.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.0" y="1822.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotReplacementsImpl.getIntrinsicGraph (9 samples, 0.94%)</title><rect x="820.0" y="1795.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.0" y="1806.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getIntrinsicGraph (9 samples, 0.94%)</title><rect x="820.0" y="1779.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.0" y="1790.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.21%)</title><rect x="820.0" y="1763.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.0" y="1774.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.21%)</title><rect x="820.0" y="1747.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="823.0" y="1758.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (2 samples, 0.21%)</title><rect x="820.0" y="1731.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="823.0" y="1742.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (2 samples, 0.21%)</title><rect x="820.0" y="1715.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.0" y="1726.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (2 samples, 0.21%)</title><rect x="820.0" y="1699.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.0" y="1710.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (2 samples, 0.21%)</title><rect x="820.0" y="1683.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.0" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (2 samples, 0.21%)</title><rect x="820.0" y="1667.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.0" y="1678.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.create (1 samples, 0.10%)</title><rect x="820.0" y="1651.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.0" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.build (1 samples, 0.10%)</title><rect x="820.0" y="1635.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.0" y="1646.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.10%)</title><rect x="821.2" y="1651.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.2" y="1662.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getMethodSubstitution (7 samples, 0.73%)</title><rect x="822.5" y="1763.0" width="8.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.5" y="1774.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.lookupInvocation (7 samples, 0.73%)</title><rect x="822.5" y="1747.0" width="8.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="825.5" y="1758.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.get (7 samples, 0.73%)</title><rect x="822.5" y="1731.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.5" y="1742.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.flushDeferrables (7 samples, 0.73%)</title><rect x="822.5" y="1715.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="825.5" y="1726.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins$1.run (7 samples, 0.73%)</title><rect x="822.5" y="1699.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.5" y="1710.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="822.5" y="1683.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.5" y="1694.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="822.5" y="1667.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.5" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="822.5" y="1651.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.5" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="822.5" y="1635.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="825.5" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="822.5" y="1619.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="825.5" y="1630.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="822.5" y="1603.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="825.5" y="1614.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="822.5" y="1587.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.5" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="822.5" y="1571.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.5" y="1582.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="822.5" y="1555.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="825.5" y="1566.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="822.5" y="1539.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="825.5" y="1550.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="822.5" y="1523.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="825.5" y="1534.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="822.5" y="1507.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="825.5" y="1518.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="822.5" y="1491.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="825.5" y="1502.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="822.5" y="1475.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="825.5" y="1486.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="822.5" y="1459.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="825.5" y="1470.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.10%)</title><rect x="822.5" y="1443.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="825.5" y="1454.0"></text>
</g>
<g>
<title>HierarchyVisitor&lt;FindMethodsByErasedSig&gt;::run(InstanceKlass*) (1 samples, 0.10%)</title><rect x="822.5" y="1427.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="825.5" y="1438.0"></text>
</g>
<g>
<title>HierarchyVisitor&lt;FindMethodsByErasedSig&gt;::push(InstanceKlass*, FindMethodsByErasedSig*) (1 samples, 0.10%)</title><rect x="822.5" y="1411.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="825.5" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/PluginFactory_AESCryptSubstitutions.registerPlugins (1 samples, 0.10%)</title><rect x="823.7" y="1683.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.7" y="1694.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="823.7" y="1667.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.7" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="823.7" y="1651.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.7" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="823.7" y="1635.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="826.7" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="823.7" y="1619.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="826.7" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="823.7" y="1603.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.7" y="1614.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="823.7" y="1587.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="826.7" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="823.7" y="1571.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="826.7" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="823.7" y="1555.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="826.7" y="1566.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="823.7" y="1539.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="826.7" y="1550.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="823.7" y="1523.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="826.7" y="1534.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="823.7" y="1507.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="826.7" y="1518.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="823.7" y="1491.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="826.7" y="1502.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="823.7" y="1475.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="826.7" y="1486.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="823.7" y="1459.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="826.7" y="1470.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="823.7" y="1443.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="826.7" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::set_package(ClassLoaderData*, PackageEntry*, Thread*) (1 samples, 0.10%)</title><rect x="823.7" y="1427.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="826.7" y="1438.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(Symbol const*, int, int) (1 samples, 0.10%)</title><rect x="823.7" y="1411.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="826.7" y="1422.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.10%)</title><rect x="823.7" y="1395.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="826.7" y="1406.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.10%)</title><rect x="823.7" y="1379.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="826.7" y="1390.0"></text>
</g>
<g>
<title>_platform_memcmp (1 samples, 0.10%)</title><rect x="823.7" y="1363.0" width="1.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="826.7" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/PluginFactory_HotSpotReplacementsUtil.registerPlugins (1 samples, 0.10%)</title><rect x="824.9" y="1683.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="827.9" y="1694.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.10%)</title><rect x="824.9" y="1667.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="827.9" y="1678.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.10%)</title><rect x="824.9" y="1651.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="827.9" y="1662.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.10%)</title><rect x="824.9" y="1635.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="827.9" y="1646.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.10%)</title><rect x="824.9" y="1619.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="827.9" y="1630.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.10%)</title><rect x="824.9" y="1603.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="827.9" y="1614.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="824.9" y="1587.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="827.9" y="1598.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/arraycopy/PluginFactory_ArrayCopyCallNode.registerPlugins (1 samples, 0.10%)</title><rect x="826.2" y="1683.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.2" y="1694.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="826.2" y="1667.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.2" y="1678.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="826.2" y="1651.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="829.2" y="1662.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="826.2" y="1635.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="829.2" y="1646.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="826.2" y="1619.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="829.2" y="1630.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="826.2" y="1603.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="829.2" y="1614.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="826.2" y="1587.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.2" y="1598.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="826.2" y="1571.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="829.2" y="1582.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="826.2" y="1555.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="829.2" y="1566.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="826.2" y="1539.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="829.2" y="1550.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="826.2" y="1523.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="829.2" y="1534.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="826.2" y="1507.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="829.2" y="1518.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="826.2" y="1491.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="829.2" y="1502.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="826.2" y="1475.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="829.2" y="1486.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="826.2" y="1459.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="829.2" y="1470.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, ClassInstanceInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="826.2" y="1443.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="829.2" y="1454.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.10%)</title><rect x="826.2" y="1427.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="829.2" y="1438.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.10%)</title><rect x="826.2" y="1411.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="829.2" y="1422.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices$1$1.hasNext (2 samples, 0.21%)</title><rect x="827.4" y="1683.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.4" y="1694.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (2 samples, 0.21%)</title><rect x="827.4" y="1667.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.4" y="1678.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$LayerLookupIterator.hasNext (2 samples, 0.21%)</title><rect x="827.4" y="1651.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="830.4" y="1662.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (2 samples, 0.21%)</title><rect x="827.4" y="1635.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.4" y="1646.0"></text>
</g>
<g>
<title>java/lang/Class.forName (2 samples, 0.21%)</title><rect x="827.4" y="1619.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.4" y="1630.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.21%)</title><rect x="827.4" y="1603.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.4" y="1614.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClass (2 samples, 0.21%)</title><rect x="827.4" y="1587.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="830.4" y="1598.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (2 samples, 0.21%)</title><rect x="827.4" y="1571.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="830.4" y="1582.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.21%)</title><rect x="827.4" y="1555.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="830.4" y="1566.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="827.4" y="1539.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.4" y="1550.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="827.4" y="1523.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="830.4" y="1534.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="827.4" y="1507.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.4" y="1518.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="827.4" y="1491.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="830.4" y="1502.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="827.4" y="1475.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="830.4" y="1486.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="827.4" y="1459.0" width="1.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="830.4" y="1470.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="827.4" y="1443.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="830.4" y="1454.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.10%)</title><rect x="827.4" y="1427.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="830.4" y="1438.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.10%)</title><rect x="827.4" y="1411.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="830.4" y="1422.0"></text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 0.10%)</title><rect x="827.4" y="1395.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="830.4" y="1406.0"></text>
</g>
<g>
<title>InstanceKlass::mark_dependent_nmethods(KlassDepChange&amp;) (1 samples, 0.10%)</title><rect x="827.4" y="1379.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="830.4" y="1390.0"></text>
</g>
<g>
<title>nmethod::is_alive() const (1 samples, 0.10%)</title><rect x="827.4" y="1363.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="830.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.10%)</title><rect x="828.6" y="1539.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.6" y="1550.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.10%)</title><rect x="828.6" y="1523.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.6" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.10%)</title><rect x="828.6" y="1507.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="831.6" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.10%)</title><rect x="828.6" y="1491.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="831.6" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.10%)</title><rect x="828.6" y="1475.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.6" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.10%)</title><rect x="828.6" y="1459.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.6" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.10%)</title><rect x="828.6" y="1443.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="831.6" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.10%)</title><rect x="828.6" y="1427.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.6" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (1 samples, 0.10%)</title><rect x="828.6" y="1411.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.6" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.charsFromByteBuffer (1 samples, 0.10%)</title><rect x="828.6" y="1395.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="831.6" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices$1$1.next (1 samples, 0.10%)</title><rect x="829.9" y="1683.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="832.9" y="1694.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices.openJVMCITo (1 samples, 0.10%)</title><rect x="829.9" y="1667.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.9" y="1678.0"></text>
</g>
<g>
<title>java/lang/Module.isOpen (1 samples, 0.10%)</title><rect x="829.9" y="1651.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="832.9" y="1662.0"></text>
</g>
<g>
<title>java/lang/Module.implIsExportedOrOpen (1 samples, 0.10%)</title><rect x="829.9" y="1635.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="832.9" y="1646.0"></text>
</g>
<g>
<title>java/lang/Module.isReflectivelyExportedOrOpen (1 samples, 0.10%)</title><rect x="829.9" y="1619.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="832.9" y="1630.0"></text>
</g>
<g>
<title>java/lang/WeakPairMap.get (1 samples, 0.10%)</title><rect x="829.9" y="1603.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="832.9" y="1614.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.10%)</title><rect x="829.9" y="1587.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.9" y="1598.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.10%)</title><rect x="829.9" y="1571.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="832.9" y="1582.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph$Builder.build (1 samples, 0.10%)</title><rect x="831.1" y="1795.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="834.1" y="1806.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.&lt;init&gt; (1 samples, 0.10%)</title><rect x="831.1" y="1779.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.1" y="1790.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/InliningLog.&lt;init&gt; (1 samples, 0.10%)</title><rect x="831.1" y="1763.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="834.1" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.10%)</title><rect x="831.1" y="1747.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.1" y="1758.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.10%)</title><rect x="831.1" y="1731.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.1" y="1742.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.10%)</title><rect x="831.1" y="1715.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.1" y="1726.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.10%)</title><rect x="831.1" y="1699.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="834.1" y="1710.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.10%)</title><rect x="831.1" y="1683.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.1" y="1694.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.10%)</title><rect x="831.1" y="1667.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.1" y="1678.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.10%)</title><rect x="831.1" y="1651.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.1" y="1662.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.10%)</title><rect x="831.1" y="1635.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.1" y="1646.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.10%)</title><rect x="831.1" y="1619.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="834.1" y="1630.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.10%)</title><rect x="831.1" y="1603.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.1" y="1614.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.10%)</title><rect x="831.1" y="1587.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="834.1" y="1598.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.10%)</title><rect x="831.1" y="1571.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.1" y="1582.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.10%)</title><rect x="831.1" y="1555.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.1" y="1566.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.10%)</title><rect x="831.1" y="1539.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.1" y="1550.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.10%)</title><rect x="831.1" y="1523.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="834.1" y="1534.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (1 samples, 0.10%)</title><rect x="831.1" y="1507.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="834.1" y="1518.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMethodref (1 samples, 0.10%)</title><rect x="831.1" y="1491.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.1" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/SymbolTable.addConstantMemberReference (1 samples, 0.10%)</title><rect x="831.1" y="1475.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.1" y="1486.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.10%)</title><rect x="831.1" y="1459.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="834.1" y="1470.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="831.1" y="1443.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="834.1" y="1454.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.10%)</title><rect x="831.1" y="1427.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="834.1" y="1438.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="831.1" y="1411.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="834.1" y="1422.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.10%)</title><rect x="831.1" y="1395.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="834.1" y="1406.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.10%)</title><rect x="831.1" y="1379.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="834.1" y="1390.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.10%)</title><rect x="831.1" y="1363.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="834.1" y="1374.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="831.1" y="1347.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="834.1" y="1358.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="831.1" y="1331.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="834.1" y="1342.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.10%)</title><rect x="831.1" y="1315.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="834.1" y="1326.0"></text>
</g>
<g>
<title>jdk/vm/ci/runtime/JVMCI.getRuntime (2 samples, 0.21%)</title><rect x="832.3" y="1939.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.3" y="1950.0"></text>
</g>
<g>
<title>jdk/vm/ci/runtime/JVMCI.initializeRuntime (2 samples, 0.21%)</title><rect x="832.3" y="1923.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="835.3" y="1934.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.runtime (2 samples, 0.21%)</title><rect x="832.3" y="1907.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.3" y="1918.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.&lt;init&gt; (2 samples, 0.21%)</title><rect x="832.3" y="1891.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.3" y="1902.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCICompilerConfig.getCompilerFactory (1 samples, 0.10%)</title><rect x="832.3" y="1875.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.3" y="1886.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCICompilerConfig.getJVMCICompilerFactories (1 samples, 0.10%)</title><rect x="832.3" y="1859.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.3" y="1870.0"></text>
</g>
<g>
<title>jdk/vm/ci/services/JVMCIServiceLocator.getProviders (1 samples, 0.10%)</title><rect x="832.3" y="1843.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="835.3" y="1854.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalJVMCIServiceLocator.getProvider (1 samples, 0.10%)</title><rect x="832.3" y="1827.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.3" y="1838.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.10%)</title><rect x="832.3" y="1811.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.3" y="1822.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.10%)</title><rect x="832.3" y="1795.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="835.3" y="1806.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.10%)</title><rect x="832.3" y="1779.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.3" y="1790.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.10%)</title><rect x="832.3" y="1763.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="835.3" y="1774.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.10%)</title><rect x="832.3" y="1747.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.3" y="1758.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.10%)</title><rect x="832.3" y="1731.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.3" y="1742.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.10%)</title><rect x="832.3" y="1715.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.3" y="1726.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.10%)</title><rect x="832.3" y="1699.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.3" y="1710.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.10%)</title><rect x="832.3" y="1683.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="835.3" y="1694.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.10%)</title><rect x="832.3" y="1667.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="835.3" y="1678.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.10%)</title><rect x="832.3" y="1651.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="835.3" y="1662.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.10%)</title><rect x="832.3" y="1635.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="835.3" y="1646.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="832.3" y="1619.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="835.3" y="1630.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, ClassLoadInfo const*, ClassFileParser::Publicity, Thread*) (1 samples, 0.10%)</title><rect x="832.3" y="1603.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="835.3" y="1614.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.10%)</title><rect x="832.3" y="1587.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="835.3" y="1598.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.10%)</title><rect x="832.3" y="1571.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="835.3" y="1582.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotVMConfigStore.&lt;init&gt; (1 samples, 0.10%)</title><rect x="833.5" y="1875.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="836.5" y="1886.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.readConfiguration (1 samples, 0.10%)</title><rect x="833.5" y="1859.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.5" y="1870.0"></text>
</g>
<g>
<title>c2v_readConfiguration(JNIEnv_*) (1 samples, 0.10%)</title><rect x="833.5" y="1843.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="836.5" y="1854.0"></text>
</g>
<g>
<title>readConfiguration0(JNIEnv_*, JVMCIEnv*) (1 samples, 0.10%)</title><rect x="833.5" y="1827.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="836.5" y="1838.0"></text>
</g>
<g>
<title>JVMCIEnv::put_object_at(JVMCIObjectArray, int, JVMCIObject) (1 samples, 0.10%)</title><rect x="833.5" y="1811.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="836.5" y="1822.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.join (1 samples, 0.10%)</title><rect x="834.8" y="1939.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.8" y="1950.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance$1.inputChanged (1 samples, 0.10%)</title><rect x="834.8" y="1923.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="837.8" y="1934.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.10%)</title><rect x="834.8" y="1907.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="837.8" y="1918.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/management/HotSpotGraalManagement$RegistrationThread.run (1 samples, 0.10%)</title><rect x="836.0" y="1939.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.0" y="1950.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.10%)</title><rect x="837.2" y="1939.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.2" y="1950.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList$1.next (1 samples, 0.10%)</title><rect x="837.2" y="1923.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.2" y="1934.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.processNode (1 samples, 0.10%)</title><rect x="838.5" y="1939.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.5" y="1950.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapeClosure.processNode (1 samples, 0.10%)</title><rect x="838.5" y="1923.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.5" y="1934.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.10%)</title><rect x="838.5" y="1907.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="841.5" y="1918.0"></text>
</g>
<g>
<title>sandbox/PokeHttpServer.main (2 samples, 0.21%)</title><rect x="839.7" y="1939.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="842.7" y="1950.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800d64840.linkToTargetMethod (1 samples, 0.10%)</title><rect x="839.7" y="1923.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH.0x0000000800d8b040.invoke (1 samples, 0.10%)</title><rect x="839.7" y="1907.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.7" y="1918.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.10%)</title><rect x="839.7" y="1891.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.7" y="1902.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.stringOf (1 samples, 0.10%)</title><rect x="839.7" y="1875.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="842.7" y="1886.0"></text>
</g>
<g>
<title>java/util/Date.toString (1 samples, 0.10%)</title><rect x="839.7" y="1859.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.7" y="1870.0"></text>
</g>
<g>
<title>java/util/TimeZone.getDisplayName (1 samples, 0.10%)</title><rect x="839.7" y="1843.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="842.7" y="1854.0"></text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility.retrieveDisplayName (1 samples, 0.10%)</title><rect x="839.7" y="1827.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.7" y="1838.0"></text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility.retrieveDisplayNamesImpl (1 samples, 0.10%)</title><rect x="839.7" y="1811.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.7" y="1822.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.getLocalizedObject (1 samples, 0.10%)</title><rect x="839.7" y="1795.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.7" y="1806.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.getLocalizedObjectImpl (1 samples, 0.10%)</title><rect x="839.7" y="1779.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="842.7" y="1790.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.findProviders (1 samples, 0.10%)</title><rect x="839.7" y="1763.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="842.7" y="1774.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.forType (1 samples, 0.10%)</title><rect x="839.7" y="1747.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="842.7" y="1758.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredConstructor (1 samples, 0.10%)</title><rect x="839.7" y="1731.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.7" y="1742.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.10%)</title><rect x="839.7" y="1715.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="842.7" y="1726.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.getExecutableSharedParameterTypes (1 samples, 0.10%)</title><rect x="839.7" y="1699.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.7" y="1710.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="839.7" y="1683.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="842.7" y="1694.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.10%)</title><rect x="839.7" y="1667.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="842.7" y="1678.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="839.7" y="1651.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="842.7" y="1662.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.10%)</title><rect x="839.7" y="1635.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="842.7" y="1646.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::should_create_mdo(methodHandle const&amp;, CompLevel) (1 samples, 0.10%)</title><rect x="839.7" y="1619.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="842.7" y="1630.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="839.7" y="1603.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="842.7" y="1614.0"></text>
</g>
<g>
<title>InstanceKlass::module() const (1 samples, 0.10%)</title><rect x="839.7" y="1587.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="842.7" y="1598.0"></text>
</g>
<g>
<title>java/net/ServerSocket.&lt;init&gt; (1 samples, 0.10%)</title><rect x="840.9" y="1923.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="843.9" y="1934.0"></text>
</g>
<g>
<title>java/net/ServerSocket.&lt;init&gt; (1 samples, 0.10%)</title><rect x="840.9" y="1907.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.9" y="1918.0"></text>
</g>
<g>
<title>java/net/ServerSocket.bind (1 samples, 0.10%)</title><rect x="840.9" y="1891.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.9" y="1902.0"></text>
</g>
<g>
<title>java/net/ServerSocket.getImpl (1 samples, 0.10%)</title><rect x="840.9" y="1875.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.9" y="1886.0"></text>
</g>
<g>
<title>java/net/ServerSocket.createImpl (1 samples, 0.10%)</title><rect x="840.9" y="1859.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.9" y="1870.0"></text>
</g>
<g>
<title>sun/nio/ch/NioSocketImpl.create (1 samples, 0.10%)</title><rect x="840.9" y="1843.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.9" y="1854.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.&lt;clinit&gt; (1 samples, 0.10%)</title><rect x="840.9" y="1827.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="843.9" y="1838.0"></text>
</g>
<g>
<title>sun/nio/ch/Net.inet4FromInt (1 samples, 0.10%)</title><rect x="840.9" y="1811.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="843.9" y="1822.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByAddress (1 samples, 0.10%)</title><rect x="840.9" y="1795.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="843.9" y="1806.0"></text>
</g>
<g>
<title>InterpreterRuntime::build_method_counters(JavaThread*, Method*) (1 samples, 0.10%)</title><rect x="840.9" y="1779.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="843.9" y="1790.0"></text>
</g>
<g>
<title>Method::build_method_counters(Method*, Thread*) (1 samples, 0.10%)</title><rect x="840.9" y="1763.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="843.9" y="1774.0"></text>
</g>
<g>
<title>MethodCounters::allocate(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="840.9" y="1747.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="843.9" y="1758.0"></text>
</g>
<g>
<title>MethodCounters::MethodCounters(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="840.9" y="1731.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="843.9" y="1742.0"></text>
</g>
<g>
<title>thread_start (283 samples, 29.48%)</title><rect x="842.1" y="1939.0" width="347.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="845.1" y="1950.0">thread_start</text>
</g>
<g>
<title>_pthread_start (283 samples, 29.48%)</title><rect x="842.1" y="1923.0" width="347.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="845.1" y="1934.0">_pthread_start</text>
</g>
<g>
<title>thread_native_entry(Thread*) (283 samples, 29.48%)</title><rect x="842.1" y="1907.0" width="347.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="845.1" y="1918.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (283 samples, 29.48%)</title><rect x="842.1" y="1891.0" width="347.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="845.1" y="1902.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (4 samples, 0.42%)</title><rect x="842.1" y="1875.0" width="5.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="845.1" y="1886.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (4 samples, 0.42%)</title><rect x="842.1" y="1859.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="845.1" y="1870.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_length() (1 samples, 0.10%)</title><rect x="842.1" y="1843.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="845.1" y="1854.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.10%)</title><rect x="842.1" y="1827.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="845.1" y="1838.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.10%)</title><rect x="842.1" y="1811.0" width="1.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="845.1" y="1822.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.10%)</title><rect x="842.1" y="1795.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="845.1" y="1806.0"></text>
</g>
<g>
<title>G1Policy::predict_region_non_copy_time_ms(HeapRegion*, bool) const (1 samples, 0.10%)</title><rect x="842.1" y="1779.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="845.1" y="1790.0"></text>
</g>
<g>
<title>G1Analytics::predict_young_other_time_ms(unsigned long) const (1 samples, 0.10%)</title><rect x="842.1" y="1763.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="845.1" y="1774.0"></text>
</g>
<g>
<title>AbsSeq::dsd() const (1 samples, 0.10%)</title><rect x="842.1" y="1747.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="845.1" y="1758.0"></text>
</g>
<g>
<title>Monitor::wait_without_safepoint_check(long) (3 samples, 0.31%)</title><rect x="843.4" y="1843.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="846.4" y="1854.0"></text>
</g>
<g>
<title>os::PlatformMonitor::wait(long) (3 samples, 0.31%)</title><rect x="843.4" y="1827.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="846.4" y="1838.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.21%)</title><rect x="843.4" y="1811.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="846.4" y="1822.0"></text>
</g>
<g>
<title>si_module_with_name.modules (1 samples, 0.10%)</title><rect x="845.8" y="1811.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="848.8" y="1822.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="847.1" y="1875.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="850.1" y="1886.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.10%)</title><rect x="847.1" y="1859.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="850.1" y="1870.0"></text>
</g>
<g>
<title>InlineCacheBuffer::update_inline_caches() (1 samples, 0.10%)</title><rect x="847.1" y="1843.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="850.1" y="1854.0"></text>
</g>
<g>
<title>StubQueue::remove_all() (1 samples, 0.10%)</title><rect x="847.1" y="1827.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="850.1" y="1838.0"></text>
</g>
<g>
<title>ICStub::finalize() (1 samples, 0.10%)</title><rect x="847.1" y="1811.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="850.1" y="1822.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.10%)</title><rect x="847.1" y="1795.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="850.1" y="1806.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.10%)</title><rect x="847.1" y="1779.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="850.1" y="1790.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (1 samples, 0.10%)</title><rect x="848.3" y="1859.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="851.3" y="1870.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.10%)</title><rect x="848.3" y="1843.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="851.3" y="1854.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (269 samples, 28.02%)</title><rect x="849.5" y="1875.0" width="330.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="852.5" y="1886.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (248 samples, 25.83%)</title><rect x="849.5" y="1859.0" width="304.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="852.5" y="1870.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (128 samples, 13.33%)</title><rect x="850.7" y="1843.0" width="157.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="853.7" y="1854.0">CompileBroker::invok..</text>
</g>
<g>
<title>Arena::~Arena() (1 samples, 0.10%)</title><rect x="850.7" y="1827.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="853.7" y="1838.0"></text>
</g>
<g>
<title>Arena::destruct_contents() (1 samples, 0.10%)</title><rect x="850.7" y="1811.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="853.7" y="1822.0"></text>
</g>
<g>
<title>Chunk::operator delete(void*) (1 samples, 0.10%)</title><rect x="850.7" y="1795.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="853.7" y="1806.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.10%)</title><rect x="850.7" y="1779.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="853.7" y="1790.0"></text>
</g>
<g>
<title>CompileBroker::post_compile(CompilerThread*, CompileTask*, bool, ciEnv*, int, char const*) (1 samples, 0.10%)</title><rect x="852.0" y="1827.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="855.0" y="1838.0"></text>
</g>
<g>
<title>FormatStringEventLog&lt;256ul&gt;::log(Thread*, char const*, ...) (1 samples, 0.10%)</title><rect x="852.0" y="1811.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="855.0" y="1822.0"></text>
</g>
<g>
<title>jio_vsnprintf (1 samples, 0.10%)</title><rect x="852.0" y="1795.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="855.0" y="1806.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 0.10%)</title><rect x="852.0" y="1779.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="855.0" y="1790.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.10%)</title><rect x="852.0" y="1763.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="855.0" y="1774.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 0.10%)</title><rect x="852.0" y="1747.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="855.0" y="1758.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 0.10%)</title><rect x="852.0" y="1731.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="855.0" y="1742.0"></text>
</g>
<g>
<title>__vfprintf (1 samples, 0.10%)</title><rect x="852.0" y="1715.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="855.0" y="1726.0"></text>
</g>
<g>
<title>CompileBroker::update_compile_perf_data(CompilerThread*, methodHandle const&amp;, bool) (2 samples, 0.21%)</title><rect x="853.2" y="1827.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="856.2" y="1838.0"></text>
</g>
<g>
<title>Symbol::as_C_string() const (1 samples, 0.10%)</title><rect x="853.2" y="1811.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="856.2" y="1822.0"></text>
</g>
<g>
<title>jio_snprintf (1 samples, 0.10%)</title><rect x="854.4" y="1811.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="857.4" y="1822.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 0.10%)</title><rect x="854.4" y="1795.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="857.4" y="1806.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.10%)</title><rect x="854.4" y="1779.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="857.4" y="1790.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 0.10%)</title><rect x="854.4" y="1763.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="857.4" y="1774.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 0.10%)</title><rect x="854.4" y="1747.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="857.4" y="1758.0"></text>
</g>
<g>
<title>__vfprintf (1 samples, 0.10%)</title><rect x="854.4" y="1731.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="857.4" y="1742.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (2 samples, 0.21%)</title><rect x="855.7" y="1827.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="858.7" y="1838.0"></text>
</g>
<g>
<title>CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool, long, long) (2 samples, 0.21%)</title><rect x="855.7" y="1811.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="858.7" y="1822.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (1 samples, 0.10%)</title><rect x="855.7" y="1795.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="858.7" y="1806.0"></text>
</g>
<g>
<title>Symbol::print_symbol_on(outputStream*) const (1 samples, 0.10%)</title><rect x="855.7" y="1779.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="858.7" y="1790.0"></text>
</g>
<g>
<title>os::strdup(char const*, MemoryType) (1 samples, 0.10%)</title><rect x="855.7" y="1763.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="858.7" y="1774.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.10%)</title><rect x="855.7" y="1747.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="858.7" y="1758.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.10%)</title><rect x="856.9" y="1795.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="859.9" y="1806.0"></text>
</g>
<g>
<title>os::vsnprintf(char*, unsigned long, char const*, __va_list_tag*) (1 samples, 0.10%)</title><rect x="856.9" y="1779.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="859.9" y="1790.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.10%)</title><rect x="856.9" y="1763.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="859.9" y="1774.0"></text>
</g>
<g>
<title>_vsnprintf (1 samples, 0.10%)</title><rect x="856.9" y="1747.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="859.9" y="1758.0"></text>
</g>
<g>
<title>__v2printf (1 samples, 0.10%)</title><rect x="856.9" y="1731.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="859.9" y="1742.0"></text>
</g>
<g>
<title>free (1 samples, 0.10%)</title><rect x="856.9" y="1715.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="859.9" y="1726.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (115 samples, 11.98%)</title><rect x="858.1" y="1827.0" width="141.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="861.1" y="1838.0">Compiler::compile_..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (115 samples, 11.98%)</title><rect x="858.1" y="1811.0" width="141.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="861.1" y="1822.0">Compilation::Compi..</text>
</g>
<g>
<title>Compilation::compile_method() (115 samples, 11.98%)</title><rect x="858.1" y="1795.0" width="141.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="861.1" y="1806.0">Compilation::compi..</text>
</g>
<g>
<title>Compilation::compile_java_method() (95 samples, 9.90%)</title><rect x="858.1" y="1779.0" width="116.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="861.1" y="1790.0">Compilation::c..</text>
</g>
<g>
<title>Compilation::build_hir() (51 samples, 5.31%)</title><rect x="858.1" y="1763.0" width="62.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="861.1" y="1774.0">Compil..</text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (44 samples, 4.58%)</title><rect x="858.1" y="1747.0" width="54.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="861.1" y="1758.0">IR::I..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (44 samples, 4.58%)</title><rect x="858.1" y="1731.0" width="54.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="861.1" y="1742.0">IRSco..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (44 samples, 4.58%)</title><rect x="858.1" y="1715.0" width="54.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="861.1" y="1726.0">Graph..</text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.21%)</title><rect x="858.1" y="1699.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="861.1" y="1710.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (2 samples, 0.21%)</title><rect x="858.1" y="1683.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="861.1" y="1694.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.21%)</title><rect x="858.1" y="1667.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="861.1" y="1678.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.21%)</title><rect x="858.1" y="1651.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="861.1" y="1662.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_range(ciBytecodeStream*) (1 samples, 0.10%)</title><rect x="858.1" y="1635.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="861.1" y="1646.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.10%)</title><rect x="859.4" y="1635.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="862.4" y="1646.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::BasicBlock(MethodLiveness*, int, int) (1 samples, 0.10%)</title><rect x="859.4" y="1619.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="862.4" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (41 samples, 4.27%)</title><rect x="860.6" y="1699.0" width="50.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="863.6" y="1710.0">Graph..</text>
</g>
<g>
<title>GraphBuilder::connect_to_end(BlockBegin*) (2 samples, 0.21%)</title><rect x="860.6" y="1683.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="863.6" y="1694.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (2 samples, 0.21%)</title><rect x="860.6" y="1667.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="863.6" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (39 samples, 4.06%)</title><rect x="863.0" y="1683.0" width="48.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="866.0" y="1694.0">Grap..</text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.10%)</title><rect x="863.0" y="1667.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="866.0" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.31%)</title><rect x="864.3" y="1667.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="867.3" y="1678.0"></text>
</g>
<g>
<title>MemoryBuffer::load(LoadField*) (1 samples, 0.10%)</title><rect x="864.3" y="1651.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="867.3" y="1662.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.10%)</title><rect x="865.5" y="1651.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="868.5" y="1662.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="865.5" y="1635.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="868.5" y="1646.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="865.5" y="1619.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="868.5" y="1630.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="865.5" y="1603.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="868.5" y="1614.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="865.5" y="1587.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="868.5" y="1598.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.10%)</title><rect x="865.5" y="1571.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="868.5" y="1582.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.10%)</title><rect x="865.5" y="1555.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="868.5" y="1566.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.10%)</title><rect x="865.5" y="1539.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="868.5" y="1550.0"></text>
</g>
<g>
<title>ciField::constant_value() (1 samples, 0.10%)</title><rect x="866.7" y="1651.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="869.7" y="1662.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;548980ull, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 548980ull&gt;::oop_access_barrier(void*) (1 samples, 0.10%)</title><rect x="866.7" y="1635.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="869.7" y="1646.0"></text>
</g>
<g>
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (1 samples, 0.10%)</title><rect x="868.0" y="1667.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="871.0" y="1678.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.10%)</title><rect x="868.0" y="1651.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="871.0" y="1662.0"></text>
</g>
<g>
<title>Canonicalizer::do_If(If*) (1 samples, 0.10%)</title><rect x="868.0" y="1635.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="871.0" y="1646.0"></text>
</g>
<g>
<title>Constant::compare(Instruction::Condition, Instruction*) const (1 samples, 0.10%)</title><rect x="868.0" y="1619.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="871.0" y="1630.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (33 samples, 3.44%)</title><rect x="869.2" y="1667.0" width="40.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="872.2" y="1678.0">Gra..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (21 samples, 2.19%)</title><rect x="869.2" y="1651.0" width="25.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="872.2" y="1662.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (21 samples, 2.19%)</title><rect x="869.2" y="1635.0" width="25.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="872.2" y="1646.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (18 samples, 1.88%)</title><rect x="869.2" y="1619.0" width="22.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="872.2" y="1630.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (18 samples, 1.88%)</title><rect x="869.2" y="1603.0" width="22.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="872.2" y="1614.0">G..</text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (4 samples, 0.42%)</title><rect x="869.2" y="1587.0" width="4.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="872.2" y="1598.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (4 samples, 0.42%)</title><rect x="869.2" y="1571.0" width="4.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="872.2" y="1582.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (3 samples, 0.31%)</title><rect x="869.2" y="1555.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="872.2" y="1566.0"></text>
</g>
<g>
<title>ciConstantPoolCache::get(int) (1 samples, 0.10%)</title><rect x="870.4" y="1539.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="873.4" y="1550.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="871.6" y="1539.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="874.6" y="1550.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="871.6" y="1523.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="874.6" y="1534.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="871.6" y="1507.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="874.6" y="1518.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.10%)</title><rect x="871.6" y="1491.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="874.6" y="1502.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.10%)</title><rect x="871.6" y="1475.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="874.6" y="1486.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.10%)</title><rect x="871.6" y="1459.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="874.6" y="1470.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.10%)</title><rect x="871.6" y="1443.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="874.6" y="1454.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="872.9" y="1555.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="875.9" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (14 samples, 1.46%)</title><rect x="874.1" y="1587.0" width="17.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="877.1" y="1598.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 1.04%)</title><rect x="874.1" y="1571.0" width="12.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="877.1" y="1582.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (10 samples, 1.04%)</title><rect x="874.1" y="1555.0" width="12.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="877.1" y="1566.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (7 samples, 0.73%)</title><rect x="874.1" y="1539.0" width="8.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="877.1" y="1550.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (7 samples, 0.73%)</title><rect x="874.1" y="1523.0" width="8.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="877.1" y="1534.0"></text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (2 samples, 0.21%)</title><rect x="874.1" y="1507.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="877.1" y="1518.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.10%)</title><rect x="875.3" y="1491.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="878.3" y="1502.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::appendAll(GrowableArray&lt;Instruction*&gt; const*) (1 samples, 0.10%)</title><rect x="875.3" y="1475.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="878.3" y="1486.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.52%)</title><rect x="876.6" y="1507.0" width="6.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="879.6" y="1518.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.52%)</title><rect x="876.6" y="1491.0" width="6.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="879.6" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.52%)</title><rect x="876.6" y="1475.0" width="6.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="879.6" y="1486.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.52%)</title><rect x="876.6" y="1459.0" width="6.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="879.6" y="1470.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.52%)</title><rect x="876.6" y="1443.0" width="6.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="879.6" y="1454.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.21%)</title><rect x="876.6" y="1427.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="879.6" y="1438.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.10%)</title><rect x="876.6" y="1411.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="879.6" y="1422.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.10%)</title><rect x="876.6" y="1395.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="879.6" y="1406.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.10%)</title><rect x="877.8" y="1411.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="880.8" y="1422.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="877.8" y="1395.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="880.8" y="1406.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="877.8" y="1379.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="880.8" y="1390.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.10%)</title><rect x="877.8" y="1363.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="880.8" y="1374.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="877.8" y="1347.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="880.8" y="1358.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.10%)</title><rect x="877.8" y="1331.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="880.8" y="1342.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.10%)</title><rect x="877.8" y="1315.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="880.8" y="1326.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.31%)</title><rect x="879.0" y="1427.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="882.0" y="1438.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.21%)</title><rect x="879.0" y="1411.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="882.0" y="1422.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.21%)</title><rect x="879.0" y="1395.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="882.0" y="1406.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.21%)</title><rect x="879.0" y="1379.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="882.0" y="1390.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.21%)</title><rect x="879.0" y="1363.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="882.0" y="1374.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.10%)</title><rect x="879.0" y="1347.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="882.0" y="1358.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.10%)</title><rect x="879.0" y="1331.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="882.0" y="1342.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="879.0" y="1315.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="882.0" y="1326.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.10%)</title><rect x="879.0" y="1299.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="882.0" y="1310.0"></text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (1 samples, 0.10%)</title><rect x="879.0" y="1283.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="882.0" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.10%)</title><rect x="880.2" y="1347.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="883.2" y="1358.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.10%)</title><rect x="881.5" y="1411.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="884.5" y="1422.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="881.5" y="1395.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="884.5" y="1406.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.10%)</title><rect x="881.5" y="1379.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="884.5" y="1390.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.10%)</title><rect x="881.5" y="1363.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="884.5" y="1374.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="881.5" y="1347.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="884.5" y="1358.0"></text>
</g>
<g>
<title>Mutex::lock() (1 samples, 0.10%)</title><rect x="881.5" y="1331.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="884.5" y="1342.0"></text>
</g>
<g>
<title>Mutex::lock_contended(Thread*) (1 samples, 0.10%)</title><rect x="881.5" y="1315.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="884.5" y="1326.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="881.5" y="1299.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="884.5" y="1310.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="881.5" y="1283.0" width="1.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="884.5" y="1294.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (3 samples, 0.31%)</title><rect x="882.7" y="1539.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="885.7" y="1550.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (3 samples, 0.31%)</title><rect x="882.7" y="1523.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="885.7" y="1534.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (2 samples, 0.21%)</title><rect x="882.7" y="1507.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="885.7" y="1518.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="882.7" y="1491.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="885.7" y="1502.0"></text>
</g>
<g>
<title>Chunk::operator new(unsigned long, AllocFailStrategy::AllocFailEnum, unsigned long) (1 samples, 0.10%)</title><rect x="882.7" y="1475.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="885.7" y="1486.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.10%)</title><rect x="883.9" y="1491.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="886.9" y="1502.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="883.9" y="1475.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="886.9" y="1486.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.10%)</title><rect x="885.2" y="1507.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="888.2" y="1518.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (1 samples, 0.10%)</title><rect x="885.2" y="1491.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="888.2" y="1502.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.10%)</title><rect x="885.2" y="1475.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="888.2" y="1486.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.31%)</title><rect x="886.4" y="1571.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="889.4" y="1582.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.21%)</title><rect x="887.6" y="1555.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="890.6" y="1566.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.21%)</title><rect x="887.6" y="1539.0" width="2.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="890.6" y="1550.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.10%)</title><rect x="888.9" y="1523.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="891.9" y="1534.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.10%)</title><rect x="888.9" y="1507.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="891.9" y="1518.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.10%)</title><rect x="888.9" y="1491.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="891.9" y="1502.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.10%)</title><rect x="888.9" y="1475.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="891.9" y="1486.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.10%)</title><rect x="890.1" y="1571.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="893.1" y="1582.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (1 samples, 0.10%)</title><rect x="890.1" y="1555.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="893.1" y="1566.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (1 samples, 0.10%)</title><rect x="890.1" y="1539.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="893.1" y="1550.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (1 samples, 0.10%)</title><rect x="890.1" y="1523.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="893.1" y="1534.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (1 samples, 0.10%)</title><rect x="890.1" y="1507.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="893.1" y="1518.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.10%)</title><rect x="890.1" y="1491.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="893.1" y="1502.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (3 samples, 0.31%)</title><rect x="891.3" y="1619.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="894.3" y="1630.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.21%)</title><rect x="891.3" y="1603.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="894.3" y="1614.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (2 samples, 0.21%)</title><rect x="891.3" y="1587.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="894.3" y="1598.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.21%)</title><rect x="891.3" y="1571.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="894.3" y="1582.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.21%)</title><rect x="891.3" y="1555.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="894.3" y="1566.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_range(ciBytecodeStream*) (1 samples, 0.10%)</title><rect x="891.3" y="1539.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="894.3" y="1550.0"></text>
</g>
<g>
<title>ciBytecodeStream::reset_to_bci(int) (1 samples, 0.10%)</title><rect x="892.5" y="1539.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="895.5" y="1550.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.10%)</title><rect x="893.8" y="1603.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="896.8" y="1614.0"></text>
</g>
<g>
<title>XHandlers::XHandlers(ciMethod*) (1 samples, 0.10%)</title><rect x="893.8" y="1587.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="896.8" y="1598.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="893.8" y="1571.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="896.8" y="1582.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.10%)</title><rect x="895.0" y="1651.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="898.0" y="1662.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::appendAll(GrowableArray&lt;Instruction*&gt; const*) (1 samples, 0.10%)</title><rect x="895.0" y="1635.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="898.0" y="1646.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (6 samples, 0.62%)</title><rect x="896.2" y="1651.0" width="7.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="899.2" y="1662.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (6 samples, 0.62%)</title><rect x="896.2" y="1635.0" width="7.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="899.2" y="1646.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.21%)</title><rect x="896.2" y="1619.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="899.2" y="1630.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.10%)</title><rect x="896.2" y="1603.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="899.2" y="1614.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.10%)</title><rect x="897.5" y="1603.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="900.5" y="1614.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.10%)</title><rect x="897.5" y="1587.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="900.5" y="1598.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (2 samples, 0.21%)</title><rect x="898.7" y="1619.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="901.7" y="1630.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_interface_method_or_null(LinkInfo const&amp;) (1 samples, 0.10%)</title><rect x="898.7" y="1603.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="901.7" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="898.7" y="1587.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="901.7" y="1598.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.10%)</title><rect x="898.7" y="1571.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="901.7" y="1582.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Klass*, Handle, Handle, bool, Thread*) (1 samples, 0.10%)</title><rect x="898.7" y="1555.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="901.7" y="1566.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.10%)</title><rect x="898.7" y="1539.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="901.7" y="1550.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.10%)</title><rect x="898.7" y="1523.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="901.7" y="1534.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.10%)</title><rect x="898.7" y="1507.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="901.7" y="1518.0"></text>
</g>
<g>
<title>bool ConcurrentHashTable&lt;SymbolTableConfig, (MemoryType)10&gt;::get&lt;SymbolTableLookup, SymbolTableGet&gt;(Thread*, SymbolTableLookup&amp;, SymbolTableGet&amp;, bool*) (1 samples, 0.10%)</title><rect x="898.7" y="1491.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="901.7" y="1502.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.10%)</title><rect x="899.9" y="1603.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="902.9" y="1614.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method(LinkInfo const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="899.9" y="1587.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="902.9" y="1598.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.10%)</title><rect x="899.9" y="1571.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="902.9" y="1582.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.10%)</title><rect x="899.9" y="1555.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="902.9" y="1566.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.21%)</title><rect x="901.1" y="1619.0" width="2.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="904.1" y="1630.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.21%)</title><rect x="901.1" y="1603.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="904.1" y="1614.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.21%)</title><rect x="901.1" y="1587.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="904.1" y="1598.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.21%)</title><rect x="901.1" y="1571.0" width="2.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="904.1" y="1582.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.21%)</title><rect x="901.1" y="1555.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="904.1" y="1566.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (2 samples, 0.21%)</title><rect x="901.1" y="1539.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="904.1" y="1550.0"></text>
</g>
<g>
<title>os::current_thread_id() (1 samples, 0.10%)</title><rect x="901.1" y="1523.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="904.1" y="1534.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.10%)</title><rect x="901.1" y="1507.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="904.1" y="1518.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.10%)</title><rect x="902.4" y="1523.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="905.4" y="1534.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (4 samples, 0.42%)</title><rect x="903.6" y="1651.0" width="4.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="906.6" y="1662.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (4 samples, 0.42%)</title><rect x="903.6" y="1635.0" width="4.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="906.6" y="1646.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (4 samples, 0.42%)</title><rect x="903.6" y="1619.0" width="4.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="906.6" y="1630.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (4 samples, 0.42%)</title><rect x="903.6" y="1603.0" width="4.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="906.6" y="1614.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (3 samples, 0.31%)</title><rect x="904.8" y="1587.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="907.8" y="1598.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (3 samples, 0.31%)</title><rect x="904.8" y="1571.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="907.8" y="1582.0"></text>
</g>
<g>
<title>ciSignature::return_type() const (1 samples, 0.10%)</title><rect x="908.5" y="1651.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="911.5" y="1662.0"></text>
</g>
<g>
<title>ValueStack::push(ValueType*, Instruction*) (1 samples, 0.10%)</title><rect x="909.7" y="1667.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="912.7" y="1678.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::push(Instruction* const&amp;) (1 samples, 0.10%)</title><rect x="909.7" y="1651.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="912.7" y="1662.0"></text>
</g>
<g>
<title>GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*) (1 samples, 0.10%)</title><rect x="911.0" y="1699.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="914.0" y="1710.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.10%)</title><rect x="911.0" y="1683.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="914.0" y="1694.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::appendAll(GrowableArray&lt;Instruction*&gt; const*) (1 samples, 0.10%)</title><rect x="911.0" y="1667.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="914.0" y="1678.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (3 samples, 0.31%)</title><rect x="912.2" y="1747.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="915.2" y="1758.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (3 samples, 0.31%)</title><rect x="912.2" y="1731.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="915.2" y="1742.0"></text>
</g>
<g>
<title>NullCheckEliminator::NullCheckEliminator(Optimizer*) (1 samples, 0.10%)</title><rect x="912.2" y="1715.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="915.2" y="1726.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long, bool) (1 samples, 0.10%)</title><rect x="912.2" y="1699.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="915.2" y="1710.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="912.2" y="1683.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="915.2" y="1694.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (1 samples, 0.10%)</title><rect x="913.4" y="1715.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="916.4" y="1726.0"></text>
</g>
<g>
<title>NullCheckEliminator::visit(Instruction**) (1 samples, 0.10%)</title><rect x="913.4" y="1699.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="916.4" y="1710.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="914.7" y="1715.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="917.7" y="1726.0"></text>
</g>
<g>
<title>IR::optimize_blocks() (2 samples, 0.21%)</title><rect x="915.9" y="1747.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="918.9" y="1758.0"></text>
</g>
<g>
<title>Optimizer::eliminate_blocks() (1 samples, 0.10%)</title><rect x="915.9" y="1731.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="918.9" y="1742.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.10%)</title><rect x="915.9" y="1715.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="918.9" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="915.9" y="1699.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="918.9" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="915.9" y="1683.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="918.9" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="915.9" y="1667.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="918.9" y="1678.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="915.9" y="1651.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="918.9" y="1662.0"></text>
</g>
<g>
<title>BlockMerger::block_do(BlockBegin*) (1 samples, 0.10%)</title><rect x="915.9" y="1635.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="918.9" y="1646.0"></text>
</g>
<g>
<title>BlockMerger::try_merge(BlockBegin*) (1 samples, 0.10%)</title><rect x="915.9" y="1619.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="918.9" y="1630.0"></text>
</g>
<g>
<title>BlockBegin::disconnect_from_graph() (1 samples, 0.10%)</title><rect x="915.9" y="1603.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="918.9" y="1614.0"></text>
</g>
<g>
<title>Optimizer::eliminate_conditional_expressions() (1 samples, 0.10%)</title><rect x="917.1" y="1731.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="920.1" y="1742.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.10%)</title><rect x="917.1" y="1715.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="920.1" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="917.1" y="1699.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="920.1" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="917.1" y="1683.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="920.1" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="917.1" y="1667.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="920.1" y="1678.0"></text>
</g>
<g>
<title>CE_Eliminator::block_do(BlockBegin*) (1 samples, 0.10%)</title><rect x="917.1" y="1651.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="920.1" y="1662.0"></text>
</g>
<g>
<title>Instruction::prev() (1 samples, 0.10%)</title><rect x="917.1" y="1635.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="920.1" y="1646.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 0.10%)</title><rect x="918.4" y="1747.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.4" y="1758.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.10%)</title><rect x="918.4" y="1731.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="921.4" y="1742.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="918.4" y="1715.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.4" y="1726.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="918.4" y="1699.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="921.4" y="1710.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="918.4" y="1683.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="921.4" y="1694.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.10%)</title><rect x="918.4" y="1667.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="921.4" y="1678.0"></text>
</g>
<g>
<title>CriticalEdgeFinder::block_do(BlockBegin*) (1 samples, 0.10%)</title><rect x="918.4" y="1651.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="921.4" y="1662.0"></text>
</g>
<g>
<title>RangeCheckElimination::eliminate(IR*) (1 samples, 0.10%)</title><rect x="919.6" y="1747.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="922.6" y="1758.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.10%)</title><rect x="919.6" y="1731.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="922.6" y="1742.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.10%)</title><rect x="919.6" y="1715.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="922.6" y="1726.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.10%)</title><rect x="919.6" y="1699.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="922.6" y="1710.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.10%)</title><rect x="919.6" y="1683.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="922.6" y="1694.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.10%)</title><rect x="919.6" y="1667.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="922.6" y="1678.0"></text>
</g>
<g>
<title>RangeCheckEliminator::process_if(GrowableArray&lt;int&gt;&amp;, BlockBegin*, If*) (1 samples, 0.10%)</title><rect x="919.6" y="1651.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="922.6" y="1662.0"></text>
</g>
<g>
<title>IntConstant::as_IntConstant() (1 samples, 0.10%)</title><rect x="919.6" y="1635.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="922.6" y="1646.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (8 samples, 0.83%)</title><rect x="920.8" y="1763.0" width="9.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="923.8" y="1774.0"></text>
</g>
<g>
<title>Compilation::emit_code_epilog(LIR_Assembler*) (1 samples, 0.10%)</title><rect x="920.8" y="1747.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="923.8" y="1758.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.10%)</title><rect x="920.8" y="1731.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="923.8" y="1742.0"></text>
</g>
<g>
<title>Assembler::cmpq(RegisterImpl*, int) (1 samples, 0.10%)</title><rect x="920.8" y="1715.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="923.8" y="1726.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (7 samples, 0.73%)</title><rect x="922.0" y="1747.0" width="8.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="925.0" y="1758.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (7 samples, 0.73%)</title><rect x="922.0" y="1731.0" width="8.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="925.0" y="1742.0"></text>
</g>
<g>
<title>LIR_Assembler::cmove(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, BasicType) (1 samples, 0.10%)</title><rect x="923.3" y="1715.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="926.3" y="1726.0"></text>
</g>
<g>
<title>LIR_Const::as_constant() (1 samples, 0.10%)</title><rect x="923.3" y="1699.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="926.3" y="1710.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.10%)</title><rect x="924.5" y="1715.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="927.5" y="1726.0"></text>
</g>
<g>
<title>LIR_Assembler::check_icache() (1 samples, 0.10%)</title><rect x="924.5" y="1699.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="927.5" y="1710.0"></text>
</g>
<g>
<title>C1_MacroAssembler::inline_cache_check(RegisterImpl*, RegisterImpl*) (1 samples, 0.10%)</title><rect x="924.5" y="1683.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.5" y="1694.0"></text>
</g>
<g>
<title>MacroAssembler::jump_cc(Assembler::Condition, AddressLiteral) (1 samples, 0.10%)</title><rect x="924.5" y="1667.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="927.5" y="1678.0"></text>
</g>
<g>
<title>CodeSection::relocate(unsigned char*, relocInfo::relocType, int, int) (1 samples, 0.10%)</title><rect x="924.5" y="1651.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="927.5" y="1662.0"></text>
</g>
<g>
<title>relocInfo::initialize(CodeSection*, Relocation*) (1 samples, 0.10%)</title><rect x="924.5" y="1635.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="927.5" y="1646.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op1(LIR_Op1*) (1 samples, 0.10%)</title><rect x="925.7" y="1715.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="928.7" y="1726.0"></text>
</g>
<g>
<title>LIR_Assembler::const2reg(LIR_OprDesc*, LIR_OprDesc*, LIR_PatchCode, CodeEmitInfo*) (1 samples, 0.10%)</title><rect x="925.7" y="1699.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="928.7" y="1710.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.10%)</title><rect x="927.0" y="1715.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="930.0" y="1726.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.10%)</title><rect x="927.0" y="1699.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="930.0" y="1710.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.10%)</title><rect x="927.0" y="1683.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="930.0" y="1694.0"></text>
</g>
<g>
<title>OopRecorder::find_index(Metadata*) (1 samples, 0.10%)</title><rect x="927.0" y="1667.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="930.0" y="1678.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.10%)</title><rect x="927.0" y="1651.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="930.0" y="1662.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_initialize() (1 samples, 0.10%)</title><rect x="927.0" y="1635.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="930.0" y="1646.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, Arena*) (1 samples, 0.10%)</title><rect x="927.0" y="1619.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="930.0" y="1630.0"></text>
</g>
<g>
<title>LIR_OpAllocArray::emit_code(LIR_Assembler*) (1 samples, 0.10%)</title><rect x="928.2" y="1715.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="931.2" y="1726.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_alloc_array(LIR_OpAllocArray*) (1 samples, 0.10%)</title><rect x="928.2" y="1699.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="931.2" y="1710.0"></text>
</g>
<g>
<title>C1_MacroAssembler::allocate_array(RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, int, Address::ScaleFactor, RegisterImpl*, Label&amp;) (1 samples, 0.10%)</title><rect x="928.2" y="1683.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="931.2" y="1694.0"></text>
</g>
<g>
<title>Assembler::xorq(RegisterImpl*, RegisterImpl*) (1 samples, 0.10%)</title><rect x="928.2" y="1667.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="931.2" y="1678.0"></text>
</g>
<g>
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (1 samples, 0.10%)</title><rect x="929.4" y="1715.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="932.4" y="1726.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (1 samples, 0.10%)</title><rect x="929.4" y="1699.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="932.4" y="1710.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (1 samples, 0.10%)</title><rect x="929.4" y="1683.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="932.4" y="1694.0"></text>
</g>
<g>
<title>Assembler::jmp(Label&amp;, bool) (1 samples, 0.10%)</title><rect x="929.4" y="1667.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="932.4" y="1678.0"></text>
</g>
<g>
<title>Label::add_patch_at(CodeBuffer*, int, char const*, int) (1 samples, 0.10%)</title><rect x="929.4" y="1651.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="932.4" y="1662.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (34 samples, 3.54%)</title><rect x="930.6" y="1763.0" width="41.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="933.6" y="1774.0">Com..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (4 samples, 0.42%)</title><rect x="930.6" y="1747.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="933.6" y="1758.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (4 samples, 0.42%)</title><rect x="930.6" y="1731.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="933.6" y="1742.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.10%)</title><rect x="930.6" y="1715.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="933.6" y="1726.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.10%)</title><rect x="930.6" y="1699.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="933.6" y="1710.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(PhiResolver*, Instruction*, Instruction*) (1 samples, 0.10%)</title><rect x="930.6" y="1683.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="933.6" y="1694.0"></text>
</g>
<g>
<title>PhiResolver::move(LIR_OprDesc*, LIR_OprDesc*) (1 samples, 0.10%)</title><rect x="930.6" y="1667.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="933.6" y="1678.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.10%)</title><rect x="930.6" y="1651.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="933.6" y="1662.0"></text>
</g>
<g>
<title>LIRGenerator::do_Invoke(Invoke*) (1 samples, 0.10%)</title><rect x="931.9" y="1715.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="934.9" y="1726.0"></text>
</g>
<g>
<title>LIRGenerator::state_for(Instruction*, ValueStack*, bool) (1 samples, 0.10%)</title><rect x="931.9" y="1699.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="934.9" y="1710.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.10%)</title><rect x="931.9" y="1683.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="934.9" y="1694.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.10%)</title><rect x="931.9" y="1667.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="934.9" y="1678.0"></text>
</g>
<g>
<title>LIRGenerator::do_LoadIndexed(LoadIndexed*) (1 samples, 0.10%)</title><rect x="933.1" y="1715.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="936.1" y="1726.0"></text>
</g>
<g>
<title>LIR_List::cmp_reg_mem(LIR_Condition, LIR_OprDesc*, LIR_Address*, CodeEmitInfo*) (1 samples, 0.10%)</title><rect x="933.1" y="1699.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="936.1" y="1710.0"></text>
</g>
<g>
<title>LIRGenerator::do_NewObjectArray(NewObjectArray*) (1 samples, 0.10%)</title><rect x="934.3" y="1715.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="937.3" y="1726.0"></text>
</g>
<g>
<title>LIR_List::append(LIR_Op*) (1 samples, 0.10%)</title><rect x="934.3" y="1699.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="937.3" y="1710.0"></text>
</g>
<g>
<title>LinearScan::LinearScan(IR*, LIRGenerator*, FrameMap*) (1 samples, 0.10%)</title><rect x="935.6" y="1747.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="938.6" y="1758.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.10%)</title><rect x="935.6" y="1731.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="938.6" y="1742.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (29 samples, 3.02%)</title><rect x="936.8" y="1747.0" width="35.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="939.8" y="1758.0">Lin..</text>
</g>
<g>
<title>LinearScan::allocate_registers() (8 samples, 0.83%)</title><rect x="936.8" y="1731.0" width="9.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="939.8" y="1742.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (7 samples, 0.73%)</title><rect x="938.0" y="1715.0" width="8.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="941.0" y="1726.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (7 samples, 0.73%)</title><rect x="938.0" y="1699.0" width="8.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="941.0" y="1710.0"></text>
</g>
<g>
<title>LIRGenerator::is_vreg_flag_set(int, LIRGenerator::VregFlag) (1 samples, 0.10%)</title><rect x="939.2" y="1683.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="942.2" y="1694.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (3 samples, 0.31%)</title><rect x="940.5" y="1683.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="943.5" y="1694.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.10%)</title><rect x="941.7" y="1667.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="944.7" y="1678.0"></text>
</g>
<g>
<title>LinearScanWalker::split_before_usage(Interval*, int, int) (1 samples, 0.10%)</title><rect x="942.9" y="1667.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="945.9" y="1678.0"></text>
</g>
<g>
<title>Interval::new_split_child() (1 samples, 0.10%)</title><rect x="942.9" y="1651.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="945.9" y="1662.0"></text>
</g>
<g>
<title>LinearScanWalker::insert_move(int, Interval*, Interval*) (2 samples, 0.21%)</title><rect x="944.2" y="1683.0" width="2.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="947.2" y="1694.0"></text>
</g>
<g>
<title>MoveResolver::resolve_mappings() (2 samples, 0.21%)</title><rect x="944.2" y="1667.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="947.2" y="1678.0"></text>
</g>
<g>
<title>LIR_InsertionBuffer::append(int, LIR_Op*) (2 samples, 0.21%)</title><rect x="944.2" y="1651.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="947.2" y="1662.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (10 samples, 1.04%)</title><rect x="946.6" y="1731.0" width="12.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="949.6" y="1742.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.10%)</title><rect x="947.9" y="1715.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="950.9" y="1726.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (4 samples, 0.42%)</title><rect x="949.1" y="1715.0" width="4.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="952.1" y="1726.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.31%)</title><rect x="949.1" y="1699.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="952.1" y="1710.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="949.1" y="1683.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="952.1" y="1694.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="949.1" y="1667.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="952.1" y="1678.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (2 samples, 0.21%)</title><rect x="950.3" y="1683.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="953.3" y="1694.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.10%)</title><rect x="950.3" y="1667.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="953.3" y="1678.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.10%)</title><rect x="951.5" y="1667.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="954.5" y="1678.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value_for_operand(LIR_OprDesc*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.10%)</title><rect x="951.5" y="1651.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="954.5" y="1662.0"></text>
</g>
<g>
<title>GrowableArray&lt;ScopeValue*&gt;::append(ScopeValue* const&amp;) (1 samples, 0.10%)</title><rect x="951.5" y="1635.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="954.5" y="1646.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="952.8" y="1699.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="955.8" y="1710.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (4 samples, 0.42%)</title><rect x="954.0" y="1715.0" width="4.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="957.0" y="1726.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.10%)</title><rect x="957.7" y="1699.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="960.7" y="1710.0"></text>
</g>
<g>
<title>IntervalWalker::interval_moved(Interval*, IntervalKind, IntervalState, IntervalState) (1 samples, 0.10%)</title><rect x="957.7" y="1683.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="960.7" y="1694.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (5 samples, 0.52%)</title><rect x="958.9" y="1731.0" width="6.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="961.9" y="1742.0"></text>
</g>
<g>
<title>Interval::add_use_pos(int, IntervalUseKind) (1 samples, 0.10%)</title><rect x="958.9" y="1715.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="961.9" y="1726.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.10%)</title><rect x="960.1" y="1715.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="963.1" y="1726.0"></text>
</g>
<g>
<title>LinearScan::add_register_hints(LIR_Op*) (1 samples, 0.10%)</title><rect x="961.4" y="1715.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="964.4" y="1726.0"></text>
</g>
<g>
<title>LinearScan::add_temp(int, int, IntervalUseKind, BasicType) (1 samples, 0.10%)</title><rect x="962.6" y="1715.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="965.6" y="1726.0"></text>
</g>
<g>
<title>LinearScan::create_interval(int) (1 samples, 0.10%)</title><rect x="962.6" y="1699.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="965.6" y="1710.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.10%)</title><rect x="962.6" y="1683.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="965.6" y="1694.0"></text>
</g>
<g>
<title>LinearScan::add_use(LIR_OprDesc*, int, int, IntervalUseKind) (1 samples, 0.10%)</title><rect x="963.8" y="1715.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="966.8" y="1726.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (2 samples, 0.21%)</title><rect x="965.1" y="1731.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="968.1" y="1742.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.10%)</title><rect x="965.1" y="1715.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="968.1" y="1726.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long, bool) (1 samples, 0.10%)</title><rect x="966.3" y="1715.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="969.3" y="1726.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.10%)</title><rect x="966.3" y="1699.0" width="1.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="969.3" y="1710.0"></text>
</g>
<g>
<title>LinearScan::number_instructions() (1 samples, 0.10%)</title><rect x="967.5" y="1731.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="970.5" y="1742.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (1 samples, 0.10%)</title><rect x="968.7" y="1731.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="971.7" y="1742.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (1 samples, 0.10%)</title><rect x="968.7" y="1715.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="971.7" y="1726.0"></text>
</g>
<g>
<title>LinearScan::split_child_at_op_id(Interval*, int, LIR_OpVisitState::OprMode) (1 samples, 0.10%)</title><rect x="968.7" y="1699.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="971.7" y="1710.0"></text>
</g>
<g>
<title>LinearScan::sort_intervals_after_allocation() (2 samples, 0.21%)</title><rect x="970.0" y="1731.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="973.0" y="1742.0"></text>
</g>
<g>
<title>_qsort (2 samples, 0.21%)</title><rect x="970.0" y="1715.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="973.0" y="1726.0"></text>
</g>
<g>
<title>_qsort (2 samples, 0.21%)</title><rect x="970.0" y="1699.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="973.0" y="1710.0"></text>
</g>
<g>
<title>LinearScan::interval_cmp(Interval**, Interval**) (1 samples, 0.10%)</title><rect x="970.0" y="1683.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="973.0" y="1694.0"></text>
</g>
<g>
<title>_qsort (1 samples, 0.10%)</title><rect x="971.2" y="1683.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="974.2" y="1694.0"></text>
</g>
<g>
<title>_qsort (1 samples, 0.10%)</title><rect x="971.2" y="1667.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="974.2" y="1678.0"></text>
</g>
<g>
<title>_isort (1 samples, 0.10%)</title><rect x="971.2" y="1651.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="974.2" y="1662.0"></text>
</g>
<g>
<title>LinearScan::interval_cmp(Interval**, Interval**) (1 samples, 0.10%)</title><rect x="971.2" y="1635.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="974.2" y="1646.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (2 samples, 0.21%)</title><rect x="972.4" y="1763.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="975.4" y="1774.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (2 samples, 0.21%)</title><rect x="972.4" y="1747.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="975.4" y="1758.0"></text>
</g>
<g>
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="972.4" y="1731.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="975.4" y="1742.0"></text>
</g>
<g>
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 0.10%)</title><rect x="972.4" y="1715.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="975.4" y="1726.0"></text>
</g>
<g>
<title>MethodData::initialize() (1 samples, 0.10%)</title><rect x="972.4" y="1699.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="975.4" y="1710.0"></text>
</g>
<g>
<title>MethodData::post_initialize(BytecodeStream*) (1 samples, 0.10%)</title><rect x="972.4" y="1683.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="975.4" y="1694.0"></text>
</g>
<g>
<title>MultiBranchData::post_initialize(BytecodeStream*, MethodData*) (1 samples, 0.10%)</title><rect x="972.4" y="1667.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="975.4" y="1678.0"></text>
</g>
<g>
<title>MethodData::bci_to_dp(int) (1 samples, 0.10%)</title><rect x="972.4" y="1651.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="975.4" y="1662.0"></text>
</g>
<g>
<title>DataLayout::data_in() (1 samples, 0.10%)</title><rect x="972.4" y="1635.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="975.4" y="1646.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.10%)</title><rect x="973.7" y="1731.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="976.7" y="1742.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::is_mature(Method*) (1 samples, 0.10%)</title><rect x="973.7" y="1715.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="976.7" y="1726.0"></text>
</g>
<g>
<title>JVMCICompiler::force_comp_at_level_simple(methodHandle const&amp;) (1 samples, 0.10%)</title><rect x="973.7" y="1699.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="976.7" y="1710.0"></text>
</g>
<g>
<title>Dependencies::assert_evol_method(ciMethod*) (2 samples, 0.21%)</title><rect x="974.9" y="1779.0" width="2.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="977.9" y="1790.0"></text>
</g>
<g>
<title>Dependencies::note_dep_seen(int, ciBaseObject*) (2 samples, 0.21%)</title><rect x="974.9" y="1763.0" width="2.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="977.9" y="1774.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (18 samples, 1.88%)</title><rect x="977.4" y="1779.0" width="22.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="980.4" y="1790.0">c..</text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, char*, int, int, char const*, FailedSpeculation**) (7 samples, 0.73%)</title><rect x="977.4" y="1763.0" width="8.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="980.4" y="1774.0"></text>
</g>
<g>
<title>CodeBuffer::finalize_oop_references(methodHandle const&amp;) (3 samples, 0.31%)</title><rect x="977.4" y="1747.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="980.4" y="1758.0"></text>
</g>
<g>
<title>metadata_Relocation::metadata_value() (1 samples, 0.10%)</title><rect x="979.8" y="1731.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="982.8" y="1742.0"></text>
</g>
<g>
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.10%)</title><rect x="979.8" y="1715.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="982.8" y="1726.0"></text>
</g>
<g>
<title>InstanceKlass::add_dependent_nmethod(nmethod*) (1 samples, 0.10%)</title><rect x="981.0" y="1747.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="984.0" y="1758.0"></text>
</g>
<g>
<title>DependencyContext::add_dependent_nmethod(nmethod*) (1 samples, 0.10%)</title><rect x="981.0" y="1731.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="984.0" y="1742.0"></text>
</g>
<g>
<title>nmethodBucket::next_not_unloading() (1 samples, 0.10%)</title><rect x="981.0" y="1715.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="984.0" y="1726.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, char*, int, int) (3 samples, 0.31%)</title><rect x="982.3" y="1747.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="985.3" y="1758.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (2 samples, 0.21%)</title><rect x="982.3" y="1731.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="985.3" y="1742.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.10%)</title><rect x="983.5" y="1715.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="986.5" y="1726.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (1 samples, 0.10%)</title><rect x="983.5" y="1699.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="986.5" y="1710.0"></text>
</g>
<g>
<title>ImmutableOopMapBuilder::heap_size() (1 samples, 0.10%)</title><rect x="983.5" y="1683.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="986.5" y="1694.0"></text>
</g>
<g>
<title>_platform_memcmp (1 samples, 0.10%)</title><rect x="983.5" y="1667.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="986.5" y="1678.0"></text>
</g>
<g>
<title>DebugInformationRecorder::copy_to(nmethod*) (1 samples, 0.10%)</title><rect x="984.7" y="1731.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="987.7" y="1742.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.10%)</title><rect x="984.7" y="1715.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="987.7" y="1726.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_load_event(JvmtiThreadState*) (11 samples, 1.15%)</title><rect x="986.0" y="1763.0" width="13.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="989.0" y="1774.0"></text>
</g>
<g>
<title>ServiceThread::enqueue_deferred_event(JvmtiDeferredEvent*) (10 samples, 1.04%)</title><rect x="986.0" y="1747.0" width="12.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="989.0" y="1758.0"></text>
</g>
<g>
<title>__psynch_cvbroad (4 samples, 0.42%)</title><rect x="987.2" y="1731.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="990.2" y="1742.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (5 samples, 0.52%)</title><rect x="992.1" y="1731.0" width="6.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="995.1" y="1742.0"></text>
</g>
<g>
<title>__psynch_mutexdrop (4 samples, 0.42%)</title><rect x="993.3" y="1715.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="996.3" y="1726.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_unlock_slow (1 samples, 0.10%)</title><rect x="998.2" y="1747.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1001.2" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (7 samples, 0.73%)</title><rect x="999.5" y="1827.0" width="8.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.5" y="1838.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (7 samples, 0.73%)</title><rect x="999.5" y="1811.0" width="8.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1002.5" y="1822.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (7 samples, 0.73%)</title><rect x="999.5" y="1795.0" width="8.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1002.5" y="1806.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (6 samples, 0.62%)</title><rect x="999.5" y="1779.0" width="7.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1002.5" y="1790.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (6 samples, 0.62%)</title><rect x="999.5" y="1763.0" width="7.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1002.5" y="1774.0"></text>
</g>
<g>
<title>SignatureStream::find_symbol() (1 samples, 0.10%)</title><rect x="1000.7" y="1747.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1003.7" y="1758.0"></text>
</g>
<g>
<title>SymbolTable::new_symbol(char const*, int) (1 samples, 0.10%)</title><rect x="1000.7" y="1731.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1003.7" y="1742.0"></text>
</g>
<g>
<title>SymbolTable::lookup_common(char const*, int, unsigned int) (1 samples, 0.10%)</title><rect x="1000.7" y="1715.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1003.7" y="1726.0"></text>
</g>
<g>
<title>SymbolTable::lookup_shared(char const*, int, unsigned int) (1 samples, 0.10%)</title><rect x="1000.7" y="1699.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1003.7" y="1710.0"></text>
</g>
<g>
<title>SignatureStream::~SignatureStream() (1 samples, 0.10%)</title><rect x="1001.9" y="1747.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1004.9" y="1758.0"></text>
</g>
<g>
<title>Symbol::decrement_refcount() (1 samples, 0.10%)</title><rect x="1001.9" y="1731.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1004.9" y="1742.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (3 samples, 0.31%)</title><rect x="1003.2" y="1747.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1006.2" y="1758.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.10%)</title><rect x="1004.4" y="1731.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1007.4" y="1742.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.10%)</title><rect x="1004.4" y="1715.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1007.4" y="1726.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.10%)</title><rect x="1004.4" y="1699.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1007.4" y="1710.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.10%)</title><rect x="1005.6" y="1731.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1008.6" y="1742.0"></text>
</g>
<g>
<title>os::current_thread_id() (1 samples, 0.10%)</title><rect x="1005.6" y="1715.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1008.6" y="1726.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (1 samples, 0.10%)</title><rect x="1005.6" y="1699.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1008.6" y="1710.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.10%)</title><rect x="1006.9" y="1779.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1009.9" y="1790.0"></text>
</g>
<g>
<title>Klass::is_klass() const volatile (1 samples, 0.10%)</title><rect x="1006.9" y="1763.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1009.9" y="1774.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads(Thread*) (5 samples, 0.52%)</title><rect x="1008.1" y="1843.0" width="6.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.1" y="1854.0"></text>
</g>
<g>
<title>os::available_memory() (4 samples, 0.42%)</title><rect x="1009.3" y="1827.0" width="4.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1012.3" y="1838.0"></text>
</g>
<g>
<title>host_statistics64 (4 samples, 0.42%)</title><rect x="1009.3" y="1811.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1012.3" y="1822.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (4 samples, 0.42%)</title><rect x="1009.3" y="1795.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1012.3" y="1806.0"></text>
</g>
<g>
<title>CompileQueue::get() (113 samples, 11.77%)</title><rect x="1014.2" y="1843.0" width="138.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1017.2" y="1854.0">CompileQueue::get()</text>
</g>
<g>
<title>CompileTask::is_unloaded() const (1 samples, 0.10%)</title><rect x="1014.2" y="1827.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1017.2" y="1838.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compare_methods(Method*, Method*) (1 samples, 0.10%)</title><rect x="1015.5" y="1827.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.5" y="1838.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::select_task(CompileQueue*) (111 samples, 11.56%)</title><rect x="1016.7" y="1827.0" width="136.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1019.7" y="1838.0">TieredThresholdPo..</text>
</g>
<g>
<title>CompileTask::is_unloaded() const (20 samples, 2.08%)</title><rect x="1088.0" y="1811.0" width="24.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1091.0" y="1822.0">C..</text>
</g>
<g>
<title>JNIHandles::is_weak_global_handle(_jobject*) (19 samples, 1.98%)</title><rect x="1089.2" y="1795.0" width="23.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1092.2" y="1806.0">J..</text>
</g>
<g>
<title>Mutex::lock_without_safepoint_check() (1 samples, 0.10%)</title><rect x="1089.2" y="1779.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1092.2" y="1790.0"></text>
</g>
<g>
<title>OopStorage::allocation_status(oopDesc* const*) const (13 samples, 1.35%)</title><rect x="1090.4" y="1779.0" width="16.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1093.4" y="1790.0"></text>
</g>
<g>
<title>Mutex::lock_without_safepoint_check() (1 samples, 0.10%)</title><rect x="1097.8" y="1763.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1100.8" y="1774.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.10%)</title><rect x="1099.0" y="1763.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1102.0" y="1774.0"></text>
</g>
<g>
<title>pthread_mutex_lock (5 samples, 0.52%)</title><rect x="1100.3" y="1763.0" width="6.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1103.3" y="1774.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.52%)</title><rect x="1106.4" y="1779.0" width="6.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1109.4" y="1790.0"></text>
</g>
<g>
<title>Method::backedge_count() (1 samples, 0.10%)</title><rect x="1112.6" y="1811.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1115.6" y="1822.0"></text>
</g>
<g>
<title>Method::highest_comp_level() const (4 samples, 0.42%)</title><rect x="1113.8" y="1811.0" width="4.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1116.8" y="1822.0"></text>
</g>
<g>
<title>MethodCounters::highest_comp_level() const (2 samples, 0.21%)</title><rect x="1118.7" y="1811.0" width="2.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.7" y="1822.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::compare_methods(Method*, Method*) (17 samples, 1.77%)</title><rect x="1121.2" y="1811.0" width="20.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1124.2" y="1822.0"></text>
</g>
<g>
<title>Method::highest_comp_level() const (1 samples, 0.10%)</title><rect x="1134.7" y="1795.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.7" y="1806.0"></text>
</g>
<g>
<title>Method::invocation_count() (3 samples, 0.31%)</title><rect x="1135.9" y="1795.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1138.9" y="1806.0"></text>
</g>
<g>
<title>MethodCounters::highest_comp_level() const (2 samples, 0.21%)</title><rect x="1139.6" y="1795.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.6" y="1806.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::update_rate(long, Method*) (9 samples, 0.94%)</title><rect x="1142.1" y="1811.0" width="11.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.1" y="1822.0"></text>
</g>
<g>
<title>Method::backedge_count() (1 samples, 0.10%)</title><rect x="1149.4" y="1795.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.4" y="1806.0"></text>
</g>
<g>
<title>Method::invocation_count() (2 samples, 0.21%)</title><rect x="1150.7" y="1795.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1153.7" y="1806.0"></text>
</g>
<g>
<title>Compiler::name() (1 samples, 0.10%)</title><rect x="1153.1" y="1843.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.1" y="1854.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (21 samples, 2.19%)</title><rect x="1154.4" y="1859.0" width="25.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.4" y="1870.0">S..</text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (8 samples, 0.83%)</title><rect x="1155.6" y="1843.0" width="9.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.6" y="1854.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(JvmtiEnv*, nmethod*) (8 samples, 0.83%)</title><rect x="1155.6" y="1827.0" width="9.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1158.6" y="1838.0"></text>
</g>
<g>
<title>JvmtiCompiledMethodLoadEventMark::JvmtiCompiledMethodLoadEventMark(JavaThread*, nmethod*, void*) (4 samples, 0.42%)</title><rect x="1156.8" y="1811.0" width="4.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.8" y="1822.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (4 samples, 0.42%)</title><rect x="1156.8" y="1795.0" width="4.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.8" y="1806.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.10%)</title><rect x="1158.0" y="1779.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.0" y="1790.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.10%)</title><rect x="1158.0" y="1763.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.0" y="1774.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.21%)</title><rect x="1159.3" y="1779.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.3" y="1790.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.21%)</title><rect x="1159.3" y="1763.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.3" y="1774.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (3 samples, 0.31%)</title><rect x="1161.7" y="1811.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1164.7" y="1822.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (2 samples, 0.21%)</title><rect x="1161.7" y="1795.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.7" y="1806.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.10%)</title><rect x="1163.0" y="1779.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.0" y="1790.0"></text>
</g>
<g>
<title>nmethod::metadata_at(int) const (1 samples, 0.10%)</title><rect x="1163.0" y="1763.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.0" y="1774.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.10%)</title><rect x="1164.2" y="1795.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.2" y="1806.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.10%)</title><rect x="1164.2" y="1779.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.2" y="1790.0"></text>
</g>
<g>
<title>nmethod::metadata_addr_at(int) const (1 samples, 0.10%)</title><rect x="1164.2" y="1763.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.2" y="1774.0"></text>
</g>
<g>
<title>Monitor::wait_without_safepoint_check(long) (12 samples, 1.25%)</title><rect x="1165.4" y="1843.0" width="14.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.4" y="1854.0"></text>
</g>
<g>
<title>os::PlatformMonitor::wait(long) (12 samples, 1.25%)</title><rect x="1165.4" y="1827.0" width="14.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.4" y="1838.0"></text>
</g>
<g>
<title>__psynch_cvwait (11 samples, 1.15%)</title><rect x="1165.4" y="1811.0" width="13.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1168.4" y="1822.0"></text>
</g>
<g>
<title>_pthread_cond_wait (1 samples, 0.10%)</title><rect x="1178.9" y="1811.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1181.9" y="1822.0"></text>
</g>
<g>
<title>_pthread_mutex_firstfit_lock_slow (1 samples, 0.10%)</title><rect x="1178.9" y="1795.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1181.9" y="1806.0"></text>
</g>
<g>
<title>__psynch_mutexwait (1 samples, 0.10%)</title><rect x="1178.9" y="1779.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1181.9" y="1790.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.31%)</title><rect x="1180.2" y="1875.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.2" y="1886.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.31%)</title><rect x="1180.2" y="1859.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.2" y="1870.0"></text>
</g>
<g>
<title>Monitor::wait_without_safepoint_check(long) (1 samples, 0.10%)</title><rect x="1180.2" y="1843.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.2" y="1854.0"></text>
</g>
<g>
<title>os::PlatformMonitor::wait(long) (1 samples, 0.10%)</title><rect x="1180.2" y="1827.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.2" y="1838.0"></text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.10%)</title><rect x="1180.2" y="1811.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1183.2" y="1822.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.10%)</title><rect x="1181.4" y="1843.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.4" y="1854.0"></text>
</g>
<g>
<title>SafepointSynchronize::synchronize_threads(long, int, int*) (1 samples, 0.10%)</title><rect x="1181.4" y="1827.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.4" y="1838.0"></text>
</g>
<g>
<title>SafepointSynchronize::thread_not_running(ThreadSafepointState*) (1 samples, 0.10%)</title><rect x="1181.4" y="1811.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.4" y="1822.0"></text>
</g>
<g>
<title>ThreadSafepointState::examine_state_of_thread(unsigned long long) (1 samples, 0.10%)</title><rect x="1181.4" y="1795.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.4" y="1806.0"></text>
</g>
<g>
<title>SafepointSynchronize::end() (1 samples, 0.10%)</title><rect x="1182.6" y="1843.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.6" y="1854.0"></text>
</g>
<g>
<title>SafepointSynchronize::disarm_safepoint() (1 samples, 0.10%)</title><rect x="1182.6" y="1827.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.6" y="1838.0"></text>
</g>
<g>
<title>GenericWaitBarrier::disarm() (1 samples, 0.10%)</title><rect x="1182.6" y="1811.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.6" y="1822.0"></text>
</g>
<g>
<title>si_module_static_mdns.mdns_vtable (1 samples, 0.10%)</title><rect x="1182.6" y="1795.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1185.6" y="1806.0"></text>
</g>
<g>
<title>WatcherThread::run() (5 samples, 0.52%)</title><rect x="1183.9" y="1875.0" width="6.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.9" y="1886.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 0.52%)</title><rect x="1183.9" y="1859.0" width="6.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.9" y="1870.0"></text>
</g>
<g>
<title>Monitor::wait_without_safepoint_check(long) (5 samples, 0.52%)</title><rect x="1183.9" y="1843.0" width="6.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.9" y="1854.0"></text>
</g>
<g>
<title>os::PlatformMonitor::wait(long) (5 samples, 0.52%)</title><rect x="1183.9" y="1827.0" width="6.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.9" y="1838.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 0.52%)</title><rect x="1183.9" y="1811.0" width="6.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1186.9" y="1822.0"></text>
</g>
</g>
</svg>
