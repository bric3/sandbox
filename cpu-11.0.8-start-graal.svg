<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1541"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1541"> </text>
<g id="frames">
<g>
<title>all (315 samples, 100.00%)</title><rect x="10.0" y="1507.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1518.0">all</text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (3 samples, 0.95%)</title><rect x="10.0" y="1491.0" width="11.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="1502.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.63%)</title><rect x="10.0" y="1475.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="1486.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.32%)</title><rect x="10.0" y="1459.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="1470.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.32%)</title><rect x="13.7" y="1459.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.7" y="1470.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.32%)</title><rect x="13.7" y="1443.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.7" y="1454.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.32%)</title><rect x="13.7" y="1427.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.7" y="1438.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.32%)</title><rect x="17.5" y="1475.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.5" y="1486.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.32%)</title><rect x="17.5" y="1459.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="20.5" y="1470.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(Method*, CompLevel, JavaThread*) (1 samples, 0.32%)</title><rect x="17.5" y="1443.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="20.5" y="1454.0"></text>
</g>
<g>
<title>JVMCIRuntime::adjust_comp_level(methodHandle const&amp;, bool, CompLevel, JavaThread*) (1 samples, 0.32%)</title><rect x="17.5" y="1427.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.5" y="1438.0"></text>
</g>
<g>
<title>JVMCIRuntime::adjust_comp_level_inner(methodHandle const&amp;, bool, CompLevel, JavaThread*) (1 samples, 0.32%)</title><rect x="17.5" y="1411.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.5" y="1422.0"></text>
</g>
<g>
<title>JavaCalls::call_special(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.32%)</title><rect x="17.5" y="1395.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="20.5" y="1406.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.32%)</title><rect x="17.5" y="1379.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.5" y="1390.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.32%)</title><rect x="17.5" y="1363.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="20.5" y="1374.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.32%)</title><rect x="17.5" y="1347.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.5" y="1358.0"></text>
</g>
<g>
<title>[no_Java_frame] (3 samples, 0.95%)</title><rect x="21.2" y="1491.0" width="11.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="24.2" y="1502.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.32%)</title><rect x="32.5" y="1491.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="35.5" y="1502.0"></text>
</g>
<g>
<title>Interpreter (1 samples, 0.32%)</title><rect x="32.5" y="1475.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="35.5" y="1486.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 1.90%)</title><rect x="36.2" y="1491.0" width="22.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="39.2" y="1502.0">[..</text>
</g>
<g>
<title>Interpreter (5 samples, 1.59%)</title><rect x="36.2" y="1475.0" width="18.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="39.2" y="1486.0"></text>
</g>
<g>
<title>slow_subtype_check Runtime1 stub (1 samples, 0.32%)</title><rect x="55.0" y="1475.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="58.0" y="1486.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="58.7" y="1491.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.7" y="1502.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.32%)</title><rect x="58.7" y="1475.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.7" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="58.7" y="1459.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="61.7" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="58.7" y="1443.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.7" y="1454.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="58.7" y="1427.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="61.7" y="1438.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="58.7" y="1411.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="61.7" y="1422.0"></text>
</g>
<g>
<title>LinkResolver::resolve_virtual_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.32%)</title><rect x="58.7" y="1395.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="61.7" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.95%)</title><rect x="62.4" y="1491.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.4" y="1502.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.make (1 samples, 0.32%)</title><rect x="62.4" y="1475.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="65.4" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLL.&lt;init&gt; (1 samples, 0.32%)</title><rect x="62.4" y="1459.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.4" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.32%)</title><rect x="62.4" y="1443.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="65.4" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.32%)</title><rect x="62.4" y="1427.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="65.4" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.32%)</title><rect x="62.4" y="1411.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.4" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.32%)</title><rect x="62.4" y="1395.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.methodType (1 samples, 0.32%)</title><rect x="62.4" y="1379.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="65.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.parameterType (1 samples, 0.32%)</title><rect x="62.4" y="1363.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLIIL.make (1 samples, 0.32%)</title><rect x="66.2" y="1475.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.2" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$Species_LLLLLLIIL.&lt;init&gt; (1 samples, 0.32%)</title><rect x="66.2" y="1459.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.2" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.&lt;init&gt; (1 samples, 0.32%)</title><rect x="66.2" y="1443.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.2" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.&lt;init&gt; (1 samples, 0.32%)</title><rect x="66.2" y="1427.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.2" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.prepare (1 samples, 0.32%)</title><rect x="66.2" y="1411.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.2" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.32%)</title><rect x="66.2" y="1395.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.32%)</title><rect x="66.2" y="1379.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="69.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.32%)</title><rect x="66.2" y="1363.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.32%)</title><rect x="66.2" y="1347.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="69.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.emitStaticInvoke (1 samples, 0.32%)</title><rect x="66.2" y="1331.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="69.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.visitMethodInsn (1 samples, 0.32%)</title><rect x="66.2" y="1315.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.execute (1 samples, 0.32%)</title><rect x="66.2" y="1299.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.push (1 samples, 0.32%)</title><rect x="66.2" y="1283.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Frame.type (1 samples, 0.32%)</title><rect x="66.2" y="1267.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.addType (1 samples, 0.32%)</title><rect x="66.2" y="1251.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.get (1 samples, 0.32%)</title><rect x="66.2" y="1235.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/Item.isEqualTo (1 samples, 0.32%)</title><rect x="66.2" y="1219.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.32%)</title><rect x="66.2" y="1203.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.equals (1 samples, 0.32%)</title><rect x="66.2" y="1187.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="69.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (1 samples, 0.32%)</title><rect x="69.9" y="1475.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.9" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (1 samples, 0.32%)</title><rect x="69.9" y="1459.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.9" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (1 samples, 0.32%)</title><rect x="69.9" y="1443.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.9" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (1 samples, 0.32%)</title><rect x="69.9" y="1427.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.9" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArguments (1 samples, 0.32%)</title><rect x="69.9" y="1411.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.foldArgumentsForm (1 samples, 0.32%)</title><rect x="69.9" y="1395.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (1 samples, 0.32%)</title><rect x="69.9" y="1379.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (1 samples, 0.32%)</title><rect x="69.9" y="1363.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$NamedFunction.&lt;init&gt; (1 samples, 0.32%)</title><rect x="69.9" y="1347.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.9" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers.basicInvoker (1 samples, 0.32%)</title><rect x="69.9" y="1331.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.32%)</title><rect x="69.9" y="1315.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.9" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.32%)</title><rect x="69.9" y="1299.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.32%)</title><rect x="69.9" y="1283.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.32%)</title><rect x="69.9" y="1267.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.32%)</title><rect x="69.9" y="1251.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.32%)</title><rect x="69.9" y="1235.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.32%)</title><rect x="69.9" y="1219.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$Name.&lt;init&gt; (1 samples, 0.32%)</title><rect x="69.9" y="1203.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$NamedFunction.returnType (1 samples, 0.32%)</title><rect x="69.9" y="1187.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="72.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$NamedFunction.methodType (1 samples, 0.32%)</title><rect x="69.9" y="1171.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.getInvocationType (1 samples, 0.32%)</title><rect x="69.9" y="1155.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.isConstructor (1 samples, 0.32%)</title><rect x="69.9" y="1139.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.testAllFlags (1 samples, 0.32%)</title><rect x="69.9" y="1123.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.9" y="1134.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.compileMethod (137 samples, 43.49%)</title><rect x="73.7" y="1491.0" width="513.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.7" y="1502.0">jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.compileMethod</text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.getCompiler (15 samples, 4.76%)</title><rect x="73.7" y="1475.0" width="56.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.7" y="1486.0">jdk/vm..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (15 samples, 4.76%)</title><rect x="73.7" y="1459.0" width="56.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.7" y="1470.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (15 samples, 4.76%)</title><rect x="73.7" y="1443.0" width="56.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.7" y="1454.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompilerFactory.createCompiler (15 samples, 4.76%)</title><rect x="73.7" y="1427.0" width="56.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.7" y="1438.0">org/gr..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="73.7" y="1411.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="73.7" y="1395.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="73.7" y="1379.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="73.7" y="1363.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="73.7" y="1347.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.7" y="1358.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="73.7" y="1331.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="73.7" y="1315.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="73.7" y="1299.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.7" y="1310.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="73.7" y="1283.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="76.7" y="1294.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="73.7" y="1267.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="76.7" y="1278.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1251.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="76.7" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1235.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="76.7" y="1246.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1219.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="76.7" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1203.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="76.7" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1187.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="76.7" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1171.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="76.7" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1155.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="76.7" y="1166.0"></text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1139.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="76.7" y="1150.0"></text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1123.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="76.7" y="1134.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1107.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="76.7" y="1118.0"></text>
</g>
<g>
<title>metaspace::SpaceManager::allocate(unsigned long) (1 samples, 0.32%)</title><rect x="73.7" y="1091.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="76.7" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.32%)</title><rect x="73.7" y="1075.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="76.7" y="1086.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.32%)</title><rect x="73.7" y="1059.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="76.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalRuntime.&lt;init&gt; (14 samples, 4.44%)</title><rect x="77.4" y="1411.0" width="52.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.4" y="1422.0">org/g..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CommunityCompilerConfigurationFactory.createCompilerConfiguration (1 samples, 0.32%)</title><rect x="77.4" y="1395.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="77.4" y="1379.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="77.4" y="1363.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="77.4" y="1347.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="77.4" y="1331.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="77.4" y="1315.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.4" y="1326.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="77.4" y="1299.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="77.4" y="1283.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="77.4" y="1267.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.4" y="1278.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="77.4" y="1251.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="80.4" y="1262.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="77.4" y="1235.0" width="3.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="80.4" y="1246.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="77.4" y="1219.0" width="3.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="80.4" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="77.4" y="1203.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="80.4" y="1214.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="77.4" y="1187.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="80.4" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.32%)</title><rect x="77.4" y="1171.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="80.4" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.32%)</title><rect x="77.4" y="1155.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="80.4" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.32%)</title><rect x="77.4" y="1139.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="80.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilerConfigurationFactory.createBackendMap (1 samples, 0.32%)</title><rect x="81.2" y="1395.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.2" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilerConfigurationFactory$DefaultBackendMap.&lt;init&gt; (1 samples, 0.32%)</title><rect x="81.2" y="1379.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.2" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/sparc/SPARCHotSpotBackendFactory.getArchitecture (1 samples, 0.32%)</title><rect x="81.2" y="1363.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="84.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="81.2" y="1347.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="84.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="81.2" y="1331.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="84.2" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="81.2" y="1315.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.2" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="81.2" y="1299.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.32%)</title><rect x="81.2" y="1283.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.32%)</title><rect x="81.2" y="1267.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.32%)</title><rect x="81.2" y="1251.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="84.2" y="1262.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.32%)</title><rect x="81.2" y="1235.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="84.2" y="1246.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.32%)</title><rect x="81.2" y="1219.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="84.2" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="81.2" y="1203.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="84.2" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.32%)</title><rect x="81.2" y="1187.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="84.2" y="1198.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.32%)</title><rect x="81.2" y="1171.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="84.2" y="1182.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="81.2" y="1155.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="84.2" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="81.2" y="1139.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="84.2" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="81.2" y="1123.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="84.2" y="1134.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="81.2" y="1107.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="84.2" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="81.2" y="1091.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="84.2" y="1102.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.32%)</title><rect x="81.2" y="1075.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="84.2" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotHostBackend.completeInitialization (4 samples, 1.27%)</title><rect x="84.9" y="1395.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="87.9" y="1406.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotForeignCallsProvider.initialize (2 samples, 0.63%)</title><rect x="84.9" y="1379.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.9" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotHostForeignCallsProvider.initialize (2 samples, 0.63%)</title><rect x="84.9" y="1363.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.9" y="1374.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="84.9" y="1347.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="87.9" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="84.9" y="1331.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="87.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="84.9" y="1315.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="84.9" y="1299.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="84.9" y="1283.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.9" y="1294.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="84.9" y="1267.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="84.9" y="1251.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="87.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="84.9" y="1235.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.9" y="1246.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="84.9" y="1219.0" width="3.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="87.9" y="1230.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="84.9" y="1203.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="87.9" y="1214.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="84.9" y="1187.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="87.9" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="84.9" y="1171.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="87.9" y="1182.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="84.9" y="1155.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="87.9" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.32%)</title><rect x="84.9" y="1139.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="87.9" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="84.9" y="1123.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="87.9" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="84.9" y="1107.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="87.9" y="1118.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.32%)</title><rect x="84.9" y="1091.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="87.9" y="1102.0"></text>
</g>
<g>
<title>Dictionary::get_entry(int, unsigned int, Symbol*) (1 samples, 0.32%)</title><rect x="84.9" y="1075.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="87.9" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.linkForeignCall (1 samples, 0.32%)</title><rect x="88.7" y="1347.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.7" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/ForeignCallStub.&lt;init&gt; (1 samples, 0.32%)</title><rect x="88.7" y="1331.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.7" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.create (1 samples, 0.32%)</title><rect x="88.7" y="1315.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.7" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.createCallingConvention (1 samples, 0.32%)</title><rect x="88.7" y="1299.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.7" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.asJavaType (1 samples, 0.32%)</title><rect x="88.7" y="1283.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.7" y="1294.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMetaAccessProvider.lookupJavaType (1 samples, 0.32%)</title><rect x="88.7" y="1267.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="91.7" y="1278.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.fromClass (1 samples, 0.32%)</title><rect x="88.7" y="1251.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.7" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.32%)</title><rect x="88.7" y="1235.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="91.7" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="88.7" y="1219.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="91.7" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="88.7" y="1203.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="91.7" y="1214.0"></text>
</g>
<g>
<title>CompiledIC::set_to_monomorphic(CompiledICInfo&amp;) (1 samples, 0.32%)</title><rect x="88.7" y="1187.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="91.7" y="1198.0"></text>
</g>
<g>
<title>CompiledDirectStaticCall::set_to_interpreted(methodHandle const&amp;, unsigned char*) (1 samples, 0.32%)</title><rect x="88.7" y="1171.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="91.7" y="1182.0"></text>
</g>
<g>
<title>CompiledDirectStaticCall::find_stub_for(unsigned char*, bool) (1 samples, 0.32%)</title><rect x="88.7" y="1155.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="91.7" y="1166.0"></text>
</g>
<g>
<title>opt_virtual_call_Relocation::static_stub(bool) (1 samples, 0.32%)</title><rect x="88.7" y="1139.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="91.7" y="1150.0"></text>
</g>
<g>
<title>RelocIterator::next() (1 samples, 0.32%)</title><rect x="88.7" y="1123.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="91.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.initialize (2 samples, 0.63%)</title><rect x="92.4" y="1379.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.4" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.initialize (2 samples, 0.63%)</title><rect x="92.4" y="1363.0" width="7.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.4" y="1374.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/arraycopy/ArrayCopySnippets$Templates.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="92.4" y="1347.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="92.4" y="1331.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="92.4" y="1315.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="92.4" y="1299.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.4" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="92.4" y="1283.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="92.4" y="1267.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.4" y="1278.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="92.4" y="1251.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="92.4" y="1235.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="95.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="92.4" y="1219.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="95.4" y="1230.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="92.4" y="1203.0" width="3.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="95.4" y="1214.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="92.4" y="1187.0" width="3.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="95.4" y="1198.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="92.4" y="1171.0" width="3.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="95.4" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="92.4" y="1155.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="95.4" y="1166.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="92.4" y="1139.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="95.4" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="92.4" y="1123.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="95.4" y="1134.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="92.4" y="1107.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="95.4" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.32%)</title><rect x="92.4" y="1091.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="95.4" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.32%)</title><rect x="92.4" y="1075.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="95.4" y="1086.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.32%)</title><rect x="92.4" y="1059.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="95.4" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.initialize (1 samples, 0.32%)</title><rect x="96.2" y="1347.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="99.2" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetCounterNode$SnippetCounterSnippets$Templates.&lt;init&gt; (1 samples, 0.32%)</title><rect x="96.2" y="1331.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="99.2" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetCounterNode.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="96.2" y="1315.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.2" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.32%)</title><rect x="96.2" y="1299.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.2" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="96.2" y="1283.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="96.2" y="1267.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.2" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getAnnotationTimed (1 samples, 0.32%)</title><rect x="96.2" y="1251.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Class.getAnnotation (1 samples, 0.32%)</title><rect x="96.2" y="1235.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.annotationData (1 samples, 0.32%)</title><rect x="96.2" y="1219.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Class.createAnnotationData (1 samples, 0.32%)</title><rect x="96.2" y="1203.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.2" y="1214.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.32%)</title><rect x="96.2" y="1187.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.2" y="1198.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.32%)</title><rect x="96.2" y="1171.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.2" y="1182.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.32%)</title><rect x="96.2" y="1155.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.2" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.32%)</title><rect x="96.2" y="1139.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.2" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.32%)</title><rect x="96.2" y="1123.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.2" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.32%)</title><rect x="96.2" y="1107.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="99.2" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.32%)</title><rect x="96.2" y="1091.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="99.2" y="1102.0"></text>
</g>
<g>
<title>CompiledIC::set_to_megamorphic(CallInfo*, Bytecodes::Code, Thread*) (1 samples, 0.32%)</title><rect x="96.2" y="1075.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="99.2" y="1086.0"></text>
</g>
<g>
<title>JvmtiDynamicCodeEventCollector::register_stub(char const*, unsigned char*, unsigned char*) (1 samples, 0.32%)</title><rect x="96.2" y="1059.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="99.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createBackend (8 samples, 2.54%)</title><rect x="99.9" y="1395.0" width="30.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="102.9" y="1406.0">or..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="99.9" y="1379.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="102.9" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="99.9" y="1363.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.9" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="99.9" y="1347.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.9" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="99.9" y="1331.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="102.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="99.9" y="1315.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.9" y="1326.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="99.9" y="1299.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="99.9" y="1283.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="102.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="99.9" y="1267.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.9" y="1278.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="99.9" y="1251.0" width="3.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="102.9" y="1262.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="99.9" y="1235.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="102.9" y="1246.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="99.9" y="1219.0" width="3.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="102.9" y="1230.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="99.9" y="1203.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="102.9" y="1214.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="99.9" y="1187.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="102.9" y="1198.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="99.9" y="1171.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="102.9" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="99.9" y="1155.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="102.9" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="99.9" y="1139.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="102.9" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="99.9" y="1123.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="102.9" y="1134.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="99.9" y="1107.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="102.9" y="1118.0"></text>
</g>
<g>
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="99.9" y="1091.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="102.9" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createForeignCalls (1 samples, 0.32%)</title><rect x="103.7" y="1379.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="103.7" y="1363.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="103.7" y="1347.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="103.7" y="1331.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.7" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="103.7" y="1315.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="103.7" y="1299.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.7" y="1310.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="103.7" y="1283.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="103.7" y="1267.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="103.7" y="1251.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="103.7" y="1235.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="103.7" y="1219.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="103.7" y="1203.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="103.7" y="1187.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="103.7" y="1171.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.32%)</title><rect x="103.7" y="1155.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.32%)</title><rect x="103.7" y="1139.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.32%)</title><rect x="103.7" y="1123.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.32%)</title><rect x="103.7" y="1107.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.32%)</title><rect x="103.7" y="1091.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.32%)</title><rect x="103.7" y="1075.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.32%)</title><rect x="103.7" y="1059.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.32%)</title><rect x="103.7" y="1043.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.slice (1 samples, 0.32%)</title><rect x="103.7" y="1027.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.slice (1 samples, 0.32%)</title><rect x="103.7" y="1011.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/DirectByteBufferR.&lt;init&gt; (1 samples, 0.32%)</title><rect x="103.7" y="995.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createGraphBuilderPlugins (1 samples, 0.32%)</title><rect x="107.4" y="1379.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="107.4" y="1363.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="107.4" y="1347.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="107.4" y="1331.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="110.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="107.4" y="1315.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="107.4" y="1299.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.4" y="1310.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="107.4" y="1283.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="110.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="107.4" y="1267.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="110.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="107.4" y="1251.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.4" y="1262.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="107.4" y="1235.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="110.4" y="1246.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="107.4" y="1219.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="110.4" y="1230.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="107.4" y="1203.0" width="3.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="110.4" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="107.4" y="1187.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="110.4" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.32%)</title><rect x="107.4" y="1171.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="110.4" y="1182.0"></text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 0.32%)</title><rect x="107.4" y="1155.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="110.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createLowerer (4 samples, 1.27%)</title><rect x="111.1" y="1379.0" width="15.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="114.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (4 samples, 1.27%)</title><rect x="111.1" y="1363.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (4 samples, 1.27%)</title><rect x="111.1" y="1347.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (4 samples, 1.27%)</title><rect x="111.1" y="1331.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (4 samples, 1.27%)</title><rect x="111.1" y="1315.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (4 samples, 1.27%)</title><rect x="111.1" y="1299.0" width="15.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.1" y="1310.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (4 samples, 1.27%)</title><rect x="111.1" y="1283.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (4 samples, 1.27%)</title><rect x="111.1" y="1267.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (4 samples, 1.27%)</title><rect x="111.1" y="1251.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.1" y="1262.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (2 samples, 0.63%)</title><rect x="111.1" y="1235.0" width="7.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="114.1" y="1246.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (2 samples, 0.63%)</title><rect x="111.1" y="1219.0" width="7.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="114.1" y="1230.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (2 samples, 0.63%)</title><rect x="111.1" y="1203.0" width="7.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="114.1" y="1214.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (2 samples, 0.63%)</title><rect x="111.1" y="1187.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="114.1" y="1198.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (2 samples, 0.63%)</title><rect x="111.1" y="1171.0" width="7.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="114.1" y="1182.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (2 samples, 0.63%)</title><rect x="111.1" y="1155.0" width="7.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="114.1" y="1166.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (2 samples, 0.63%)</title><rect x="111.1" y="1139.0" width="7.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="114.1" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (2 samples, 0.63%)</title><rect x="111.1" y="1123.0" width="7.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="114.1" y="1134.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="111.1" y="1107.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="114.1" y="1118.0"></text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.32%)</title><rect x="111.1" y="1091.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="114.1" y="1102.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.32%)</title><rect x="111.1" y="1075.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="114.1" y="1086.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="111.1" y="1059.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="114.1" y="1070.0"></text>
</g>
<g>
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="111.1" y="1043.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="114.1" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_method_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.32%)</title><rect x="114.9" y="1107.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="117.9" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.32%)</title><rect x="114.9" y="1091.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="117.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.63%)</title><rect x="118.6" y="1235.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.63%)</title><rect x="118.6" y="1219.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.63%)</title><rect x="118.6" y="1203.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (2 samples, 0.63%)</title><rect x="118.6" y="1187.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.63%)</title><rect x="118.6" y="1171.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.6" y="1182.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.63%)</title><rect x="118.6" y="1155.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.63%)</title><rect x="118.6" y="1139.0" width="7.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (2 samples, 0.63%)</title><rect x="118.6" y="1123.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.6" y="1134.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="118.6" y="1107.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="121.6" y="1118.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="118.6" y="1091.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="121.6" y="1102.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="118.6" y="1075.0" width="3.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="121.6" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="118.6" y="1059.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="121.6" y="1070.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="118.6" y="1043.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="121.6" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="118.6" y="1027.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="121.6" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="118.6" y="1011.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="121.6" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.32%)</title><rect x="118.6" y="995.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="121.6" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.32%)</title><rect x="118.6" y="979.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.6" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::parse_localvariable_table(ClassFileStream const*, unsigned int, unsigned short, unsigned int, unsigned short*, bool, Thread*) (1 samples, 0.32%)</title><rect x="118.6" y="963.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="121.6" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_field_signature(Symbol const*, Symbol const*, Thread*) const (1 samples, 0.32%)</title><rect x="118.6" y="947.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="121.6" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::skip_over_field_signature(char const*, bool, unsigned int, Thread*) const (1 samples, 0.32%)</title><rect x="118.6" y="931.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="121.6" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::verify_unqualified_name(char const*, unsigned int, int) (1 samples, 0.32%)</title><rect x="118.6" y="915.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="121.6" y="926.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="122.4" y="1107.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="122.4" y="1091.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="122.4" y="1075.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="122.4" y="1059.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="122.4" y="1043.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.4" y="1054.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="122.4" y="1027.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="122.4" y="1011.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.32%)</title><rect x="122.4" y="995.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.32%)</title><rect x="122.4" y="979.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.4" y="990.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.32%)</title><rect x="122.4" y="963.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.4" y="974.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.32%)</title><rect x="122.4" y="947.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.4" y="958.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.32%)</title><rect x="122.4" y="931.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="125.4" y="942.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.32%)</title><rect x="122.4" y="915.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="125.4" y="926.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (1 samples, 0.32%)</title><rect x="122.4" y="899.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="125.4" y="910.0"></text>
</g>
<g>
<title>G1CollectedHeap::deduplicate_string(oopDesc*) (1 samples, 0.32%)</title><rect x="122.4" y="883.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="125.4" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackendFactory.createSuites (1 samples, 0.32%)</title><rect x="126.1" y="1379.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="126.1" y="1363.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="129.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="126.1" y="1347.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="126.1" y="1331.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="126.1" y="1315.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="126.1" y="1299.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.1" y="1310.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="126.1" y="1283.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="129.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="126.1" y="1267.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.32%)</title><rect x="126.1" y="1251.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.32%)</title><rect x="126.1" y="1235.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="129.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.32%)</title><rect x="126.1" y="1219.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="129.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/Class.initClassName (1 samples, 0.32%)</title><rect x="126.1" y="1203.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.1" y="1214.0"></text>
</g>
<g>
<title>JVM_InitClassName (1 samples, 0.32%)</title><rect x="126.1" y="1187.0" width="3.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="129.1" y="1198.0"></text>
</g>
<g>
<title>java_lang_Class::name(Handle, Thread*) (1 samples, 0.32%)</title><rect x="126.1" y="1171.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="129.1" y="1182.0"></text>
</g>
<g>
<title>StringTable::intern(char const*, Thread*) (1 samples, 0.32%)</title><rect x="126.1" y="1155.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="129.1" y="1166.0"></text>
</g>
<g>
<title>StringTable::do_intern(Handle, unsigned short*, int, unsigned long, Thread*) (1 samples, 0.32%)</title><rect x="126.1" y="1139.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="129.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod (122 samples, 38.73%)</title><rect x="129.9" y="1475.0" width="457.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.9" y="1486.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod (122 samples, 38.73%)</title><rect x="129.9" y="1459.0" width="457.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.9" y="1470.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileMethod</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask.runCompilation (121 samples, 38.41%)</title><rect x="133.6" y="1443.0" width="453.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.6" y="1454.0">org/graalvm/compiler/hotspot/CompilationTask.runCompilation</text>
</g>
<g>
<title>org/graalvm/compiler/core/CompilationWrapper.run (121 samples, 38.41%)</title><rect x="133.6" y="1427.0" width="453.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="136.6" y="1438.0">org/graalvm/compiler/core/CompilationWrapper.run</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.performCompilation (121 samples, 38.41%)</title><rect x="133.6" y="1411.0" width="453.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="136.6" y="1422.0">org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilatio..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilationWrapper.performCompilation (121 samples, 38.41%)</title><rect x="133.6" y="1395.0" width="453.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="136.6" y="1406.0">org/graalvm/compiler/hotspot/CompilationTask$HotSpotCompilatio..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/CompilationTask.installMethod (4 samples, 1.27%)</title><rect x="133.6" y="1379.0" width="15.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="136.6" y="1390.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/target/Backend.createInstalledCode (4 samples, 1.27%)</title><rect x="133.6" y="1363.0" width="15.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.6" y="1374.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotCodeCacheProvider.installCode (2 samples, 0.63%)</title><rect x="133.6" y="1347.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="136.6" y="1358.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/CompilerToVM.installCode (2 samples, 0.63%)</title><rect x="133.6" y="1331.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.6" y="1342.0"></text>
</g>
<g>
<title>c2v_installCode(JNIEnv_*, _jobject*, _jobject*, _jobject*, _jobject*, _jobject*) (2 samples, 0.63%)</title><rect x="133.6" y="1315.0" width="7.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="136.6" y="1326.0"></text>
</g>
<g>
<title>CodeInstaller::install(JVMCICompiler*, Handle, Handle, CodeBlob*&amp;, Handle, Handle, Thread*) (2 samples, 0.63%)</title><rect x="133.6" y="1299.0" width="7.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="136.6" y="1310.0"></text>
</g>
<g>
<title>CodeInstaller::initialize_buffer(CodeBuffer&amp;, bool, Thread*) (2 samples, 0.63%)</title><rect x="133.6" y="1283.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="136.6" y="1294.0"></text>
</g>
<g>
<title>CodeInstaller::site_Infopoint(CodeBuffer&amp;, int, Handle, Thread*) (1 samples, 0.32%)</title><rect x="133.6" y="1267.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="136.6" y="1278.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, bool, Thread*) (1 samples, 0.32%)</title><rect x="133.6" y="1251.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="136.6" y="1262.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, Thread*) (1 samples, 0.32%)</title><rect x="133.6" y="1235.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="136.6" y="1246.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, Thread*) (1 samples, 0.32%)</title><rect x="133.6" y="1219.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="136.6" y="1230.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, Thread*) (1 samples, 0.32%)</title><rect x="133.6" y="1203.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="136.6" y="1214.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, Thread*) (1 samples, 0.32%)</title><rect x="133.6" y="1187.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="136.6" y="1198.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, Thread*) (1 samples, 0.32%)</title><rect x="133.6" y="1171.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="136.6" y="1182.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, Thread*) (1 samples, 0.32%)</title><rect x="133.6" y="1155.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="136.6" y="1166.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.32%)</title><rect x="133.6" y="1139.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="136.6" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.32%)</title><rect x="133.6" y="1123.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="136.6" y="1134.0"></text>
</g>
<g>
<title>DIR_Chunk* GrowableArray&lt;DIR_Chunk*&gt;::insert_sorted&lt;&amp;(DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;))&gt;(DIR_Chunk* const&amp;) (1 samples, 0.32%)</title><rect x="133.6" y="1107.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="136.6" y="1118.0"></text>
</g>
<g>
<title>int GrowableArray&lt;DIR_Chunk*&gt;::find_sorted&lt;DIR_Chunk*, &amp;(DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;))&gt;(DIR_Chunk* const&amp;, bool&amp;) (1 samples, 0.32%)</title><rect x="133.6" y="1091.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="136.6" y="1102.0"></text>
</g>
<g>
<title>DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;) (1 samples, 0.32%)</title><rect x="133.6" y="1075.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="136.6" y="1086.0"></text>
</g>
<g>
<title>CodeInstaller::site_Safepoint(CodeBuffer&amp;, int, Handle, Thread*) (1 samples, 0.32%)</title><rect x="137.4" y="1267.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="140.4" y="1278.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, bool, Thread*) (1 samples, 0.32%)</title><rect x="137.4" y="1251.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="140.4" y="1262.0"></text>
</g>
<g>
<title>CodeInstaller::record_scope(int, Handle, CodeInstaller::ScopeMode, GrowableArray&lt;ScopeValue*&gt;*, bool, Thread*) (1 samples, 0.32%)</title><rect x="137.4" y="1235.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="140.4" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/debug/DebugContext.activate (1 samples, 0.32%)</title><rect x="141.1" y="1347.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.32%)</title><rect x="141.1" y="1331.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="144.1" y="1342.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbbb00000)@0x000000011bc2d780 (1 samples, 0.32%)</title><rect x="141.1" y="1315.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.1" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotBackend.createCompiledCode (1 samples, 0.32%)</title><rect x="144.9" y="1347.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder.createCompiledCode (1 samples, 0.32%)</title><rect x="144.9" y="1331.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotCompiledCodeBuilder.getSortedSites (1 samples, 0.32%)</title><rect x="144.9" y="1315.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/code/CompilationResult.getMarks (1 samples, 0.32%)</title><rect x="144.9" y="1299.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.9" y="1310.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.32%)</title><rect x="144.9" y="1283.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.9" y="1294.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableRandomAccessList.&lt;init&gt; (1 samples, 0.32%)</title><rect x="144.9" y="1267.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.9" y="1278.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.&lt;init&gt; (1 samples, 0.32%)</title><rect x="144.9" y="1251.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.9" y="1262.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.&lt;init&gt; (1 samples, 0.32%)</title><rect x="144.9" y="1235.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.32%)</title><rect x="144.9" y="1219.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="147.9" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compile (117 samples, 37.14%)</title><rect x="148.6" y="1379.0" width="438.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.6" y="1390.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compile</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.compileHelper (106 samples, 33.65%)</title><rect x="148.6" y="1363.0" width="397.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.6" y="1374.0">org/graalvm/compiler/hotspot/HotSpotGraalCompiler.comp..</text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getProfilingInfo (1 samples, 0.32%)</title><rect x="148.6" y="1347.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.6" y="1358.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotMethodData.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="148.6" y="1331.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="151.6" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="148.6" y="1315.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="151.6" y="1326.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="148.6" y="1299.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="151.6" y="1310.0"></text>
</g>
<g>
<title>ConstantPoolCacheEntry::set_direct_or_vtable_call(Bytecodes::Code, methodHandle const&amp;, int, bool) (1 samples, 0.32%)</title><rect x="148.6" y="1283.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="151.6" y="1294.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.32%)</title><rect x="148.6" y="1267.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="151.6" y="1278.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.32%)</title><rect x="148.6" y="1251.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="151.6" y="1262.0"></text>
</g>
<g>
<title>SignatureIterator::parse_type() (1 samples, 0.32%)</title><rect x="148.6" y="1235.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="151.6" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.compileGraph (103 samples, 32.70%)</title><rect x="152.3" y="1347.0" width="385.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.3" y="1358.0">org/graalvm/compiler/core/GraalCompiler.compileGraph</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.compile (103 samples, 32.70%)</title><rect x="152.3" y="1331.0" width="385.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.3" y="1342.0">org/graalvm/compiler/core/GraalCompiler.compile</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitBackEnd (32 samples, 10.16%)</title><rect x="152.3" y="1315.0" width="119.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.3" y="1326.0">org/graalvm/com..</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitCode (7 samples, 2.22%)</title><rect x="152.3" y="1299.0" width="26.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="155.3" y="1310.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCode (5 samples, 1.59%)</title><rect x="152.3" y="1283.0" width="18.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="155.3" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCodeBody (2 samples, 0.63%)</title><rect x="152.3" y="1267.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.3" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emit (2 samples, 0.63%)</title><rect x="152.3" y="1251.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.3" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emitBlock (2 samples, 0.63%)</title><rect x="152.3" y="1235.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.3" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/asm/CompilationResultBuilder.emitOp (2 samples, 0.63%)</title><rect x="152.3" y="1219.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="155.3" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64LIRInstruction.emitCode (2 samples, 0.63%)</title><rect x="152.3" y="1203.0" width="7.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="155.3" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move$MoveToRegOp.emitCode (1 samples, 0.32%)</title><rect x="152.3" y="1187.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="155.3" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move$AbstractMoveOp.emitCode (1 samples, 0.32%)</title><rect x="152.3" y="1171.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move.move (1 samples, 0.32%)</title><rect x="152.3" y="1155.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move.reg2reg (1 samples, 0.32%)</title><rect x="152.3" y="1139.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Unary$MemoryOp.emitCode (1 samples, 0.32%)</title><rect x="156.1" y="1187.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.1" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler$AMD64RMOp.emit (1 samples, 0.32%)</title><rect x="156.1" y="1171.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.1" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.emitOperandHelper (1 samples, 0.32%)</title><rect x="156.1" y="1155.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.1" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/asm/amd64/AMD64Assembler.emitOperandHelper (1 samples, 0.32%)</title><rect x="156.1" y="1139.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.emitCodeSuffix (3 samples, 0.95%)</title><rect x="159.8" y="1267.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.8" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (3 samples, 0.95%)</title><rect x="159.8" y="1251.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.8" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (3 samples, 0.95%)</title><rect x="159.8" y="1235.0" width="11.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.8" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.finalizeAddress (3 samples, 0.95%)</title><rect x="159.8" y="1219.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="162.8" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.getCode (3 samples, 0.95%)</title><rect x="159.8" y="1203.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.8" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.buildCompilationResult (3 samples, 0.95%)</title><rect x="159.8" y="1187.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.8" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitBackEnd (1 samples, 0.32%)</title><rect x="159.8" y="1171.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLIR (1 samples, 0.32%)</title><rect x="159.8" y="1155.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLIR0 (1 samples, 0.32%)</title><rect x="159.8" y="1139.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="162.8" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLowLevel (1 samples, 0.32%)</title><rect x="159.8" y="1123.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="162.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.32%)</title><rect x="159.8" y="1107.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="162.8" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.32%)</title><rect x="159.8" y="1091.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="162.8" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhaseSuite.run (1 samples, 0.32%)</title><rect x="159.8" y="1075.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.8" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.32%)</title><rect x="159.8" y="1059.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="162.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.32%)</title><rect x="159.8" y="1043.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="162.8" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase.run (1 samples, 0.32%)</title><rect x="159.8" y="1027.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.8" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase.run (1 samples, 0.32%)</title><rect x="159.8" y="1011.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.8" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.build (1 samples, 0.32%)</title><rect x="159.8" y="995.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.8" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processBlock (1 samples, 0.32%)</title><rect x="159.8" y="979.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.8" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processInstructionBottomUp (1 samples, 0.32%)</title><rect x="159.8" y="963.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="162.8" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachTemp (1 samples, 0.32%)</title><rect x="159.8" y="947.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.8" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachTemp (1 samples, 0.32%)</title><rect x="159.8" y="931.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.8" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.32%)</title><rect x="159.8" y="915.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.8" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueConsumer.visitValue (1 samples, 0.32%)</title><rect x="159.8" y="899.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="162.8" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker$3.visitValue (1 samples, 0.32%)</title><rect x="159.8" y="883.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.8" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/RegStackValueSet.remove (1 samples, 0.32%)</title><rect x="159.8" y="867.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.8" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/SnippetStub.getGraph (2 samples, 0.63%)</title><rect x="163.6" y="1171.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.63%)</title><rect x="163.6" y="1155.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (2 samples, 0.63%)</title><rect x="163.6" y="1139.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="166.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (2 samples, 0.63%)</title><rect x="163.6" y="1123.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (2 samples, 0.63%)</title><rect x="163.6" y="1107.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.6" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (2 samples, 0.63%)</title><rect x="163.6" y="1091.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.32%)</title><rect x="163.6" y="1075.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="166.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="163.6" y="1059.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.6" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="163.6" y="1043.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.6" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="163.6" y="1027.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="166.6" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="163.6" y="1011.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.6" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="163.6" y="995.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.6" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="163.6" y="979.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.6" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="163.6" y="963.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="166.6" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.32%)</title><rect x="163.6" y="947.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.6" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.32%)</title><rect x="163.6" y="931.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.6" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.32%)</title><rect x="163.6" y="915.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.6" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="163.6" y="899.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.6" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="163.6" y="883.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.6" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="163.6" y="867.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="166.6" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="163.6" y="851.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="166.6" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.32%)</title><rect x="163.6" y="835.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="166.6" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtual (1 samples, 0.32%)</title><rect x="163.6" y="819.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.6" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeVirtualHelper (1 samples, 0.32%)</title><rect x="163.6" y="803.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="166.6" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genDynamicInvokeHelper (1 samples, 0.32%)</title><rect x="163.6" y="787.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="166.6" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="163.6" y="771.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.6" y="782.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="163.6" y="755.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="166.6" y="766.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="163.6" y="739.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="166.6" y="750.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.32%)</title><rect x="163.6" y="723.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="166.6" y="734.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.32%)</title><rect x="163.6" y="707.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="166.6" y="718.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="163.6" y="691.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="166.6" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="163.6" y="675.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="166.6" y="686.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.32%)</title><rect x="163.6" y="659.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="166.6" y="670.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.32%)</title><rect x="163.6" y="643.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="166.6" y="654.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="163.6" y="627.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="166.6" y="638.0"></text>
</g>
<g>
<title>ClassVerifier::verify_stackmap_table(unsigned short, unsigned short, StackMapFrame*, StackMapTable*, bool, Thread*) (1 samples, 0.32%)</title><rect x="163.6" y="611.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="166.6" y="622.0"></text>
</g>
<g>
<title>StackMapTable::match_stackmap(StackMapFrame*, int, int, bool, bool, ErrorContext*, Thread*) const (1 samples, 0.32%)</title><rect x="163.6" y="595.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="166.6" y="606.0"></text>
</g>
<g>
<title>StackMapFrame::copy_stack(StackMapFrame const*) (1 samples, 0.32%)</title><rect x="163.6" y="579.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="166.6" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.createBytecodeParser (1 samples, 0.32%)</title><rect x="167.3" y="1075.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.&lt;init&gt; (1 samples, 0.32%)</title><rect x="167.3" y="1059.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.3" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.getBytecode (1 samples, 0.32%)</title><rect x="167.3" y="1043.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.3" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.getClassfile (1 samples, 0.32%)</title><rect x="167.3" y="1027.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.3" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/Classfile.&lt;init&gt; (1 samples, 0.32%)</title><rect x="167.3" y="1011.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.3" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/Classfile.readMethods (1 samples, 0.32%)</title><rect x="167.3" y="995.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.3" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/Classfile.findCodeAttribute (1 samples, 0.32%)</title><rect x="167.3" y="979.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.3" y="990.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="167.3" y="963.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="170.3" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="167.3" y="947.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="170.3" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="167.3" y="931.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="170.3" y="942.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.32%)</title><rect x="167.3" y="915.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="170.3" y="926.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.32%)</title><rect x="167.3" y="899.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="170.3" y="910.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="167.3" y="883.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="170.3" y="894.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.32%)</title><rect x="167.3" y="867.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.3" y="878.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.32%)</title><rect x="167.3" y="851.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="170.3" y="862.0"></text>
</g>
<g>
<title>GrowableArray&lt;Symbol*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.32%)</title><rect x="167.3" y="835.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="170.3" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newCompilationResultBuilder (2 samples, 0.63%)</title><rect x="171.1" y="1283.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.1" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.createAssembler (1 samples, 0.32%)</title><rect x="171.1" y="1267.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.1" y="1278.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="171.1" y="1251.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="174.1" y="1262.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="171.1" y="1235.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="174.1" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="171.1" y="1219.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="174.1" y="1230.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.32%)</title><rect x="171.1" y="1203.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="174.1" y="1214.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.32%)</title><rect x="171.1" y="1187.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="174.1" y="1198.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="171.1" y="1171.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="174.1" y="1182.0"></text>
</g>
<g>
<title>StackMapReader::StackMapReader(ClassVerifier*, StackMapStream*, char*, int, Thread*) (1 samples, 0.32%)</title><rect x="171.1" y="1155.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="174.1" y="1166.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.32%)</title><rect x="171.1" y="1139.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="174.1" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIR.hasArgInCallerFrame (1 samples, 0.32%)</title><rect x="174.8" y="1267.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="177.8" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLIR (25 samples, 7.94%)</title><rect x="178.6" y="1299.0" width="93.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.6" y="1310.0">org/graalvm..</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLIR0 (25 samples, 7.94%)</title><rect x="178.6" y="1283.0" width="93.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.6" y="1294.0">org/graalvm..</text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLowLevel (12 samples, 3.81%)</title><rect x="178.6" y="1267.0" width="44.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="181.6" y="1278.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (12 samples, 3.81%)</title><rect x="178.6" y="1251.0" width="44.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="181.6" y="1262.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (12 samples, 3.81%)</title><rect x="178.6" y="1235.0" width="44.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="181.6" y="1246.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhaseSuite.run (12 samples, 3.81%)</title><rect x="178.6" y="1219.0" width="44.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.6" y="1230.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (12 samples, 3.81%)</title><rect x="178.6" y="1203.0" width="44.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="181.6" y="1214.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (12 samples, 3.81%)</title><rect x="178.6" y="1187.0" width="44.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="181.6" y="1198.0">org/..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination.run (1 samples, 0.32%)</title><rect x="178.6" y="1171.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination.run (1 samples, 0.32%)</title><rect x="178.6" y="1155.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="181.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination$Optimization.doOptimize (1 samples, 0.32%)</title><rect x="178.6" y="1139.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="181.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination$Optimization.solveDataFlow (1 samples, 0.32%)</title><rect x="178.6" y="1123.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="181.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination$Optimization.updateState (1 samples, 0.32%)</title><rect x="178.6" y="1107.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.6" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/RedundantMoveElimination$Optimization.clearValuesOfKindObject (1 samples, 0.32%)</title><rect x="178.6" y="1091.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="181.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanPhase.run (8 samples, 2.54%)</title><rect x="182.3" y="1171.0" width="30.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.3" y="1182.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanPhase.run (8 samples, 2.54%)</title><rect x="182.3" y="1155.0" width="30.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.3" y="1166.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.allocate (8 samples, 2.54%)</title><rect x="182.3" y="1139.0" width="30.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.3" y="1150.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.createAssignLocationsPhase (1 samples, 0.32%)</title><rect x="186.1" y="1123.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.1" y="1134.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="186.1" y="1107.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="189.1" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="186.1" y="1091.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="189.1" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="186.1" y="1075.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="189.1" y="1086.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.32%)</title><rect x="186.1" y="1059.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="189.1" y="1070.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.32%)</title><rect x="186.1" y="1043.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="189.1" y="1054.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="186.1" y="1027.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="189.1" y="1038.0"></text>
</g>
<g>
<title>ClassVerifier::verify_aload(unsigned short, StackMapFrame*, Thread*) (1 samples, 0.32%)</title><rect x="186.1" y="1011.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="189.1" y="1022.0"></text>
</g>
<g>
<title>VerificationType::is_assignable_from(VerificationType const&amp;, ClassVerifier*, bool, Thread*) const (1 samples, 0.32%)</title><rect x="186.1" y="995.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="189.1" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.apply (6 samples, 1.90%)</title><rect x="189.8" y="1123.0" width="22.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.8" y="1134.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.apply (6 samples, 1.90%)</title><rect x="189.8" y="1107.0" width="22.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.8" y="1118.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.getName (1 samples, 0.32%)</title><rect x="189.8" y="1091.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.8" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.createName (1 samples, 0.32%)</title><rect x="189.8" y="1075.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.32%)</title><rect x="189.8" y="1059.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.run (2 samples, 0.63%)</title><rect x="193.6" y="1091.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.computeLocalLiveSets (1 samples, 0.32%)</title><rect x="193.6" y="1075.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="196.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachOutput (1 samples, 0.32%)</title><rect x="193.6" y="1059.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="196.6" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachDef (1 samples, 0.32%)</title><rect x="193.6" y="1043.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.6" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.32%)</title><rect x="193.6" y="1027.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="196.6" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$Values.getValueArray (1 samples, 0.32%)</title><rect x="193.6" y="1011.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="196.6" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanLifetimeAnalysisPhase.numberInstructions (1 samples, 0.32%)</title><rect x="197.3" y="1075.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="200.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanRegisterAllocationPhase.run (2 samples, 0.63%)</title><rect x="201.0" y="1091.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.0" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanRegisterAllocationPhase.allocateRegisters (2 samples, 0.63%)</title><rect x="201.0" y="1075.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.0" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/IntervalWalker.walk (2 samples, 0.63%)</title><rect x="201.0" y="1059.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="204.0" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/IntervalWalker.walkTo (2 samples, 0.63%)</title><rect x="201.0" y="1043.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.0" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.activateCurrent (2 samples, 0.63%)</title><rect x="201.0" y="1027.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="204.0" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.allocFreeRegister (1 samples, 0.32%)</title><rect x="201.0" y="1011.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.0" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.freeCollectInactiveFixed (1 samples, 0.32%)</title><rect x="201.0" y="995.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Interval.currentIntersectsAt (1 samples, 0.32%)</title><rect x="201.0" y="979.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Range.intersectsAt (1 samples, 0.32%)</title><rect x="201.0" y="963.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.0" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/Range.isEndMarker (1 samples, 0.32%)</title><rect x="201.0" y="947.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanWalker.insertMove (1 samples, 0.32%)</title><rect x="204.8" y="1011.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.8" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.moveInsertPosition (1 samples, 0.32%)</title><rect x="204.8" y="995.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.8" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.resolveMappings (1 samples, 0.32%)</title><rect x="204.8" y="979.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.8" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.insertMove (1 samples, 0.32%)</title><rect x="204.8" y="963.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.8" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/ssa/SSAMoveResolver.createMove (1 samples, 0.32%)</title><rect x="204.8" y="947.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.8" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64MoveFactoryBase.createStackMove (1 samples, 0.32%)</title><rect x="204.8" y="931.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.8" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64MoveFactoryBase.createStackMove (1 samples, 0.32%)</title><rect x="204.8" y="915.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.8" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64Move$AMD64PushPopStackMove.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="204.8" y="899.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="207.8" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.create (1 samples, 0.32%)</title><rect x="204.8" y="883.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.8" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="204.8" y="867.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="207.8" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="204.8" y="851.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.8" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scan (1 samples, 0.32%)</title><rect x="204.8" y="835.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.8" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/FieldsScanner.scan (1 samples, 0.32%)</title><rect x="204.8" y="819.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.8" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass$LIRInstructionFieldsScanner.scanField (1 samples, 0.32%)</title><rect x="204.8" y="803.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="207.8" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$LIRFieldsScanner.scanField (1 samples, 0.32%)</title><rect x="204.8" y="787.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.8" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection$LIRFieldsScanner.getOperandModeAnnotation (1 samples, 0.32%)</title><rect x="204.8" y="771.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.8" y="782.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.getAnnotation (1 samples, 0.32%)</title><rect x="204.8" y="755.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.8" y="766.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.32%)</title><rect x="204.8" y="739.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.8" y="750.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.declaredAnnotations (1 samples, 0.32%)</title><rect x="204.8" y="723.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.8" y="734.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations (1 samples, 0.32%)</title><rect x="204.8" y="707.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.8" y="718.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotations2 (1 samples, 0.32%)</title><rect x="204.8" y="691.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.8" y="702.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseAnnotation2 (1 samples, 0.32%)</title><rect x="204.8" y="675.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.8" y="686.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseMemberValue (1 samples, 0.32%)</title><rect x="204.8" y="659.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.8" y="670.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseArray (1 samples, 0.32%)</title><rect x="204.8" y="643.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.8" y="654.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseEnumArray (1 samples, 0.32%)</title><rect x="204.8" y="627.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.8" y="638.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseArrayElements (1 samples, 0.32%)</title><rect x="204.8" y="611.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="207.8" y="622.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser$$Lambda$22/1193702625.get (1 samples, 0.32%)</title><rect x="204.8" y="595.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.8" y="606.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.lambda$parseEnumArray$1 (1 samples, 0.32%)</title><rect x="204.8" y="579.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.8" y="590.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseEnumValue (1 samples, 0.32%)</title><rect x="204.8" y="563.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.8" y="574.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationParser.parseSig (1 samples, 0.32%)</title><rect x="204.8" y="547.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.8" y="558.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSig (1 samples, 0.32%)</title><rect x="204.8" y="531.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.8" y="542.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseTypeSignature (1 samples, 0.32%)</title><rect x="204.8" y="515.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.8" y="526.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.32%)</title><rect x="204.8" y="499.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.8" y="510.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseFieldTypeSignature (1 samples, 0.32%)</title><rect x="204.8" y="483.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.8" y="494.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parseClassTypeSignature (1 samples, 0.32%)</title><rect x="204.8" y="467.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.8" y="478.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.parsePackageNameAndSimpleClassTypeSignature (1 samples, 0.32%)</title><rect x="204.8" y="451.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.8" y="462.0"></text>
</g>
<g>
<title>sun/reflect/generics/parser/SignatureParser.skipIdentifier (1 samples, 0.32%)</title><rect x="204.8" y="435.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.8" y="446.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.32%)</title><rect x="204.8" y="419.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.8" y="430.0"></text>
</g>
<g>
<title>java/lang/Character.isWhitespace (1 samples, 0.32%)</title><rect x="204.8" y="403.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.8" y="414.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.run (1 samples, 0.32%)</title><rect x="208.5" y="1091.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="211.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.resolveDataFlow (1 samples, 0.32%)</title><rect x="208.5" y="1075.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanResolveDataFlowPhase.optimizeEmptyBlocks (1 samples, 0.32%)</title><rect x="208.5" y="1059.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.5" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.resolveAndAppendMoves (1 samples, 0.32%)</title><rect x="208.5" y="1043.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.5" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/MoveResolver.resolveMappings (1 samples, 0.32%)</title><rect x="208.5" y="1027.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.5" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.remove (1 samples, 0.32%)</title><rect x="208.5" y="1011.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="211.5" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.32%)</title><rect x="208.5" y="995.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="211.5" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="208.5" y="979.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="211.5" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="208.5" y="963.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="211.5" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.32%)</title><rect x="208.5" y="947.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="211.5" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.32%)</title><rect x="208.5" y="931.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="211.5" y="942.0"></text>
</g>
<g>
<title>constantPoolHandle::~constantPoolHandle() (1 samples, 0.32%)</title><rect x="208.5" y="915.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="211.5" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization.run (2 samples, 0.63%)</title><rect x="212.3" y="1171.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization.run (2 samples, 0.63%)</title><rect x="212.3" y="1155.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="215.3" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="212.3" y="1139.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="215.3" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="212.3" y="1123.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="215.3" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="212.3" y="1107.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="215.3" y="1118.0"></text>
</g>
<g>
<title>JvmtiExport::post_class_prepare(JavaThread*, Klass*) (1 samples, 0.32%)</title><rect x="212.3" y="1091.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="215.3" y="1102.0"></text>
</g>
<g>
<title>VM::loadMethodIDs(_jvmtiEnv*, JNIEnv_*, _jclass*) (1 samples, 0.32%)</title><rect x="212.3" y="1075.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="215.3" y="1086.0"></text>
</g>
<g>
<title>jvmti_GetClassMethods(_jvmtiEnv*, _jclass*, int*, _jmethodID***) (1 samples, 0.32%)</title><rect x="212.3" y="1059.0" width="3.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="215.3" y="1070.0"></text>
</g>
<g>
<title>JvmtiEnv::GetClassMethods(oopDesc*, int*, _jmethodID***) (1 samples, 0.32%)</title><rect x="212.3" y="1043.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="215.3" y="1054.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType) (1 samples, 0.32%)</title><rect x="212.3" y="1027.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="215.3" y="1038.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.32%)</title><rect x="212.3" y="1011.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="215.3" y="1022.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.32%)</title><rect x="212.3" y="995.0" width="3.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="215.3" y="1006.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.32%)</title><rect x="212.3" y="979.0" width="3.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="215.3" y="990.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.32%)</title><rect x="212.3" y="963.0" width="3.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="215.3" y="974.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.32%)</title><rect x="212.3" y="947.0" width="3.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="215.3" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.apply (1 samples, 0.32%)</title><rect x="216.0" y="1139.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.0" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/VariableMap.forEach (1 samples, 0.32%)</title><rect x="216.0" y="1123.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.0" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization$$Lambda$64/1639643487.accept (1 samples, 0.32%)</title><rect x="216.0" y="1107.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.0" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantLoadOptimization$Optimization.createConstantTree (1 samples, 0.32%)</title><rect x="216.0" y="1091.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.0" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantTree.&lt;init&gt; (1 samples, 0.32%)</title><rect x="216.0" y="1075.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.0" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/DefUseTree.forEach (1 samples, 0.32%)</title><rect x="216.0" y="1059.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.0" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.32%)</title><rect x="216.0" y="1043.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="219.0" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantTree$$Lambda$104/1769996344.accept (1 samples, 0.32%)</title><rect x="216.0" y="1027.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="219.0" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/constopt/ConstantTree.lambda$new$0 (1 samples, 0.32%)</title><rect x="216.0" y="1011.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.0" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.32%)</title><rect x="216.0" y="995.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="219.0" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.32%)</title><rect x="216.0" y="979.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.0" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.32%)</title><rect x="216.0" y="963.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.0" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.32%)</title><rect x="216.0" y="947.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.0" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.32%)</title><rect x="216.0" y="931.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="219.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase.run (1 samples, 0.32%)</title><rect x="219.8" y="1171.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="222.8" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarkerPhase.run (1 samples, 0.32%)</title><rect x="219.8" y="1155.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.8" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.build (1 samples, 0.32%)</title><rect x="219.8" y="1139.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.8" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processBlock (1 samples, 0.32%)</title><rect x="219.8" y="1123.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker.processInstructionBottomUp (1 samples, 0.32%)</title><rect x="219.8" y="1107.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="222.8" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.visitEachInput (1 samples, 0.32%)</title><rect x="219.8" y="1091.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.8" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.visitEachUse (1 samples, 0.32%)</title><rect x="219.8" y="1075.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.8" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRIntrospection.visitEach (1 samples, 0.32%)</title><rect x="219.8" y="1059.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="222.8" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/ValueConsumer.visitValue (1 samples, 0.32%)</title><rect x="219.8" y="1043.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="222.8" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/LocationMarker$2.visitValue (1 samples, 0.32%)</title><rect x="219.8" y="1027.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.8" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/dfa/RegStackValueSet.put (1 samples, 0.32%)</title><rect x="219.8" y="1011.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.8" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/util/IndexedValueMap.put (1 samples, 0.32%)</title><rect x="219.8" y="995.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.8" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.computeCodeEmittingOrder (1 samples, 0.32%)</title><rect x="223.5" y="1267.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="226.5" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.computeCodeEmittingOrder (1 samples, 0.32%)</title><rect x="223.5" y="1251.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="226.5" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.addPathToCodeEmittingOrder (1 samples, 0.32%)</title><rect x="223.5" y="1235.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.5" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/alloc/ComputeBlockOrder.enqueueSuccessors (1 samples, 0.32%)</title><rect x="223.5" y="1219.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.5" y="1230.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.32%)</title><rect x="223.5" y="1203.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="226.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newLIRGenerator (2 samples, 0.63%)</title><rect x="227.3" y="1267.0" width="7.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.63%)</title><rect x="227.3" y="1251.0" width="7.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="230.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (2 samples, 0.63%)</title><rect x="227.3" y="1235.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="230.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (2 samples, 0.63%)</title><rect x="227.3" y="1219.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (2 samples, 0.63%)</title><rect x="227.3" y="1203.0" width="7.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="230.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.63%)</title><rect x="227.3" y="1187.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="230.3" y="1198.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (2 samples, 0.63%)</title><rect x="227.3" y="1171.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="230.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (2 samples, 0.63%)</title><rect x="227.3" y="1155.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="230.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (2 samples, 0.63%)</title><rect x="227.3" y="1139.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="230.3" y="1150.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="227.3" y="1123.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="230.3" y="1134.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="227.3" y="1107.0" width="3.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="230.3" y="1118.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="1091.0" width="3.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="230.3" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="1075.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="230.3" y="1086.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="1059.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="230.3" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="1043.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="230.3" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="1027.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="230.3" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="1011.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="230.3" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="995.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="230.3" y="1006.0"></text>
</g>
<g>
<title>SymbolTable::add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="979.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="230.3" y="990.0"></text>
</g>
<g>
<title>SymbolTable::basic_add(ClassLoaderData*, constantPoolHandle const&amp;, int, char const**, int*, int*, unsigned int*, Thread*) (1 samples, 0.32%)</title><rect x="227.3" y="963.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="230.3" y="974.0"></text>
</g>
<g>
<title>Hashtable&lt;Symbol*, (MemoryType)9&gt;::new_entry(unsigned int, Symbol*) (1 samples, 0.32%)</title><rect x="227.3" y="947.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="230.3" y="958.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="231.0" y="1123.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="231.0" y="1107.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="231.0" y="1091.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="231.0" y="1075.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="231.0" y="1059.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="234.0" y="1070.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="231.0" y="1043.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="234.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="231.0" y="1027.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="231.0" y="1011.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.0" y="1022.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="231.0" y="995.0" width="3.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="234.0" y="1006.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="231.0" y="979.0" width="3.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="234.0" y="990.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="231.0" y="963.0" width="3.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="234.0" y="974.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="231.0" y="947.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="234.0" y="958.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="231.0" y="931.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="234.0" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="231.0" y="915.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="234.0" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="231.0" y="899.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="234.0" y="910.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="231.0" y="883.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="234.0" y="894.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="231.0" y="867.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="234.0" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotBackend.newNodeLIRBuilder (2 samples, 0.63%)</title><rect x="234.8" y="1267.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="237.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="234.8" y="1251.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="234.8" y="1235.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="237.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="234.8" y="1219.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="234.8" y="1203.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="234.8" y="1187.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.8" y="1198.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="234.8" y="1171.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="234.8" y="1155.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="234.8" y="1139.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.8" y="1150.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="234.8" y="1123.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="237.8" y="1134.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="234.8" y="1107.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="237.8" y="1118.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="234.8" y="1091.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="237.8" y="1102.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="234.8" y="1075.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="237.8" y="1086.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="234.8" y="1059.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="237.8" y="1070.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="234.8" y="1043.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="237.8" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="234.8" y="1027.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="237.8" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.32%)</title><rect x="234.8" y="1011.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="237.8" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.32%)</title><rect x="234.8" y="995.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="237.8" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::copy_localvariable_table(ConstMethod const*, int, unsigned short*, void const**, int, unsigned short*, void const**, Thread*) (1 samples, 0.32%)</title><rect x="234.8" y="979.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="237.8" y="990.0"></text>
</g>
<g>
<title>ResourceHashtable&lt;LocalVariableTableElement, LocalVariableTableElement*, &amp;(LVT_Hash::hash(LocalVariableTableElement const&amp;)), &amp;(LVT_Hash::equals(LocalVariableTableElement const&amp;, LocalVariableTableElement const&amp;)), 256u, (ResourceObj::allocation_type)1, (MemoryType)7&gt;::put(LocalVariableTableElement const&amp;, LocalVariableTableElement* const&amp;) (1 samples, 0.32%)</title><rect x="234.8" y="963.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="237.8" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotNodeLIRBuilder.&lt;init&gt; (1 samples, 0.32%)</title><rect x="238.5" y="1251.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="241.5" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeLIRBuilder.&lt;init&gt; (1 samples, 0.32%)</title><rect x="238.5" y="1235.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.5" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.&lt;init&gt; (1 samples, 0.32%)</title><rect x="238.5" y="1219.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="241.5" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchRuleRegistry.lookup (1 samples, 0.32%)</title><rect x="238.5" y="1203.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="241.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchRuleRegistry.createRules (1 samples, 0.32%)</title><rect x="238.5" y="1187.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.5" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeMatchRules_MatchStatementSet.statements (1 samples, 0.32%)</title><rect x="238.5" y="1171.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="241.5" y="1182.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="238.5" y="1155.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="241.5" y="1166.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="238.5" y="1139.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="241.5" y="1150.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.32%)</title><rect x="238.5" y="1123.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="241.5" y="1134.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.32%)</title><rect x="238.5" y="1107.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="241.5" y="1118.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="238.5" y="1091.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="241.5" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="238.5" y="1075.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="241.5" y="1086.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.32%)</title><rect x="238.5" y="1059.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="241.5" y="1070.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.32%)</title><rect x="238.5" y="1043.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="241.5" y="1054.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="238.5" y="1027.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="241.5" y="1038.0"></text>
</g>
<g>
<title>ClassVerifier::verify_invoke_instructions(RawBytecodeStream*, unsigned int, StackMapFrame*, bool, bool*, VerificationType, constantPoolHandle const&amp;, StackMapTable*, Thread*) (1 samples, 0.32%)</title><rect x="238.5" y="1011.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="241.5" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (8 samples, 2.54%)</title><rect x="242.3" y="1267.0" width="29.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="245.3" y="1278.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (8 samples, 2.54%)</title><rect x="242.3" y="1251.0" width="29.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="245.3" y="1262.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.run (8 samples, 2.54%)</title><rect x="242.3" y="1235.0" width="29.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="245.3" y="1246.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.run (8 samples, 2.54%)</title><rect x="242.3" y="1219.0" width="29.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="245.3" y="1230.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/core/LIRGenerationPhase.emitBlock (7 samples, 2.22%)</title><rect x="242.3" y="1203.0" width="26.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.3" y="1214.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.doBlock (7 samples, 2.22%)</title><rect x="242.3" y="1187.0" width="26.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.3" y="1198.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.doRoot (4 samples, 1.27%)</title><rect x="242.3" y="1171.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.3" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.emitNode (4 samples, 1.27%)</title><rect x="242.3" y="1155.0" width="14.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="245.3" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.generate (1 samples, 0.32%)</title><rect x="242.3" y="1139.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="245.3" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/extended/ForeignCallNode.generate (3 samples, 0.95%)</title><rect x="246.0" y="1139.0" width="11.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.0" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (3 samples, 0.95%)</title><rect x="246.0" y="1123.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.0" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotForeignCallsProviderImpl.lookupForeignCall (3 samples, 0.95%)</title><rect x="246.0" y="1107.0" width="11.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="249.0" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotForeignCallLinkageImpl.finalizeAddress (3 samples, 0.95%)</title><rect x="246.0" y="1091.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.0" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.getCode (3 samples, 0.95%)</title><rect x="246.0" y="1075.0" width="11.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.0" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/Stub.buildCompilationResult (3 samples, 0.95%)</title><rect x="246.0" y="1059.0" width="11.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.0" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitBackEnd (1 samples, 0.32%)</title><rect x="246.0" y="1043.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.0" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLIR (1 samples, 0.32%)</title><rect x="246.0" y="1027.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.0" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLIR0 (1 samples, 0.32%)</title><rect x="246.0" y="1011.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.0" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitLowLevel (1 samples, 0.32%)</title><rect x="246.0" y="995.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="249.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.32%)</title><rect x="246.0" y="979.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.32%)</title><rect x="246.0" y="963.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.0" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhaseSuite.run (1 samples, 0.32%)</title><rect x="246.0" y="947.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.32%)</title><rect x="246.0" y="931.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/LIRPhase.apply (1 samples, 0.32%)</title><rect x="246.0" y="915.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanPhase.run (1 samples, 0.32%)</title><rect x="246.0" y="899.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.0" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanPhase.run (1 samples, 0.32%)</title><rect x="246.0" y="883.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.0" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScan.allocate (1 samples, 0.32%)</title><rect x="246.0" y="867.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="249.0" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.apply (1 samples, 0.32%)</title><rect x="246.0" y="851.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAllocationPhase.apply (1 samples, 0.32%)</title><rect x="246.0" y="835.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.0" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.run (1 samples, 0.32%)</title><rect x="246.0" y="819.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.0" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.assignLocations (1 samples, 0.32%)</title><rect x="246.0" y="803.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.0" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.assignLocations (1 samples, 0.32%)</title><rect x="246.0" y="787.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="249.0" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/alloc/lsra/LinearScanAssignLocationsPhase.assignLocations (1 samples, 0.32%)</title><rect x="246.0" y="771.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="249.0" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstruction.forEachState (1 samples, 0.32%)</title><rect x="246.0" y="755.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.0" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/LIRInstructionClass.forEachState (1 samples, 0.32%)</title><rect x="246.0" y="739.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitFrontEnd (1 samples, 0.32%)</title><rect x="249.7" y="1043.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="249.7" y="1027.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="249.7" y="1011.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (1 samples, 0.32%)</title><rect x="249.7" y="995.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="249.7" y="979.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.7" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="249.7" y="963.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.7" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (1 samples, 0.32%)</title><rect x="249.7" y="947.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.7" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (1 samples, 0.32%)</title><rect x="249.7" y="931.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.7" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="249.7" y="915.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.7" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="249.7" y="899.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="252.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (1 samples, 0.32%)</title><rect x="249.7" y="883.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.7" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (1 samples, 0.32%)</title><rect x="249.7" y="867.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.7" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTree (1 samples, 0.32%)</title><rect x="249.7" y="851.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="252.7" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDefault (1 samples, 0.32%)</title><rect x="249.7" y="835.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.7" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/ForeignCallStub.getGraph (1 samples, 0.32%)</title><rect x="253.5" y="1043.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.5" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/GraphKit.&lt;init&gt; (1 samples, 0.32%)</title><rect x="253.5" y="1027.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="256.5" y="1038.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="253.5" y="1011.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="256.5" y="1022.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.32%)</title><rect x="253.5" y="995.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="256.5" y="1006.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.32%)</title><rect x="253.5" y="979.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="256.5" y="990.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="253.5" y="963.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="256.5" y="974.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="253.5" y="947.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="256.5" y="958.0"></text>
</g>
<g>
<title>PlaceholderTable::find_and_add(int, unsigned int, Symbol*, ClassLoaderData*, PlaceholderTable::classloadAction, Symbol*, Thread*) (1 samples, 0.32%)</title><rect x="253.5" y="931.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="256.5" y="942.0"></text>
</g>
<g>
<title>PlaceholderEntry::add_seen_thread(Thread*, PlaceholderTable::classloadAction) (1 samples, 0.32%)</title><rect x="253.5" y="915.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="256.5" y="926.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="253.5" y="899.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="256.5" y="910.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="253.5" y="883.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="256.5" y="894.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.32%)</title><rect x="253.5" y="867.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="256.5" y="878.0"></text>
</g>
<g>
<title>malloc (1 samples, 0.32%)</title><rect x="253.5" y="851.0" width="3.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="256.5" y="862.0"></text>
</g>
<g>
<title>malloc_zone_malloc (1 samples, 0.32%)</title><rect x="253.5" y="835.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="256.5" y="846.0"></text>
</g>
<g>
<title>szone_malloc_should_clear (1 samples, 0.32%)</title><rect x="253.5" y="819.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="256.5" y="830.0"></text>
</g>
<g>
<title>tiny_malloc_should_clear (1 samples, 0.32%)</title><rect x="253.5" y="803.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="256.5" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/gen/NodeLIRBuilder.matchComplexExpressions (1 samples, 0.32%)</title><rect x="257.2" y="1171.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="260.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchStatement.generate (1 samples, 0.32%)</title><rect x="257.2" y="1155.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.matchShape (1 samples, 0.32%)</title><rect x="257.2" y="1139.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.matchShape (1 samples, 0.32%)</title><rect x="257.2" y="1123.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="260.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/MatchPattern.matchType (1 samples, 0.32%)</title><rect x="257.2" y="1107.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.2" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="257.2" y="1091.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="260.2" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_get_put(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="257.2" y="1075.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="260.2" y="1086.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field_access(fieldDescriptor&amp;, constantPoolHandle const&amp;, int, methodHandle const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="1059.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="260.2" y="1070.0"></text>
</g>
<g>
<title>LinkInfo::LinkInfo(constantPoolHandle const&amp;, int, methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="1043.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="260.2" y="1054.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="1027.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="260.2" y="1038.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="1011.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="260.2" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="995.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="260.2" y="1006.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="979.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="260.2" y="990.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="963.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="260.2" y="974.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="947.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="260.2" y="958.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="931.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="260.2" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="915.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="260.2" y="926.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.32%)</title><rect x="257.2" y="899.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="260.2" y="910.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.32%)</title><rect x="257.2" y="883.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="260.2" y="894.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.32%)</title><rect x="257.2" y="867.0" width="3.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="260.2" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/match/ComplexMatchValue.evaluate (2 samples, 0.63%)</title><rect x="261.0" y="1171.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.0" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64NodeMatchRules$1.evaluate (2 samples, 0.63%)</title><rect x="261.0" y="1155.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.0" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64LIRGenerator.emitCompareBranchMemory (1 samples, 0.32%)</title><rect x="264.7" y="1139.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLIRGenerator.beforeRegisterAllocation (1 samples, 0.32%)</title><rect x="268.5" y="1203.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="271.5" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64FrameMapBuilder.allocateDeoptimizationRescueSlot (1 samples, 0.32%)</title><rect x="268.5" y="1187.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="271.5" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/amd64/AMD64FrameMap.allocateDeoptimizationRescueSlot (1 samples, 0.32%)</title><rect x="268.5" y="1171.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="271.5" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/framemap/FrameMap.allocateSpillSlot (1 samples, 0.32%)</title><rect x="268.5" y="1155.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="271.5" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/framemap/FrameMap.spillSlotSize (1 samples, 0.32%)</title><rect x="268.5" y="1139.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="271.5" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/GraalCompiler.emitFrontEnd (71 samples, 22.54%)</title><rect x="272.2" y="1315.0" width="266.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.2" y="1326.0">org/graalvm/compiler/core/GraalComp..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.maybeCompress (1 samples, 0.32%)</title><rect x="272.2" y="1299.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.2" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.maybeCompress (1 samples, 0.32%)</title><rect x="272.2" y="1283.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="275.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (70 samples, 22.22%)</title><rect x="276.0" y="1299.0" width="262.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="279.0" y="1310.0">org/graalvm/compiler/phases/BasePha..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (70 samples, 22.22%)</title><rect x="276.0" y="1283.0" width="262.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.0" y="1294.0">org/graalvm/compiler/phases/BasePha..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (70 samples, 22.22%)</title><rect x="276.0" y="1267.0" width="262.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.0" y="1278.0">org/graalvm/compiler/phases/PhaseSu..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (70 samples, 22.22%)</title><rect x="276.0" y="1251.0" width="262.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.0" y="1262.0">org/graalvm/compiler/phases/BasePha..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (70 samples, 22.22%)</title><rect x="276.0" y="1235.0" width="262.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.0" y="1246.0">org/graalvm/compiler/phases/BasePha..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (10 samples, 3.17%)</title><rect x="276.0" y="1219.0" width="37.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.0" y="1230.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (10 samples, 3.17%)</title><rect x="276.0" y="1203.0" width="37.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="279.0" y="1214.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (10 samples, 3.17%)</title><rect x="276.0" y="1187.0" width="37.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.0" y="1198.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (9 samples, 2.86%)</title><rect x="276.0" y="1171.0" width="33.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="279.0" y="1182.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (6 samples, 1.90%)</title><rect x="276.0" y="1155.0" width="22.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="279.0" y="1166.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (6 samples, 1.90%)</title><rect x="276.0" y="1139.0" width="22.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="279.0" y="1150.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (6 samples, 1.90%)</title><rect x="276.0" y="1123.0" width="22.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="279.0" y="1134.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendLoopBegin (1 samples, 0.32%)</title><rect x="276.0" y="1107.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.0" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/AbstractMergeNode.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="276.0" y="1091.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="279.0" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.32%)</title><rect x="276.0" y="1075.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.0" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="276.0" y="1059.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="279.0" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="276.0" y="1043.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="279.0" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addIterableId (1 samples, 0.32%)</title><rect x="276.0" y="1027.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.0" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.32%)</title><rect x="276.0" y="1011.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="279.0" y="1022.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xaa000000)@0x000000011bc2e900 (1 samples, 0.32%)</title><rect x="276.0" y="995.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="279.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (5 samples, 1.59%)</title><rect x="279.7" y="1107.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genArrayLength (1 samples, 0.32%)</title><rect x="279.7" y="1091.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="282.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.maybeEmitExplicitNullCheck (1 samples, 0.32%)</title><rect x="279.7" y="1075.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.7" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="279.7" y="1059.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="282.7" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="279.7" y="1043.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="282.7" y="1054.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="1027.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="282.7" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="1011.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="282.7" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="995.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="282.7" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="979.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="282.7" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::rewrite_class(Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="963.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="282.7" y="974.0"></text>
</g>
<g>
<title>Rewriter::rewrite(InstanceKlass*, Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="947.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="282.7" y="958.0"></text>
</g>
<g>
<title>Rewriter::Rewriter(InstanceKlass*, constantPoolHandle const&amp;, Array&lt;Method*&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="931.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="282.7" y="942.0"></text>
</g>
<g>
<title>Rewriter::make_constant_pool_cache(Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="915.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="282.7" y="926.0"></text>
</g>
<g>
<title>ConstantPoolCache::allocate(ClassLoaderData*, GrowableArray&lt;int&gt; const&amp;, GrowableArray&lt;int&gt; const&amp;, GrowableArray&lt;int&gt; const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="899.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="282.7" y="910.0"></text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 0.32%)</title><rect x="279.7" y="883.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="282.7" y="894.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.32%)</title><rect x="279.7" y="867.0" width="3.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="282.7" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeSpecial (1 samples, 0.32%)</title><rect x="283.5" y="1091.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeSpecial (1 samples, 0.32%)</title><rect x="283.5" y="1075.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="283.5" y="1059.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.5" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.32%)</title><rect x="283.5" y="1043.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.5" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.32%)</title><rect x="283.5" y="1027.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="286.5" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.32%)</title><rect x="283.5" y="1011.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.5" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="283.5" y="995.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="286.5" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="283.5" y="979.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.5" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="283.5" y="963.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.5" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="283.5" y="947.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.5" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeSpecial (1 samples, 0.32%)</title><rect x="283.5" y="931.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.5" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeSpecial (1 samples, 0.32%)</title><rect x="283.5" y="915.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.5" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="283.5" y="899.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.5" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.32%)</title><rect x="283.5" y="883.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.5" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugin.execute (1 samples, 0.32%)</title><rect x="283.5" y="867.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.5" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/StandardGraphBuilderPlugins$24.apply (1 samples, 0.32%)</title><rect x="283.5" y="851.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="286.5" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/RegisterFinalizerNode.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="283.5" y="835.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.5" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.32%)</title><rect x="283.5" y="819.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.5" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="283.5" y="803.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.5" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="283.5" y="787.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.5" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/FieldsScanner.scan (1 samples, 0.32%)</title><rect x="283.5" y="771.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="286.5" y="782.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredFields (1 samples, 0.32%)</title><rect x="283.5" y="755.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="286.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Class.copyFields (1 samples, 0.32%)</title><rect x="283.5" y="739.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.5" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="287.2" y="1091.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="290.2" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="287.2" y="1075.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.2" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="287.2" y="1059.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.32%)</title><rect x="287.2" y="1043.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.2" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/MethodSubstitutionPlugin.execute (1 samples, 0.32%)</title><rect x="287.2" y="1027.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.2" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.intrinsify (1 samples, 0.32%)</title><rect x="287.2" y="1011.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.2" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.32%)</title><rect x="287.2" y="995.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.2" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.32%)</title><rect x="287.2" y="979.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.2" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="287.2" y="963.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.2" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="287.2" y="947.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.2" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="287.2" y="931.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.2" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="287.2" y="915.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.2" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="287.2" y="899.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.2" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="287.2" y="883.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.2" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="287.2" y="867.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="290.2" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.32%)</title><rect x="287.2" y="851.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.2" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.32%)</title><rect x="287.2" y="835.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.2" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.32%)</title><rect x="287.2" y="819.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="290.2" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="287.2" y="803.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.2" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="287.2" y="787.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.2" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="287.2" y="771.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="290.2" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="287.2" y="755.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.2" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="287.2" y="739.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="290.2" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="287.2" y="723.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.2" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="287.2" y="707.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="290.2" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInvocationPlugin (1 samples, 0.32%)</title><rect x="287.2" y="691.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="290.2" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.afterInvocationPluginExecution (1 samples, 0.32%)</title><rect x="287.2" y="675.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.2" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genReturn (1 samples, 0.32%)</title><rect x="291.0" y="1091.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.0" y="1102.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xbb000000)@0x000000011bc26480 (1 samples, 0.32%)</title><rect x="291.0" y="1075.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.loadLocalObject (1 samples, 0.32%)</title><rect x="294.7" y="1091.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.32%)</title><rect x="294.7" y="1075.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.32%)</title><rect x="294.7" y="1059.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.7" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.32%)</title><rect x="294.7" y="1043.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.7" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genLoadField (1 samples, 0.32%)</title><rect x="294.7" y="1027.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.7" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/LoadFieldNode.create (1 samples, 0.32%)</title><rect x="294.7" y="1011.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.7" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forDeclaredType (1 samples, 0.32%)</title><rect x="294.7" y="995.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.create (1 samples, 0.32%)</title><rect x="294.7" y="979.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="297.7" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/TypeReference.createTrusted (1 samples, 0.32%)</title><rect x="294.7" y="963.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.7" y="974.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaType.isLeaf (1 samples, 0.32%)</title><rect x="294.7" y="947.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="297.7" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.32%)</title><rect x="294.7" y="931.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="297.7" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.cleanupFinalGraph (1 samples, 0.32%)</title><rect x="298.4" y="1155.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="301.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.normalizeLoops (1 samples, 0.32%)</title><rect x="298.4" y="1139.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="301.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.normalizeLoopBegin (1 samples, 0.32%)</title><rect x="298.4" y="1123.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="301.4" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.checkRedundantPhi (1 samples, 0.32%)</title><rect x="298.4" y="1107.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="301.4" y="1118.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.32%)</title><rect x="298.4" y="1091.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="301.4" y="1102.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.32%)</title><rect x="298.4" y="1075.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="301.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/ComputeLoopFrequenciesClosure.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="302.2" y="1155.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="302.2" y="1139.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="302.2" y="1123.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="305.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="302.2" y="1107.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findLoadedModule (1 samples, 0.32%)</title><rect x="302.2" y="1091.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="305.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.32%)</title><rect x="302.2" y="1075.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="305.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.32%)</title><rect x="302.2" y="1059.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="305.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.initializeForMethodStart (1 samples, 0.32%)</title><rect x="305.9" y="1155.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="308.9" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/FloatingNode.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="305.9" y="1139.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.32%)</title><rect x="305.9" y="1123.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.get (1 samples, 0.32%)</title><rect x="305.9" y="1107.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.getUnchecked (1 samples, 0.32%)</title><rect x="305.9" y="1091.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/reflect/Field.setAccessible (1 samples, 0.32%)</title><rect x="305.9" y="1075.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.getCallerClass (1 samples, 0.32%)</title><rect x="305.9" y="1059.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="308.9" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.createBytecodeParser (1 samples, 0.32%)</title><rect x="309.7" y="1171.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="309.7" y="1155.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="309.7" y="1139.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="309.7" y="1123.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="309.7" y="1107.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="309.7" y="1091.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.7" y="1102.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="309.7" y="1075.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="309.7" y="1059.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="309.7" y="1043.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.7" y="1054.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="309.7" y="1027.0" width="3.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="312.7" y="1038.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="309.7" y="1011.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="312.7" y="1022.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="309.7" y="995.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="312.7" y="1006.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="309.7" y="979.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="312.7" y="990.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="309.7" y="963.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="312.7" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="309.7" y="947.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="312.7" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="309.7" y="931.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="312.7" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 0.32%)</title><rect x="309.7" y="915.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="312.7" y="926.0"></text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 0.32%)</title><rect x="309.7" y="899.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="312.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopPeelingPhase.run (1 samples, 0.32%)</title><rect x="313.4" y="1219.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.4" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopPeelingPhase.run (1 samples, 0.32%)</title><rect x="313.4" y="1203.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.4" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.peel (1 samples, 0.32%)</title><rect x="313.4" y="1187.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="316.4" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.insertBefore (1 samples, 0.32%)</title><rect x="313.4" y="1171.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.patchNodes (1 samples, 0.32%)</title><rect x="313.4" y="1155.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.32%)</title><rect x="313.4" y="1139.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.32%)</title><rect x="313.4" y="1123.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="316.4" y="1134.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="313.4" y="1107.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="316.4" y="1118.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="1091.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="316.4" y="1102.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="1075.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="316.4" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="1059.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="316.4" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="1043.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="316.4" y="1054.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="1027.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="316.4" y="1038.0"></text>
</g>
<g>
<title>java_lang_String::create_from_symbol(Symbol*, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="1011.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="316.4" y="1022.0"></text>
</g>
<g>
<title>java_lang_String::basic_create(int, bool, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="995.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="316.4" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="979.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="316.4" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.32%)</title><rect x="313.4" y="963.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="316.4" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.32%)</title><rect x="313.4" y="947.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="316.4" y="958.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.32%)</title><rect x="313.4" y="931.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="316.4" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.32%)</title><rect x="317.2" y="1219.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="320.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/ReassociateInvariantPhase.run (1 samples, 0.32%)</title><rect x="317.2" y="1203.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="320.2" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopEx.reassociateInvariants (1 samples, 0.32%)</title><rect x="317.2" y="1187.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.2" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentWhole.nodes (1 samples, 0.32%)</title><rect x="317.2" y="1171.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.2" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.computeNodes (1 samples, 0.32%)</title><rect x="317.2" y="1155.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="320.2" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.computeNodes (1 samples, 0.32%)</title><rect x="317.2" y="1139.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="320.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.32%)</title><rect x="317.2" y="1123.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment$$Lambda$37/1323288018.accept (1 samples, 0.32%)</title><rect x="317.2" y="1107.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="320.2" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.lambda$computeNodes$1 (1 samples, 0.32%)</title><rect x="317.2" y="1091.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="320.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.32%)</title><rect x="317.2" y="1075.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.2" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (8 samples, 2.54%)</title><rect x="320.9" y="1219.0" width="30.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="323.9" y="1230.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.run (8 samples, 2.54%)</title><rect x="320.9" y="1203.0" width="30.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.9" y="1214.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (8 samples, 2.54%)</title><rect x="320.9" y="1187.0" width="30.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="323.9" y="1198.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (8 samples, 2.54%)</title><rect x="320.9" y="1171.0" width="30.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="323.9" y="1182.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (8 samples, 2.54%)</title><rect x="320.9" y="1155.0" width="30.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.9" y="1166.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValueNode.stamp (1 samples, 0.32%)</title><rect x="320.9" y="1139.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/NodeView$Default.stamp (1 samples, 0.32%)</title><rect x="320.9" y="1123.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryInferStamp (1 samples, 0.32%)</title><rect x="320.9" y="1107.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="323.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.tryKillUnused (2 samples, 0.63%)</title><rect x="324.7" y="1139.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (2 samples, 0.63%)</title><rect x="324.7" y="1123.0" width="7.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (2 samples, 0.63%)</title><rect x="324.7" y="1107.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.inputs (1 samples, 0.32%)</title><rect x="324.7" y="1091.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.7" y="1102.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.32%)</title><rect x="324.7" y="1075.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="327.7" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.markDeleted (1 samples, 0.32%)</title><rect x="328.4" y="1091.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unregister (1 samples, 0.32%)</title><rect x="328.4" y="1075.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.removeNodeFromCache (1 samples, 0.32%)</title><rect x="328.4" y="1059.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.removeKey (1 samples, 0.32%)</title><rect x="328.4" y="1043.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.remove (1 samples, 0.32%)</title><rect x="328.4" y="1027.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.maybeCompress (1 samples, 0.32%)</title><rect x="328.4" y="1011.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="331.4" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (2 samples, 0.63%)</title><rect x="332.2" y="1139.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.2" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/spi/Canonicalizable$Binary.canonical (1 samples, 0.32%)</title><rect x="332.2" y="1123.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="335.2" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.32%)</title><rect x="332.2" y="1107.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="335.2" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode.canonical (1 samples, 0.32%)</title><rect x="332.2" y="1091.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.2" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.canonical (1 samples, 0.32%)</title><rect x="332.2" y="1075.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.2" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLessThanNode$LessThanOp.findSynonym (1 samples, 0.32%)</title><rect x="332.2" y="1059.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="335.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/calc/IntegerLowerThanNode$LowerOp.findSynonym (1 samples, 0.32%)</title><rect x="332.2" y="1043.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.2" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method_ic_miss(JavaThread*) (1 samples, 0.32%)</title><rect x="332.2" y="1027.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="335.2" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::handle_ic_miss_helper(JavaThread*, Thread*) (1 samples, 0.32%)</title><rect x="332.2" y="1011.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="335.2" y="1022.0"></text>
</g>
<g>
<title>CompiledIC::set_to_megamorphic(CallInfo*, Bytecodes::Code, Thread*) (1 samples, 0.32%)</title><rect x="332.2" y="995.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="335.2" y="1006.0"></text>
</g>
<g>
<title>InlineCacheBuffer::create_transition_stub(CompiledIC*, void*, unsigned char*) (1 samples, 0.32%)</title><rect x="332.2" y="979.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="335.2" y="990.0"></text>
</g>
<g>
<title>CompiledIC::internal_set_ic_destination(unsigned char*, bool, void*, bool) (1 samples, 0.32%)</title><rect x="332.2" y="963.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="335.2" y="974.0"></text>
</g>
<g>
<title>NativeCall::set_destination(unsigned char*) (1 samples, 0.32%)</title><rect x="332.2" y="947.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="335.2" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.performReplacement (1 samples, 0.32%)</title><rect x="335.9" y="1123.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="338.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.32%)</title><rect x="335.9" y="1107.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.32%)</title><rect x="335.9" y="1091.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="338.9" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.killWithUnusedFloatingInputs (1 samples, 0.32%)</title><rect x="335.9" y="1075.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.9" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.markDeleted (1 samples, 0.32%)</title><rect x="335.9" y="1059.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="338.9" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.unregister (1 samples, 0.32%)</title><rect x="335.9" y="1043.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.9" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.removeNodeFromCache (1 samples, 0.32%)</title><rect x="335.9" y="1027.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.removeKey (1 samples, 0.32%)</title><rect x="335.9" y="1011.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.findAndRemoveHash (1 samples, 0.32%)</title><rect x="335.9" y="995.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.32%)</title><rect x="335.9" y="979.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="338.9" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$1.hashCode (1 samples, 0.32%)</title><rect x="335.9" y="963.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.9" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.valueNumber (1 samples, 0.32%)</title><rect x="335.9" y="947.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="338.9" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.deepHashCode0 (1 samples, 0.32%)</title><rect x="335.9" y="931.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.9" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.32%)</title><rect x="335.9" y="915.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="338.9" y="926.0"></text>
</g>
<g>
<title>JVM_IsArrayClass (1 samples, 0.32%)</title><rect x="335.9" y="899.0" width="3.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="338.9" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.32%)</title><rect x="335.9" y="883.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="338.9" y="894.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.32%)</title><rect x="335.9" y="867.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="338.9" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryGlobalValueNumbering (1 samples, 0.32%)</title><rect x="339.7" y="1139.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.32%)</title><rect x="339.7" y="1123.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryInferStamp (2 samples, 0.63%)</title><rect x="343.4" y="1139.0" width="7.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/ValuePhiNode.inferStamp (2 samples, 0.63%)</title><rect x="343.4" y="1123.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="346.4" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/type/StampTool.meetOrNull (2 samples, 0.63%)</title><rect x="343.4" y="1107.0" width="7.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.meet (1 samples, 0.32%)</title><rect x="343.4" y="1091.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="346.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/Stamp.isEmpty (1 samples, 0.32%)</title><rect x="343.4" y="1075.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.hasValues (1 samples, 0.32%)</title><rect x="343.4" y="1059.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="346.4" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractObjectStamp.isConcreteType (1 samples, 0.32%)</title><rect x="343.4" y="1043.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.4" y="1054.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ModifiersProvider.isAbstract (1 samples, 0.32%)</title><rect x="343.4" y="1027.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.4" y="1038.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getModifiers (1 samples, 0.32%)</title><rect x="343.4" y="1011.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.4" y="1022.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.isArray (1 samples, 0.32%)</title><rect x="343.4" y="995.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="346.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.32%)</title><rect x="343.4" y="979.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="346.4" y="990.0"></text>
</g>
<g>
<title>JVM_IsArrayClass (1 samples, 0.32%)</title><rect x="343.4" y="963.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="346.4" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.32%)</title><rect x="343.4" y="947.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="346.4" y="958.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.32%)</title><rect x="343.4" y="931.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="346.4" y="942.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.32%)</title><rect x="343.4" y="915.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="346.4" y="926.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.32%)</title><rect x="343.4" y="899.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="346.4" y="910.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.32%)</title><rect x="343.4" y="883.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="346.4" y="894.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::ordered_load&lt;void volatile*, (ScopedFenceType)0&gt;(void volatile* const volatile*) (1 samples, 0.32%)</title><rect x="343.4" y="867.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="346.4" y="878.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, Atomic::PlatformLoad&lt;8ul&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.32%)</title><rect x="343.4" y="851.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="346.4" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.meet (1 samples, 0.32%)</title><rect x="347.1" y="1091.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.1" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.createStamp (1 samples, 0.32%)</title><rect x="347.1" y="1075.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.1" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.create (1 samples, 0.32%)</title><rect x="347.1" y="1059.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.1" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeoptimizationGroupingPhase.run (1 samples, 0.32%)</title><rect x="350.9" y="1219.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="353.9" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/DeoptimizationGroupingPhase.run (1 samples, 0.32%)</title><rect x="350.9" y="1203.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.9" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/DynamicDeoptimizeNode.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="350.9" y="1187.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.32%)</title><rect x="350.9" y="1171.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.9" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="350.9" y="1155.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.9" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="350.9" y="1139.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/InputEdges.&lt;init&gt; (1 samples, 0.32%)</title><rect x="350.9" y="1123.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.&lt;init&gt; (1 samples, 0.32%)</title><rect x="350.9" y="1107.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/Fields.&lt;init&gt; (1 samples, 0.32%)</title><rect x="350.9" y="1091.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="353.9" y="1102.0"></text>
</g>
<g>
<title>java/util/Collections.sort (1 samples, 0.32%)</title><rect x="350.9" y="1075.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="353.9" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.sort (1 samples, 0.32%)</title><rect x="350.9" y="1059.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.32%)</title><rect x="350.9" y="1043.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.9" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.sort (1 samples, 0.32%)</title><rect x="350.9" y="1027.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="353.9" y="1038.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.sort (1 samples, 0.32%)</title><rect x="350.9" y="1011.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="353.9" y="1022.0"></text>
</g>
<g>
<title>java/util/ComparableTimSort.countRunAndMakeAscending (1 samples, 0.32%)</title><rect x="350.9" y="995.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.9" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$EdgeInfo.compareTo (1 samples, 0.32%)</title><rect x="350.9" y="979.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="353.9" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$EdgeInfo.compareTo (1 samples, 0.32%)</title><rect x="350.9" y="963.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="353.9" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase.run (4 samples, 1.27%)</title><rect x="354.6" y="1219.0" width="15.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FixReadsPhase.run (4 samples, 1.27%)</title><rect x="354.6" y="1203.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 1.27%)</title><rect x="354.6" y="1187.0" width="15.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 1.27%)</title><rect x="354.6" y="1171.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (4 samples, 1.27%)</title><rect x="354.6" y="1155.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (4 samples, 1.27%)</title><rect x="354.6" y="1139.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (4 samples, 1.27%)</title><rect x="354.6" y="1123.0" width="15.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="357.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (4 samples, 1.27%)</title><rect x="354.6" y="1107.0" width="15.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="357.6" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlocks (2 samples, 0.63%)</title><rect x="354.6" y="1091.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlock (2 samples, 0.63%)</title><rect x="354.6" y="1075.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.checkKillsBetween (1 samples, 0.32%)</title><rect x="358.4" y="1059.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.4" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.canKillBetweenThisAndDominator (1 samples, 0.32%)</title><rect x="358.4" y="1043.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="361.4" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.getKillLocationsBetweenThisAndDominator (1 samples, 0.32%)</title><rect x="358.4" y="1027.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="361.4" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.getKillLocations (1 samples, 0.32%)</title><rect x="358.4" y="1011.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.4" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.calcKillLocations (1 samples, 0.32%)</title><rect x="358.4" y="995.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="361.4" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block$NodeIterator.next (1 samples, 0.32%)</title><rect x="358.4" y="979.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="361.4" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block$NodeIterator.next (1 samples, 0.32%)</title><rect x="358.4" y="963.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.4" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (2 samples, 0.63%)</title><rect x="362.1" y="1091.0" width="7.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.1" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processNodes (1 samples, 0.32%)</title><rect x="365.9" y="1075.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="368.9" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processStack (1 samples, 0.32%)</title><rect x="365.9" y="1059.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.9" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.processInputs (1 samples, 0.32%)</title><rect x="365.9" y="1043.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="368.9" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (4 samples, 1.27%)</title><rect x="369.6" y="1219.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="372.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (4 samples, 1.27%)</title><rect x="369.6" y="1203.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (3 samples, 0.95%)</title><rect x="369.6" y="1187.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.95%)</title><rect x="369.6" y="1171.0" width="11.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.95%)</title><rect x="369.6" y="1155.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="372.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (3 samples, 0.95%)</title><rect x="369.6" y="1139.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase.run (3 samples, 0.95%)</title><rect x="369.6" y="1123.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (3 samples, 0.95%)</title><rect x="369.6" y="1107.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="372.6" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (3 samples, 0.95%)</title><rect x="369.6" y="1091.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.6" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processLoop (2 samples, 0.63%)</title><rect x="369.6" y="1075.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="372.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processLoop (2 samples, 0.63%)</title><rect x="369.6" y="1059.0" width="7.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="372.6" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.processLoop (2 samples, 0.63%)</title><rect x="369.6" y="1043.0" width="7.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.6" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterable.count (1 samples, 0.32%)</title><rect x="369.6" y="1027.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.6" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/NodeIterator.hasNext (1 samples, 0.32%)</title><rect x="369.6" y="1011.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="372.6" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/iterators/PredicatedProxyNodeIterator.forward (1 samples, 0.32%)</title><rect x="369.6" y="995.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.6" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeUsageIterator.next (1 samples, 0.32%)</title><rect x="369.6" y="979.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="372.6" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeUsageIterator.next (1 samples, 0.32%)</title><rect x="369.6" y="963.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="372.6" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantNodeIterator.apply (1 samples, 0.32%)</title><rect x="373.4" y="1027.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.4" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.32%)</title><rect x="373.4" y="1011.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="376.4" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.32%)</title><rect x="373.4" y="995.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="376.4" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processFloatable (1 samples, 0.32%)</title><rect x="373.4" y="979.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.4" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.replaceFixedWithFloating (1 samples, 0.32%)</title><rect x="373.4" y="963.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.4" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.replaceAtUsagesAndDelete (1 samples, 0.32%)</title><rect x="373.4" y="947.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="376.4" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.safeDelete (1 samples, 0.32%)</title><rect x="373.4" y="931.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.4" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clearInputs (1 samples, 0.32%)</title><rect x="373.4" y="915.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="376.4" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.unregisterAtInputsAsUsage (1 samples, 0.32%)</title><rect x="373.4" y="899.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.4" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.putNodeUnsafe (1 samples, 0.32%)</title><rect x="373.4" y="883.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.4" y="894.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putObject (1 samples, 0.32%)</title><rect x="373.4" y="867.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="376.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.putObject (1 samples, 0.32%)</title><rect x="373.4" y="851.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.4" y="862.0"></text>
</g>
<g>
<title>Unsafe_PutObject(JNIEnv_*, _jobject*, _jobject*, long, _jobject*) (1 samples, 0.32%)</title><rect x="373.4" y="835.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="376.4" y="846.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.32%)</title><rect x="373.4" y="819.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="376.4" y="830.0"></text>
</g>
<g>
<title>InterfaceSupport::serialize_thread_state_internal(JavaThread*, bool) (1 samples, 0.32%)</title><rect x="373.4" y="803.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="376.4" y="814.0"></text>
</g>
<g>
<title>os::is_MP() (1 samples, 0.32%)</title><rect x="373.4" y="787.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="376.4" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.32%)</title><rect x="377.1" y="1075.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="380.1" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processNode (1 samples, 0.32%)</title><rect x="377.1" y="1059.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.1" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processCheckpoint (1 samples, 0.32%)</title><rect x="377.1" y="1043.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.1" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/FloatingReadPhase$FloatingReadClosure.processIdentity (1 samples, 0.32%)</title><rect x="377.1" y="1027.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/word/LocationIdentity.isMutable (1 samples, 0.32%)</title><rect x="377.1" y="1011.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="380.1" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.32%)</title><rect x="377.1" y="995.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="380.1" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="377.1" y="979.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="380.1" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="377.1" y="963.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="380.1" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.32%)</title><rect x="377.1" y="947.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="380.1" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.32%)</title><rect x="377.1" y="931.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="380.1" y="942.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.32%)</title><rect x="377.1" y="915.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="380.1" y="926.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.32%)</title><rect x="377.1" y="899.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="380.1" y="910.0"></text>
</g>
<g>
<title>LinkResolver::runtime_resolve_interface_method(CallInfo&amp;, methodHandle const&amp;, Klass*, Handle, Klass*, bool, Thread*) (1 samples, 0.32%)</title><rect x="377.1" y="883.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="380.1" y="894.0"></text>
</g>
<g>
<title>LinkResolver::lookup_instance_method_in_klasses(Klass*, Symbol*, Symbol*, Klass::PrivateLookupMode, Thread*) (1 samples, 0.32%)</title><rect x="377.1" y="867.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="380.1" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.32%)</title><rect x="377.1" y="851.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="380.1" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (1 samples, 0.32%)</title><rect x="377.1" y="835.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="380.1" y="846.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (1 samples, 0.32%)</title><rect x="377.1" y="819.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="380.1" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (1 samples, 0.32%)</title><rect x="380.9" y="1187.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="383.9" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.32%)</title><rect x="380.9" y="1171.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.9" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="380.9" y="1155.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.9" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.32%)</title><rect x="380.9" y="1139.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.9" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (1 samples, 0.32%)</title><rect x="380.9" y="1123.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.9" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeWorkList$IterativeNodeWorkList.&lt;init&gt; (1 samples, 0.32%)</title><rect x="380.9" y="1107.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="383.9" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (5 samples, 1.59%)</title><rect x="384.6" y="1219.0" width="18.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.6" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IterativeConditionalEliminationPhase.run (5 samples, 1.59%)</title><rect x="384.6" y="1203.0" width="18.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.6" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (5 samples, 1.59%)</title><rect x="384.6" y="1187.0" width="18.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.6" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (5 samples, 1.59%)</title><rect x="384.6" y="1171.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.6" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (5 samples, 1.59%)</title><rect x="384.6" y="1155.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.6" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.run (5 samples, 1.59%)</title><rect x="384.6" y="1139.0" width="18.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.6" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.compute (1 samples, 0.32%)</title><rect x="384.6" y="1123.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.6" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.&lt;init&gt; (1 samples, 0.32%)</title><rect x="384.6" y="1107.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.6" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.createNodeMap (1 samples, 0.32%)</title><rect x="384.6" y="1091.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="387.6" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="384.6" y="1075.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="387.6" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="384.6" y="1059.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="387.6" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="384.6" y="1043.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="387.6" y="1054.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.32%)</title><rect x="384.6" y="1027.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="387.6" y="1038.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.32%)</title><rect x="384.6" y="1011.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="387.6" y="1022.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="384.6" y="995.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="387.6" y="1006.0"></text>
</g>
<g>
<title>ClassVerifier::verify_aload(unsigned short, StackMapFrame*, Thread*) (1 samples, 0.32%)</title><rect x="384.6" y="979.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="387.6" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTree (1 samples, 0.32%)</title><rect x="388.3" y="1123.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.3" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/ControlFlowGraph.visitDominatorTreeDefault (1 samples, 0.32%)</title><rect x="388.3" y="1107.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.3" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (1 samples, 0.32%)</title><rect x="388.3" y="1091.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="391.3" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.enter (1 samples, 0.32%)</title><rect x="388.3" y="1075.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.3" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNodes (1 samples, 0.32%)</title><rect x="388.3" y="1059.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="391.3" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processNode (1 samples, 0.32%)</title><rect x="388.3" y="1043.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.3" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.processGuard (1 samples, 0.32%)</title><rect x="388.3" y="1027.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.3" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.tryProveGuardCondition (1 samples, 0.32%)</title><rect x="388.3" y="1011.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="391.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodHandleConstant (1 samples, 0.32%)</title><rect x="388.3" y="995.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.linkMethodHandleConstant (1 samples, 0.32%)</title><rect x="388.3" y="979.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="391.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodForConstant (1 samples, 0.32%)</title><rect x="388.3" y="963.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodNoSecurityManager (1 samples, 0.32%)</title><rect x="388.3" y="947.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 0.32%)</title><rect x="388.3" y="931.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="391.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 0.32%)</title><rect x="388.3" y="915.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.3" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.32%)</title><rect x="388.3" y="899.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="391.3" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 0.32%)</title><rect x="388.3" y="883.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.3" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 0.32%)</title><rect x="388.3" y="867.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 0.32%)</title><rect x="388.3" y="851.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 0.32%)</title><rect x="388.3" y="835.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCodeBytes (1 samples, 0.32%)</title><rect x="388.3" y="819.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.addMethod (1 samples, 0.32%)</title><rect x="388.3" y="803.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.3" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.methodPrologue (1 samples, 0.32%)</title><rect x="388.3" y="787.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.visitMethod (1 samples, 0.32%)</title><rect x="388.3" y="771.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/MethodWriter.&lt;init&gt; (1 samples, 0.32%)</title><rect x="388.3" y="755.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="391.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ClassWriter.newUTF8 (1 samples, 0.32%)</title><rect x="388.3" y="739.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/org/objectweb/asm/ByteVector.putUTF8 (1 samples, 0.32%)</title><rect x="388.3" y="723.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.3" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.32%)</title><rect x="388.3" y="707.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.32%)</title><rect x="388.3" y="691.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="391.3" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase.createVisitor (1 samples, 0.32%)</title><rect x="392.1" y="1123.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.1" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/ConditionalEliminationPhase$Instance.&lt;init&gt; (1 samples, 0.32%)</title><rect x="392.1" y="1107.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.1" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil.getDefaultSimplifier (1 samples, 0.32%)</title><rect x="392.1" y="1091.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="395.1" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/util/GraphUtil$DefaultSimplifierTool.&lt;init&gt; (1 samples, 0.32%)</title><rect x="392.1" y="1075.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.1" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.32%)</title><rect x="392.1" y="1059.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="395.1" y="1070.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.32%)</title><rect x="392.1" y="1043.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="395.1" y="1054.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.32%)</title><rect x="392.1" y="1027.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="395.1" y="1038.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.32%)</title><rect x="392.1" y="1011.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="395.1" y="1022.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_event(Method*, CompLevel, JavaThread*) (1 samples, 0.32%)</title><rect x="392.1" y="995.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="395.1" y="1006.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::common(bool (TieredThresholdPolicy::*)(int, int, CompLevel, Method*), Method*, CompLevel, bool) (1 samples, 0.32%)</title><rect x="392.1" y="979.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="395.1" y="990.0"></text>
</g>
<g>
<title>TieredThresholdPolicy::call_predicate(int, int, CompLevel, Method*) (1 samples, 0.32%)</title><rect x="392.1" y="963.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="395.1" y="974.0"></text>
</g>
<g>
<title>bool TieredThresholdPolicy::call_predicate_helper&lt;(CompLevel)0&gt;(int, int, double, Method*) (1 samples, 0.32%)</title><rect x="392.1" y="947.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="395.1" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (2 samples, 0.63%)</title><rect x="395.8" y="1123.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.8" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (2 samples, 0.63%)</title><rect x="395.8" y="1107.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.8" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (2 samples, 0.63%)</title><rect x="395.8" y="1091.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.8" y="1102.0"></text>
</g>
<g>
<title>I2C/C2I adapters(0xb0000000)@0x000000011bc26700 (1 samples, 0.32%)</title><rect x="395.8" y="1075.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="398.8" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance$GuardOrder.resortGuards (1 samples, 0.32%)</title><rect x="399.6" y="1075.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.6" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.hasNext (1 samples, 0.32%)</title><rect x="399.6" y="1059.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="402.6" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.findNext (1 samples, 0.32%)</title><rect x="399.6" y="1043.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.6" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/TypedGraphNodeIterator.forward (1 samples, 0.32%)</title><rect x="399.6" y="1027.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="402.6" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findNextLiveiterable (1 samples, 0.32%)</title><rect x="399.6" y="1011.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="402.6" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (23 samples, 7.30%)</title><rect x="403.3" y="1219.0" width="86.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="406.3" y="1230.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.run (23 samples, 7.30%)</title><rect x="403.3" y="1203.0" width="86.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="406.3" y="1214.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.lower (23 samples, 7.30%)</title><rect x="403.3" y="1187.0" width="86.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="1198.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (23 samples, 7.30%)</title><rect x="403.3" y="1171.0" width="86.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="1182.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (23 samples, 7.30%)</title><rect x="403.3" y="1155.0" width="86.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="406.3" y="1166.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (23 samples, 7.30%)</title><rect x="403.3" y="1139.0" width="86.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="406.3" y="1150.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/IncrementalCanonicalizerPhase.run (23 samples, 7.30%)</title><rect x="403.3" y="1123.0" width="86.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.3" y="1134.0">org/graalv..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (19 samples, 6.03%)</title><rect x="403.3" y="1107.0" width="71.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.3" y="1118.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (19 samples, 6.03%)</title><rect x="403.3" y="1091.0" width="71.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.3" y="1102.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (19 samples, 6.03%)</title><rect x="403.3" y="1075.0" width="71.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.3" y="1086.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (19 samples, 6.03%)</title><rect x="403.3" y="1059.0" width="71.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="406.3" y="1070.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.run (19 samples, 6.03%)</title><rect x="403.3" y="1043.0" width="71.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.3" y="1054.0">org/graa..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (3 samples, 0.95%)</title><rect x="403.3" y="1027.0" width="11.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.3" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (3 samples, 0.95%)</title><rect x="403.3" y="1011.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.3" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (3 samples, 0.95%)</title><rect x="403.3" y="995.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="406.3" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (3 samples, 0.95%)</title><rect x="403.3" y="979.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="406.3" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (3 samples, 0.95%)</title><rect x="403.3" y="963.0" width="11.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="406.3" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlocks (2 samples, 0.63%)</title><rect x="407.1" y="947.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.1" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/cfg/Block.canKill (1 samples, 0.32%)</title><rect x="407.1" y="931.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.1" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.32%)</title><rect x="407.1" y="915.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="410.1" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="407.1" y="899.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="410.1" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="407.1" y="883.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="410.1" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.32%)</title><rect x="407.1" y="867.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="410.1" y="878.0"></text>
</g>
<g>
<title>vframeStreamCommon::fill_from_frame() (1 samples, 0.32%)</title><rect x="407.1" y="851.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="410.1" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.calcLatestBlock (1 samples, 0.32%)</title><rect x="410.8" y="931.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.8" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.selectLatestBlock (1 samples, 0.32%)</title><rect x="410.8" y="915.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.8" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeMap.setAndGrow (1 samples, 0.32%)</title><rect x="410.8" y="899.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.8" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeMap.set (1 samples, 0.32%)</title><rect x="410.8" y="883.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.8" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase.processBlock (16 samples, 5.08%)</title><rect x="414.6" y="1027.0" width="59.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="417.6" y="1038.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round$ProcessFrame.preprocess (16 samples, 5.08%)</title><rect x="414.6" y="1011.0" width="59.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.6" y="1022.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/LoweringPhase$Round.process (16 samples, 5.08%)</title><rect x="414.6" y="995.0" width="59.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.6" y="1006.0">org/gr..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/nodes/WriteBarrier.lower (1 samples, 0.32%)</title><rect x="414.6" y="979.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.6" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="414.6" y="963.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.6" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="414.6" y="947.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.6" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/WriteBarrierSnippets$Templates.lower (1 samples, 0.32%)</title><rect x="414.6" y="931.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.6" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (1 samples, 0.32%)</title><rect x="414.6" y="915.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.6" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (1 samples, 0.32%)</title><rect x="414.6" y="899.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.6" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.32%)</title><rect x="414.6" y="883.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.6" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.32%)</title><rect x="414.6" y="867.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.6" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.32%)</title><rect x="414.6" y="851.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.6" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.32%)</title><rect x="414.6" y="835.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.6" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.32%)</title><rect x="414.6" y="819.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="417.6" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.32%)</title><rect x="414.6" y="803.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.6" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="414.6" y="787.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.6" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.32%)</title><rect x="414.6" y="771.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="417.6" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.32%)</title><rect x="414.6" y="755.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.6" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.32%)</title><rect x="414.6" y="739.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.6" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="414.6" y="723.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.6" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="414.6" y="707.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.6" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="414.6" y="691.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.6" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="414.6" y="675.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.6" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeInterface (1 samples, 0.32%)</title><rect x="414.6" y="659.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="417.6" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeInterface (1 samples, 0.32%)</title><rect x="414.6" y="643.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.6" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="414.6" y="627.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.6" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryNodePluginForInvocation (1 samples, 0.32%)</title><rect x="414.6" y="611.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.6" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotNodePlugin.handleInvoke (1 samples, 0.32%)</title><rect x="414.6" y="595.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.6" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotWordOperationPlugin.handleInvoke (1 samples, 0.32%)</title><rect x="414.6" y="579.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.6" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/word/WordOperationPlugin.processWordOperation (1 samples, 0.32%)</title><rect x="414.6" y="563.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.6" y="574.0"></text>
</g>
<g>
<title>com/sun/proxy/jdk/proxy2/$Proxy13.opcode (1 samples, 0.32%)</title><rect x="414.6" y="547.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="417.6" y="558.0"></text>
</g>
<g>
<title>sun/reflect/annotation/AnnotationInvocationHandler.invoke (1 samples, 0.32%)</title><rect x="414.6" y="531.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (1 samples, 0.32%)</title><rect x="414.6" y="515.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.6" y="526.0"></text>
</g>
<g>
<title>JVM_IsArrayClass (1 samples, 0.32%)</title><rect x="414.6" y="499.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="417.6" y="510.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.32%)</title><rect x="414.6" y="483.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="417.6" y="494.0"></text>
</g>
<g>
<title>SafepointMechanism::poll(Thread*) (1 samples, 0.32%)</title><rect x="414.6" y="467.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="417.6" y="478.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.32%)</title><rect x="414.6" y="451.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="417.6" y="462.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/arraycopy/ArrayCopyNode.lower (2 samples, 0.63%)</title><rect x="418.3" y="979.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.3" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (2 samples, 0.63%)</title><rect x="418.3" y="963.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.3" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (2 samples, 0.63%)</title><rect x="418.3" y="947.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.3" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/arraycopy/ArrayCopySnippets$Templates.lower (2 samples, 0.63%)</title><rect x="418.3" y="931.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.3" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/arraycopy/ArrayCopySnippets$Templates.instantiate (1 samples, 0.32%)</title><rect x="418.3" y="915.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="421.3" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (1 samples, 0.32%)</title><rect x="418.3" y="899.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="421.3" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$Arguments.&lt;init&gt; (1 samples, 0.32%)</title><rect x="422.1" y="915.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.1" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$CacheKey.&lt;init&gt; (1 samples, 0.32%)</title><rect x="422.1" y="899.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.1" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$SnippetInfo.getParameterCount (1 samples, 0.32%)</title><rect x="422.1" y="883.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.1" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$LazySnippetInfo.lazy (1 samples, 0.32%)</title><rect x="422.1" y="867.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.1" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$SnippetInfo$Lazy.&lt;init&gt; (1 samples, 0.32%)</title><rect x="422.1" y="851.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.1" y="862.0"></text>
</g>
<g>
<title>jdk/vm/ci/meta/ResolvedJavaMethod.getParameterAnnotation (1 samples, 0.32%)</title><rect x="422.1" y="835.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.1" y="846.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getParameterAnnotations (1 samples, 0.32%)</title><rect x="422.1" y="819.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="425.1" y="830.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.toJava (1 samples, 0.32%)</title><rect x="422.1" y="803.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.1" y="814.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.searchMethods (1 samples, 0.32%)</title><rect x="422.1" y="787.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="425.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.equals (1 samples, 0.32%)</title><rect x="422.1" y="771.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.1" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/AbstractNewObjectNode.lower (7 samples, 2.22%)</title><rect x="425.8" y="979.0" width="26.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.8" y="990.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (7 samples, 2.22%)</title><rect x="425.8" y="963.0" width="26.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.8" y="974.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (7 samples, 2.22%)</title><rect x="425.8" y="947.0" width="26.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.8" y="958.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/NewObjectSnippets$Templates.lower (7 samples, 2.22%)</title><rect x="425.8" y="931.0" width="26.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.8" y="942.0">o..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="425.8" y="915.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="428.8" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="425.8" y="899.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="428.8" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="425.8" y="883.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="428.8" y="894.0"></text>
</g>
<g>
<title>Verifier::verify(InstanceKlass*, Verifier::Mode, bool, Thread*) (1 samples, 0.32%)</title><rect x="425.8" y="867.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="428.8" y="878.0"></text>
</g>
<g>
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.32%)</title><rect x="425.8" y="851.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="428.8" y="862.0"></text>
</g>
<g>
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="425.8" y="835.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="428.8" y="846.0"></text>
</g>
<g>
<title>ClassVerifier::verify_astore(unsigned short, StackMapFrame*, Thread*) (1 samples, 0.32%)</title><rect x="425.8" y="819.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="428.8" y="830.0"></text>
</g>
<g>
<title>StackMapFrame::set_local(int, VerificationType, Thread*) (1 samples, 0.32%)</title><rect x="425.8" y="803.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="428.8" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (5 samples, 1.59%)</title><rect x="429.6" y="915.0" width="18.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="432.6" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (5 samples, 1.59%)</title><rect x="429.6" y="899.0" width="18.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.6" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (4 samples, 1.27%)</title><rect x="429.6" y="883.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.6" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (4 samples, 1.27%)</title><rect x="429.6" y="867.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.6" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (4 samples, 1.27%)</title><rect x="429.6" y="851.0" width="14.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.6" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (4 samples, 1.27%)</title><rect x="429.6" y="835.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.6" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 1.27%)</title><rect x="429.6" y="819.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.6" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 1.27%)</title><rect x="429.6" y="803.0" width="14.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.6" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (4 samples, 1.27%)</title><rect x="429.6" y="787.0" width="14.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.6" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (4 samples, 1.27%)</title><rect x="429.6" y="771.0" width="14.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.6" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (4 samples, 1.27%)</title><rect x="429.6" y="755.0" width="14.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.6" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (4 samples, 1.27%)</title><rect x="429.6" y="739.0" width="14.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.6" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (4 samples, 1.27%)</title><rect x="429.6" y="723.0" width="14.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.6" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (4 samples, 1.27%)</title><rect x="429.6" y="707.0" width="14.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="432.6" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (4 samples, 1.27%)</title><rect x="429.6" y="691.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.6" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (4 samples, 1.27%)</title><rect x="429.6" y="675.0" width="14.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.6" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (4 samples, 1.27%)</title><rect x="429.6" y="659.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.6" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (4 samples, 1.27%)</title><rect x="429.6" y="643.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.6" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (4 samples, 1.27%)</title><rect x="429.6" y="627.0" width="14.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="432.6" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (4 samples, 1.27%)</title><rect x="429.6" y="611.0" width="14.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.6" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (4 samples, 1.27%)</title><rect x="429.6" y="595.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.6" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (4 samples, 1.27%)</title><rect x="429.6" y="579.0" width="14.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="432.6" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (4 samples, 1.27%)</title><rect x="429.6" y="563.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.6" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (4 samples, 1.27%)</title><rect x="429.6" y="547.0" width="14.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.6" y="558.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (4 samples, 1.27%)</title><rect x="429.6" y="531.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.6" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (4 samples, 1.27%)</title><rect x="429.6" y="515.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.6" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (4 samples, 1.27%)</title><rect x="429.6" y="499.0" width="14.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.6" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (4 samples, 1.27%)</title><rect x="429.6" y="483.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.6" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (4 samples, 1.27%)</title><rect x="429.6" y="467.0" width="14.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.6" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (4 samples, 1.27%)</title><rect x="429.6" y="451.0" width="14.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.6" y="462.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (4 samples, 1.27%)</title><rect x="429.6" y="435.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.6" y="446.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (3 samples, 0.95%)</title><rect x="433.3" y="419.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.3" y="430.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (3 samples, 0.95%)</title><rect x="433.3" y="403.0" width="11.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.3" y="414.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (2 samples, 0.63%)</title><rect x="433.3" y="387.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.3" y="398.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (2 samples, 0.63%)</title><rect x="433.3" y="371.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.3" y="382.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (2 samples, 0.63%)</title><rect x="433.3" y="355.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.3" y="366.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.32%)</title><rect x="433.3" y="339.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.3" y="350.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (1 samples, 0.32%)</title><rect x="433.3" y="323.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.3" y="334.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.maybeEagerlyResolve (1 samples, 0.32%)</title><rect x="433.3" y="307.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.3" y="318.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstantPool.loadReferencedType (1 samples, 0.32%)</title><rect x="433.3" y="291.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.3" y="302.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstant$MemberRef.loadReferencedType (1 samples, 0.32%)</title><rect x="433.3" y="275.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.3" y="286.0"></text>
</g>
<g>
<title>InterpreterRuntime::ldc(JavaThread*, bool) (1 samples, 0.32%)</title><rect x="433.3" y="259.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="436.3" y="270.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.32%)</title><rect x="433.3" y="243.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="436.3" y="254.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="437.0" y="339.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.0" y="350.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="437.0" y="323.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="440.0" y="334.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="437.0" y="307.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.0" y="318.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.32%)</title><rect x="437.0" y="291.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.0" y="302.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.32%)</title><rect x="437.0" y="275.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.0" y="286.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.32%)</title><rect x="437.0" y="259.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.0" y="270.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="437.0" y="243.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.0" y="254.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="437.0" y="227.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.0" y="238.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="437.0" y="211.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.0" y="222.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="437.0" y="195.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.0" y="206.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.loadLocalObject (1 samples, 0.32%)</title><rect x="437.0" y="179.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="440.0" y="190.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetField (1 samples, 0.32%)</title><rect x="437.0" y="163.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="440.0" y="174.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (1 samples, 0.32%)</title><rect x="437.0" y="147.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.0" y="158.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstantPool.lookupField (1 samples, 0.32%)</title><rect x="437.0" y="131.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.0" y="142.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstant$FieldRef.resolve (1 samples, 0.32%)</title><rect x="437.0" y="115.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="440.0" y="126.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileConstant.resolveField (1 samples, 0.32%)</title><rect x="437.0" y="99.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.0" y="110.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider.findField (1 samples, 0.32%)</title><rect x="437.0" y="83.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.0" y="94.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/classfile/ClassfileBytecodeProvider$FieldsCache.lookup (1 samples, 0.32%)</title><rect x="437.0" y="67.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.0" y="78.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getInstanceFields (1 samples, 0.32%)</title><rect x="437.0" y="51.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.0" y="62.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.getFields (1 samples, 0.32%)</title><rect x="437.0" y="35.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.0" y="46.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.compute (1 samples, 0.32%)</title><rect x="440.8" y="387.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="443.8" y="398.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/LocalLiveness.computeLiveness (1 samples, 0.32%)</title><rect x="440.8" y="371.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="443.8" y="382.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.explodeLoops (1 samples, 0.32%)</title><rect x="444.5" y="883.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="447.5" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.fullUnroll (1 samples, 0.32%)</title><rect x="444.5" y="867.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.5" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/phases/LoopTransformations.peel (1 samples, 0.32%)</title><rect x="444.5" y="851.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.5" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragmentInside.insertBefore (1 samples, 0.32%)</title><rect x="444.5" y="835.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.5" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/loop/LoopFragment.patchNodes (1 samples, 0.32%)</title><rect x="444.5" y="819.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.5" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.32%)</title><rect x="448.3" y="915.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.3" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.32%)</title><rect x="448.3" y="899.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.3" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (1 samples, 0.32%)</title><rect x="448.3" y="883.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="451.3" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.32%)</title><rect x="448.3" y="867.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.3" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.32%)</title><rect x="448.3" y="851.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="451.3" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.32%)</title><rect x="448.3" y="835.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="451.3" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateInputSuccInPlace (1 samples, 0.32%)</title><rect x="448.3" y="819.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="451.3" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateEdgesInPlace (1 samples, 0.32%)</title><rect x="448.3" y="803.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.3" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNode (1 samples, 0.32%)</title><rect x="448.3" y="787.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.3" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Edges.getNodeUnsafe (1 samples, 0.32%)</title><rect x="448.3" y="771.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.3" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/AccessFieldNode.lower (1 samples, 0.32%)</title><rect x="452.0" y="979.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="452.0" y="963.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.0" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="452.0" y="947.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lower (1 samples, 0.32%)</title><rect x="452.0" y="931.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="455.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lowerLoadFieldNode (1 samples, 0.32%)</title><rect x="452.0" y="915.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createFieldAddress (1 samples, 0.32%)</title><rect x="452.0" y="899.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.0" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.fieldOffset (1 samples, 0.32%)</title><rect x="452.0" y="883.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="455.0" y="894.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="452.0" y="867.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="455.0" y="878.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="452.0" y="851.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="455.0" y="862.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokeinterface(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.32%)</title><rect x="452.0" y="835.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="455.0" y="846.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_call(CallInfo&amp;, Handle, Klass*, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.32%)</title><rect x="452.0" y="819.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="455.0" y="830.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_interface_method(LinkInfo const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="452.0" y="803.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="455.0" y="814.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.32%)</title><rect x="452.0" y="787.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="455.0" y="798.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.32%)</title><rect x="452.0" y="771.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="455.0" y="782.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="452.0" y="755.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="455.0" y="766.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.32%)</title><rect x="452.0" y="739.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="455.0" y="750.0"></text>
</g>
<g>
<title>SignatureStream::next() (1 samples, 0.32%)</title><rect x="452.0" y="723.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="455.0" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/ArrayLengthNode.lower (1 samples, 0.32%)</title><rect x="455.8" y="979.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="458.8" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="455.8" y="963.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.8" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="455.8" y="947.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.8" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lower (1 samples, 0.32%)</title><rect x="455.8" y="931.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="458.8" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.lowerArrayLengthNode (1 samples, 0.32%)</title><rect x="455.8" y="915.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.8" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createReadArrayLength (1 samples, 0.32%)</title><rect x="455.8" y="899.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="458.8" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createNullCheckedValue (1 samples, 0.32%)</title><rect x="455.8" y="883.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.8" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/DefaultJavaLoweringProvider.createNullCheck (1 samples, 0.32%)</title><rect x="455.8" y="867.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="458.8" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/UnaryOpLogicNode.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="455.8" y="851.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.8" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.create (1 samples, 0.32%)</title><rect x="455.8" y="835.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="458.8" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="455.8" y="819.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="458.8" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.&lt;init&gt; (1 samples, 0.32%)</title><rect x="455.8" y="803.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.8" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/InstanceOfDynamicNode.lower (1 samples, 0.32%)</title><rect x="459.5" y="979.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.5" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="459.5" y="963.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.5" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="459.5" y="947.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="462.5" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/InstanceOfSnippetsTemplates.lower (1 samples, 0.32%)</title><rect x="459.5" y="931.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.5" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.32%)</title><rect x="459.5" y="915.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.5" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (1 samples, 0.32%)</title><rect x="459.5" y="899.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.5" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.32%)</title><rect x="459.5" y="883.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="462.5" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.32%)</title><rect x="459.5" y="867.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="462.5" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.32%)</title><rect x="459.5" y="851.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="462.5" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.createNodeDuplicates (1 samples, 0.32%)</title><rect x="459.5" y="835.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.5" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Node.clone (1 samples, 0.32%)</title><rect x="459.5" y="819.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.5" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.register (1 samples, 0.32%)</title><rect x="459.5" y="803.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.5" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph$NodeEventListener.event (1 samples, 0.32%)</title><rect x="459.5" y="787.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.5" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/util/HashSetNodeEventListener.changed (1 samples, 0.32%)</title><rect x="459.5" y="771.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="462.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.add (1 samples, 0.32%)</title><rect x="459.5" y="755.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.put (1 samples, 0.32%)</title><rect x="459.5" y="739.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.32%)</title><rect x="459.5" y="723.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="462.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.createHash (1 samples, 0.32%)</title><rect x="459.5" y="707.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.putHashEntry (1 samples, 0.32%)</title><rect x="459.5" y="691.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="462.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.getHashIndex (1 samples, 0.32%)</title><rect x="459.5" y="675.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.5" y="686.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.32%)</title><rect x="459.5" y="659.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="462.5" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/InstanceOfNode.lower (1 samples, 0.32%)</title><rect x="463.3" y="979.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.3" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="463.3" y="963.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="466.3" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="463.3" y="947.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="466.3" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/InstanceOfSnippetsTemplates.lower (1 samples, 0.32%)</title><rect x="463.3" y="931.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.3" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.instantiate (1 samples, 0.32%)</title><rect x="463.3" y="915.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.3" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.inlineSnippet (1 samples, 0.32%)</title><rect x="463.3" y="899.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.3" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.32%)</title><rect x="463.3" y="883.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.3" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.addDuplicates (1 samples, 0.32%)</title><rect x="463.3" y="867.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.3" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.addGraphDuplicate (1 samples, 0.32%)</title><rect x="463.3" y="851.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.3" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateInputSuccInPlace (1 samples, 0.32%)</title><rect x="463.3" y="835.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.3" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass.updateEdgesInPlace (1 samples, 0.32%)</title><rect x="463.3" y="819.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.3" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$1.replacement (1 samples, 0.32%)</title><rect x="463.3" y="803.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.3" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/MonitorExitNode.lower (1 samples, 0.32%)</title><rect x="467.0" y="979.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="467.0" y="963.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.0" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="467.0" y="947.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.0" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/MonitorSnippets$Templates.lower (1 samples, 0.32%)</title><rect x="467.0" y="931.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (1 samples, 0.32%)</title><rect x="467.0" y="915.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (1 samples, 0.32%)</title><rect x="467.0" y="899.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.0" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.32%)</title><rect x="467.0" y="883.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="470.0" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.32%)</title><rect x="467.0" y="867.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.0" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.32%)</title><rect x="467.0" y="851.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.0" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.32%)</title><rect x="467.0" y="835.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.0" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.32%)</title><rect x="467.0" y="819.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.0" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.32%)</title><rect x="467.0" y="803.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="470.0" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="467.0" y="787.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.0" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.32%)</title><rect x="467.0" y="771.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="470.0" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.32%)</title><rect x="467.0" y="755.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.0" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.32%)</title><rect x="467.0" y="739.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.0" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="467.0" y="723.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.0" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="467.0" y="707.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.0" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="467.0" y="691.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.0" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="467.0" y="675.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.0" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genLoadConstant (1 samples, 0.32%)</title><rect x="467.0" y="659.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.0" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/java/RawMonitorEnterNode.lower (1 samples, 0.32%)</title><rect x="470.8" y="979.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.8" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="470.8" y="963.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.8" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/DefaultHotSpotLoweringProvider.lower (1 samples, 0.32%)</title><rect x="470.8" y="947.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.8" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/MonitorSnippets$Templates.lower (1 samples, 0.32%)</title><rect x="470.8" y="931.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.8" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate$AbstractTemplates.template (1 samples, 0.32%)</title><rect x="470.8" y="915.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.8" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/SnippetTemplate.&lt;init&gt; (1 samples, 0.32%)</title><rect x="470.8" y="899.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.8" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSnippet (1 samples, 0.32%)</title><rect x="470.8" y="883.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="473.8" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.makeGraph (1 samples, 0.32%)</title><rect x="470.8" y="867.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.8" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.makeGraph (1 samples, 0.32%)</title><rect x="470.8" y="851.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.8" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl$GraphMaker.buildInitialGraph (1 samples, 0.32%)</title><rect x="470.8" y="835.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.8" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.32%)</title><rect x="470.8" y="819.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.8" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.32%)</title><rect x="470.8" y="803.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.8" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="470.8" y="787.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.8" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.32%)</title><rect x="470.8" y="771.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.8" y="782.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (1 samples, 0.32%)</title><rect x="470.8" y="755.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.8" y="766.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (1 samples, 0.32%)</title><rect x="470.8" y="739.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.8" y="750.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="470.8" y="723.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.8" y="734.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="470.8" y="707.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.8" y="718.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="470.8" y="691.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="473.8" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="470.8" y="675.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.8" y="686.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="470.8" y="659.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.8" y="670.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="470.8" y="643.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.8" y="654.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="470.8" y="627.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.8" y="638.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.32%)</title><rect x="470.8" y="611.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="473.8" y="622.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.32%)</title><rect x="470.8" y="595.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="473.8" y="606.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.parseAndInlineCallee (1 samples, 0.32%)</title><rect x="470.8" y="579.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="473.8" y="590.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (1 samples, 0.32%)</title><rect x="470.8" y="563.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.8" y="574.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (1 samples, 0.32%)</title><rect x="470.8" y="547.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.8" y="558.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (1 samples, 0.32%)</title><rect x="470.8" y="531.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="473.8" y="542.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (1 samples, 0.32%)</title><rect x="470.8" y="515.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.8" y="526.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="470.8" y="499.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.8" y="510.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="470.8" y="483.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.8" y="494.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="470.8" y="467.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="473.8" y="478.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.32%)</title><rect x="470.8" y="451.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.8" y="462.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.32%)</title><rect x="470.8" y="435.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="473.8" y="446.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.notifyBeforeInline (1 samples, 0.32%)</title><rect x="470.8" y="419.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.8" y="430.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase.applyIncremental (4 samples, 1.27%)</title><rect x="474.5" y="1107.0" width="15.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.5" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (4 samples, 1.27%)</title><rect x="474.5" y="1091.0" width="15.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="477.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (4 samples, 1.27%)</title><rect x="474.5" y="1075.0" width="15.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (4 samples, 1.27%)</title><rect x="474.5" y="1059.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.5" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.run (4 samples, 1.27%)</title><rect x="474.5" y="1043.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="477.5" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processWorkSet (4 samples, 1.27%)</title><rect x="474.5" y="1027.0" width="15.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.5" y="1038.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.processNode (4 samples, 1.27%)</title><rect x="474.5" y="1011.0" width="15.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="477.5" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/AbstractPointerStamp.asConstant (1 samples, 0.32%)</title><rect x="474.5" y="995.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.5" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryCanonicalize (1 samples, 0.32%)</title><rect x="478.3" y="995.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.3" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.simplify (1 samples, 0.32%)</title><rect x="478.3" y="979.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.3" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.removeOrMaterializeIf (1 samples, 0.32%)</title><rect x="478.3" y="963.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.3" y="974.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/IfNode.canonicalizeConditionalCascade (1 samples, 0.32%)</title><rect x="478.3" y="947.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="481.3" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/CanonicalizerPhase$Instance.tryGlobalValueNumbering (1 samples, 0.32%)</title><rect x="482.0" y="995.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.0" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/Graph.findDuplicate (1 samples, 0.32%)</title><rect x="482.0" y="979.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="485.0" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/graph/NodeClass$3.iterator (1 samples, 0.32%)</title><rect x="482.0" y="963.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.0" y="974.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.32%)</title><rect x="485.7" y="995.0" width="3.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="488.7" y="1006.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningPhase.run (11 samples, 3.49%)</title><rect x="489.5" y="1219.0" width="41.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.5" y="1230.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningPhase.run (11 samples, 3.49%)</title><rect x="489.5" y="1203.0" width="41.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.5" y="1214.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.moveForward (11 samples, 3.49%)</title><rect x="489.5" y="1187.0" width="41.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.5" y="1198.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.processNextInvoke (8 samples, 2.54%)</title><rect x="489.5" y="1171.0" width="30.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="492.5" y="1182.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.populateInlinableElements (8 samples, 2.54%)</title><rect x="489.5" y="1155.0" width="30.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="492.5" y="1166.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/Inlineable.getInlineableElement (8 samples, 2.54%)</title><rect x="489.5" y="1139.0" width="30.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="492.5" y="1150.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.&lt;init&gt; (8 samples, 2.54%)</title><rect x="489.5" y="1123.0" width="30.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.5" y="1134.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/elem/InlineableGraph.parseBytecodes (8 samples, 2.54%)</title><rect x="489.5" y="1107.0" width="30.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="492.5" y="1118.0">or..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph$Builder.&lt;init&gt; (1 samples, 0.32%)</title><rect x="489.5" y="1091.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (7 samples, 2.22%)</title><rect x="493.2" y="1091.0" width="26.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="496.2" y="1102.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (7 samples, 2.22%)</title><rect x="493.2" y="1075.0" width="26.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.2" y="1086.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/PhaseSuite.run (7 samples, 2.22%)</title><rect x="493.2" y="1059.0" width="26.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.2" y="1070.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (7 samples, 2.22%)</title><rect x="493.2" y="1043.0" width="26.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.2" y="1054.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (7 samples, 2.22%)</title><rect x="493.2" y="1027.0" width="26.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.2" y="1038.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (7 samples, 2.22%)</title><rect x="493.2" y="1011.0" width="26.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.2" y="1022.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase.run (7 samples, 2.22%)</title><rect x="493.2" y="995.0" width="26.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.2" y="1006.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/GraphBuilderPhase$Instance.run (7 samples, 2.22%)</title><rect x="493.2" y="979.0" width="26.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="496.2" y="990.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.buildRootMethod (7 samples, 2.22%)</title><rect x="493.2" y="963.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.2" y="974.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.build (6 samples, 1.90%)</title><rect x="493.2" y="947.0" width="22.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.2" y="958.0">o..</text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.create (1 samples, 0.32%)</title><rect x="493.2" y="931.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.2" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.build (1 samples, 0.32%)</title><rect x="493.2" y="915.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="496.2" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.iterateOverBytecodes (1 samples, 0.32%)</title><rect x="493.2" y="899.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.2" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BciBlockMapping.addSwitchSuccessors (1 samples, 0.32%)</title><rect x="493.2" y="883.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="496.2" y="894.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.32%)</title><rect x="493.2" y="867.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="496.2" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.32%)</title><rect x="493.2" y="851.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.2" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBlock (5 samples, 1.59%)</title><rect x="497.0" y="931.0" width="18.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.0" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.iterateBytecodesForBlock (5 samples, 1.59%)</title><rect x="497.0" y="915.0" width="18.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="500.0" y="926.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.processBytecode (5 samples, 1.59%)</title><rect x="497.0" y="899.0" width="18.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="500.0" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genFloatConvert (1 samples, 0.32%)</title><rect x="497.0" y="883.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="500.0" y="894.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.32%)</title><rect x="497.0" y="867.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="500.0" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="497.0" y="851.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="500.0" y="862.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.32%)</title><rect x="497.0" y="835.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="500.0" y="846.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.32%)</title><rect x="497.0" y="819.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="500.0" y="830.0"></text>
</g>
<g>
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.32%)</title><rect x="497.0" y="803.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="500.0" y="814.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.32%)</title><rect x="497.0" y="787.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="500.0" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genGetStatic (1 samples, 0.32%)</title><rect x="500.7" y="883.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.7" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.lookupField (1 samples, 0.32%)</title><rect x="500.7" y="867.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.7" y="878.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotConstantPool.lookupField (1 samples, 0.32%)</title><rect x="500.7" y="851.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.7" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIfZero (1 samples, 0.32%)</title><rect x="504.5" y="883.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="507.5" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.32%)</title><rect x="504.5" y="867.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="507.5" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.32%)</title><rect x="504.5" y="851.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="507.5" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryGenConditionalForIf (1 samples, 0.32%)</title><rect x="504.5" y="835.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.5" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genConditionalForIf (1 samples, 0.32%)</title><rect x="504.5" y="819.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.5" y="830.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="504.5" y="803.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="507.5" y="814.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="504.5" y="787.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="507.5" y="798.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.32%)</title><rect x="504.5" y="771.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="507.5" y="782.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.32%)</title><rect x="504.5" y="755.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="507.5" y="766.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="504.5" y="739.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="507.5" y="750.0"></text>
</g>
<g>
<title>elapsedTimer::start() (1 samples, 0.32%)</title><rect x="504.5" y="723.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="507.5" y="734.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.32%)</title><rect x="504.5" y="707.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="507.5" y="718.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.32%)</title><rect x="504.5" y="691.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="507.5" y="702.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInstanceOf (1 samples, 0.32%)</title><rect x="508.2" y="883.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.2" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genIf (1 samples, 0.32%)</title><rect x="508.2" y="867.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.2" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.createTarget (1 samples, 0.32%)</title><rect x="508.2" y="851.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="511.2" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.copy (1 samples, 0.32%)</title><rect x="508.2" y="835.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.2" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.&lt;init&gt; (1 samples, 0.32%)</title><rect x="508.2" y="819.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="511.2" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="512.0" y="883.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.0" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.genInvokeStatic (1 samples, 0.32%)</title><rect x="512.0" y="867.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.0" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.appendInvoke (1 samples, 0.32%)</title><rect x="512.0" y="851.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="515.0" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.tryInline (1 samples, 0.32%)</title><rect x="512.0" y="835.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="515.0" y="846.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.inline (1 samples, 0.32%)</title><rect x="512.0" y="819.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.0" y="830.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/BytecodeParser.notifyAfterInline (1 samples, 0.32%)</title><rect x="512.0" y="803.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.0" y="814.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InlineInvokePlugin.notifyAfterInline (1 samples, 0.32%)</title><rect x="512.0" y="787.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="515.0" y="798.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/FrameStateBuilder.initializeForMethodStart (1 samples, 0.32%)</title><rect x="515.7" y="947.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.7" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.tryToInline (3 samples, 0.95%)</title><rect x="519.5" y="1171.0" width="11.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.5" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/walker/InliningData.doInline (3 samples, 0.95%)</title><rect x="519.5" y="1155.0" width="11.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.5" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/ExactInlineInfo.inline (3 samples, 0.95%)</title><rect x="519.5" y="1139.0" width="11.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.5" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/info/AbstractInlineInfo.inline (3 samples, 0.95%)</title><rect x="519.5" y="1123.0" width="11.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.5" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (3 samples, 0.95%)</title><rect x="519.5" y="1107.0" width="11.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.5" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inlineForCanonicalization (3 samples, 0.95%)</title><rect x="519.5" y="1091.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.5" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.inline (3 samples, 0.95%)</title><rect x="519.5" y="1075.0" width="11.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.5" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.finishInlining (1 samples, 0.32%)</title><rect x="519.5" y="1059.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.5" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph.updateMethods (1 samples, 0.32%)</title><rect x="519.5" y="1043.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.5" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/common/inlining/InliningUtil.updateSourcePositions (2 samples, 0.63%)</title><rect x="523.2" y="1059.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.2" y="1070.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getAnnotation (1 samples, 0.32%)</title><rect x="527.0" y="1043.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="530.0" y="1054.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.toJava (1 samples, 0.32%)</title><rect x="527.0" y="1027.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods (1 samples, 0.32%)</title><rect x="527.0" y="1011.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="530.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredMethods (1 samples, 0.32%)</title><rect x="527.0" y="995.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="530.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/Class.getDeclaredMethods0 (1 samples, 0.32%)</title><rect x="527.0" y="979.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.0" y="990.0"></text>
</g>
<g>
<title>JVM_GetClassDeclaredMethods (1 samples, 0.32%)</title><rect x="527.0" y="963.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="530.0" y="974.0"></text>
</g>
<g>
<title>get_class_declared_methods_helper(JNIEnv_*, _jclass*, unsigned char, bool, Klass*, Thread*) (1 samples, 0.32%)</title><rect x="527.0" y="947.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="530.0" y="958.0"></text>
</g>
<g>
<title>Reflection::new_method(methodHandle const&amp;, bool, Thread*) (1 samples, 0.32%)</title><rect x="527.0" y="931.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="530.0" y="942.0"></text>
</g>
<g>
<title>get_parameter_types(methodHandle const&amp;, int, oopDesc**, Thread*) (1 samples, 0.32%)</title><rect x="527.0" y="915.0" width="3.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="530.0" y="926.0"></text>
</g>
<g>
<title>get_mirror_from_signature(methodHandle const&amp;, SignatureStream*, Thread*) (1 samples, 0.32%)</title><rect x="527.0" y="899.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="530.0" y="910.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="527.0" y="883.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="530.0" y="894.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.run (2 samples, 0.63%)</title><rect x="530.7" y="1219.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="533.7" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PartialEscapePhase.run (2 samples, 0.63%)</title><rect x="530.7" y="1203.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="533.7" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsPhase.runAnalysis (2 samples, 0.63%)</title><rect x="530.7" y="1187.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.apply (1 samples, 0.32%)</title><rect x="530.7" y="1171.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.7" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/BasePhase.apply (1 samples, 0.32%)</title><rect x="530.7" y="1155.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.7" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/Phase.run (1 samples, 0.32%)</title><rect x="530.7" y="1139.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.7" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase.run (1 samples, 0.32%)</title><rect x="530.7" y="1123.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.7" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.run (1 samples, 0.32%)</title><rect x="530.7" y="1107.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.7" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/schedule/SchedulePhase$Instance.scheduleEarliestIterative (1 samples, 0.32%)</title><rect x="530.7" y="1091.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.7" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (1 samples, 0.32%)</title><rect x="534.4" y="1171.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="537.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.apply (1 samples, 0.32%)</title><rect x="534.4" y="1155.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="537.4" y="1166.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/graph/ReentrantBlockIterator.recurseIntoLoop (1 samples, 0.32%)</title><rect x="534.4" y="1139.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.4" y="1150.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processLoop (1 samples, 0.32%)</title><rect x="534.4" y="1123.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="537.4" y="1134.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/EffectsClosure.processLoop (1 samples, 0.32%)</title><rect x="534.4" y="1107.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.4" y="1118.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.cloneState (1 samples, 0.32%)</title><rect x="534.4" y="1091.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.4" y="1102.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationClosure.cloneState (1 samples, 0.32%)</title><rect x="534.4" y="1075.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.4" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/virtual/phases/ea/PEReadEliminationBlockState.&lt;init&gt; (1 samples, 0.32%)</title><rect x="534.4" y="1059.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="537.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMap.create (1 samples, 0.32%)</title><rect x="534.4" y="1043.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="537.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.create (1 samples, 0.32%)</title><rect x="534.4" y="1027.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="537.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.&lt;init&gt; (1 samples, 0.32%)</title><rect x="534.4" y="1011.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/vm/compiler/collections/EconomicMapImpl.initFrom (1 samples, 0.32%)</title><rect x="534.4" y="995.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="537.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.clone (1 samples, 0.32%)</title><rect x="534.4" y="979.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="537.4" y="990.0"></text>
</g>
<g>
<title>JVM_Clone (1 samples, 0.32%)</title><rect x="534.4" y="963.0" width="3.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="537.4" y="974.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.32%)</title><rect x="534.4" y="947.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="537.4" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.32%)</title><rect x="534.4" y="931.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="537.4" y="942.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.32%)</title><rect x="534.4" y="915.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="537.4" y="926.0"></text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 0.32%)</title><rect x="534.4" y="899.0" width="3.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="537.4" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.getLIRSuites (1 samples, 0.32%)</title><rect x="538.2" y="1347.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.2" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/SuitesProviderBase.getDefaultLIRSuites (1 samples, 0.32%)</title><rect x="538.2" y="1331.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.2" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotSuitesProvider.createLIRSuites (1 samples, 0.32%)</title><rect x="538.2" y="1315.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.2" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/amd64/AMD64HotSpotSuitesCreator.createLIRSuites (1 samples, 0.32%)</title><rect x="538.2" y="1299.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="541.2" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/amd64/AMD64SuitesCreator.createLIRSuites (1 samples, 0.32%)</title><rect x="538.2" y="1283.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.2" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/DefaultSuitesCreator.createLIRSuites (1 samples, 0.32%)</title><rect x="538.2" y="1267.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.2" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/tiers/Suites.createLIRSuites (1 samples, 0.32%)</title><rect x="538.2" y="1251.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.2" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/CommunityCompilerConfiguration.createAllocationStage (1 samples, 0.32%)</title><rect x="538.2" y="1235.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="541.2" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/lir/phases/AllocationStage.&lt;init&gt; (1 samples, 0.32%)</title><rect x="538.2" y="1219.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="541.2" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.getSuites (1 samples, 0.32%)</title><rect x="541.9" y="1347.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.9" y="1358.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/SuitesProviderBase.getDefaultSuites (1 samples, 0.32%)</title><rect x="541.9" y="1331.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.9" y="1342.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/AddressLoweringHotSpotSuitesProvider.createSuites (1 samples, 0.32%)</title><rect x="541.9" y="1315.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.9" y="1326.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotSuitesProvider.createSuites (1 samples, 0.32%)</title><rect x="541.9" y="1299.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.9" y="1310.0"></text>
</g>
<g>
<title>org/graalvm/compiler/java/DefaultSuitesCreator.createSuites (1 samples, 0.32%)</title><rect x="541.9" y="1283.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="544.9" y="1294.0"></text>
</g>
<g>
<title>org/graalvm/compiler/phases/tiers/Suites.createSuites (1 samples, 0.32%)</title><rect x="541.9" y="1267.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="544.9" y="1278.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/phases/CommunityCompilerConfiguration.createHighTier (1 samples, 0.32%)</title><rect x="541.9" y="1251.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="541.9" y="1235.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="541.9" y="1219.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="541.9" y="1203.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="544.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="541.9" y="1187.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="541.9" y="1171.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="544.9" y="1182.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="541.9" y="1155.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="541.9" y="1139.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.32%)</title><rect x="541.9" y="1123.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.32%)</title><rect x="541.9" y="1107.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.intern (1 samples, 0.32%)</title><rect x="541.9" y="1091.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.9" y="1102.0"></text>
</g>
<g>
<title>JVM_InternString (1 samples, 0.32%)</title><rect x="541.9" y="1075.0" width="3.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="544.9" y="1086.0"></text>
</g>
<g>
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.32%)</title><rect x="541.9" y="1059.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="544.9" y="1070.0"></text>
</g>
<g>
<title>StringTable::lookup_shared(unsigned short*, int, unsigned int) (1 samples, 0.32%)</title><rect x="541.9" y="1043.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="544.9" y="1054.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.createGraph (11 samples, 3.49%)</title><rect x="545.7" y="1363.0" width="41.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.7" y="1374.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalCompiler.getIntrinsicGraph (10 samples, 3.17%)</title><rect x="545.7" y="1347.0" width="37.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="548.7" y="1358.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/replacements/ReplacementsImpl.getSubstitutionBytecode (10 samples, 3.17%)</title><rect x="545.7" y="1331.0" width="37.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.7" y="1342.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.lookupInvocation (10 samples, 3.17%)</title><rect x="545.7" y="1315.0" width="37.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.7" y="1326.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.get (10 samples, 3.17%)</title><rect x="545.7" y="1299.0" width="37.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.7" y="1310.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/nodes/graphbuilderconf/InvocationPlugins.flushDeferrables (10 samples, 3.17%)</title><rect x="545.7" y="1283.0" width="37.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.7" y="1294.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins$1.run (10 samples, 3.17%)</title><rect x="545.7" y="1267.0" width="37.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="548.7" y="1278.0">org..</text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/PluginFactory_HotSpotBackend.registerPlugins (2 samples, 0.63%)</title><rect x="545.7" y="1251.0" width="7.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="548.7" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/PluginFactory_HotSpotBackend$HotSpotBackend_implMontgomeryMultiply.&lt;init&gt; (2 samples, 0.63%)</title><rect x="545.7" y="1235.0" width="7.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="548.7" y="1246.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/NodeIntrinsificationProvider.getInjectedStamp (2 samples, 0.63%)</title><rect x="545.7" y="1219.0" width="7.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.7" y="1230.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.&lt;clinit&gt; (2 samples, 0.63%)</title><rect x="545.7" y="1203.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="548.7" y="1214.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/StampFactory.forInteger (2 samples, 0.63%)</title><rect x="545.7" y="1187.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.7" y="1198.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="545.7" y="1171.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="548.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="545.7" y="1155.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="548.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="545.7" y="1139.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="548.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="545.7" y="1123.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="548.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="545.7" y="1107.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="548.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="545.7" y="1091.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="548.7" y="1102.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="545.7" y="1075.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="545.7" y="1059.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="548.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="545.7" y="1043.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.7" y="1054.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="545.7" y="1027.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="548.7" y="1038.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="545.7" y="1011.0" width="3.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="548.7" y="1022.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="545.7" y="995.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="548.7" y="1006.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="545.7" y="979.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="548.7" y="990.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="545.7" y="963.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="548.7" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.32%)</title><rect x="545.7" y="947.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="548.7" y="958.0"></text>
</g>
<g>
<title>Method::sort_methods(Array&lt;Method*&gt;*, bool, bool) (1 samples, 0.32%)</title><rect x="545.7" y="931.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="548.7" y="942.0"></text>
</g>
<g>
<title>void QuickSort::inner_sort&lt;false, Method*, int (*)(Method*, Method*)&gt;(Method**, unsigned long, int (*)(Method*, Method*)) (1 samples, 0.32%)</title><rect x="545.7" y="915.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="548.7" y="926.0"></text>
</g>
<g>
<title>unsigned long QuickSort::find_pivot&lt;Method*, int (*)(Method*, Method*)&gt;(Method**, unsigned long, int (*)(Method*, Method*)) (1 samples, 0.32%)</title><rect x="545.7" y="899.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="548.7" y="910.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.create (1 samples, 0.32%)</title><rect x="549.4" y="1171.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="552.4" y="1182.0"></text>
</g>
<g>
<title>org/graalvm/compiler/core/common/type/IntegerStamp.maxValueForMasks (1 samples, 0.32%)</title><rect x="549.4" y="1155.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="552.4" y="1166.0"></text>
</g>
<g>
<title>jdk/vm/ci/code/CodeUtil.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="549.4" y="1139.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.format (1 samples, 0.32%)</title><rect x="549.4" y="1123.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="552.4" y="1134.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.32%)</title><rect x="549.4" y="1107.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Formatter.&lt;init&gt; (1 samples, 0.32%)</title><rect x="549.4" y="1091.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.4" y="1102.0"></text>
</g>
<g>
<title>java/util/Formatter.getZero (1 samples, 0.32%)</title><rect x="549.4" y="1075.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.4" y="1086.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.getInstance (1 samples, 0.32%)</title><rect x="549.4" y="1059.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.4" y="1070.0"></text>
</g>
<g>
<title>sun/util/locale/provider/DecimalFormatSymbolsProviderImpl.getInstance (1 samples, 0.32%)</title><rect x="549.4" y="1043.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="1054.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.&lt;init&gt; (1 samples, 0.32%)</title><rect x="549.4" y="1027.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.4" y="1038.0"></text>
</g>
<g>
<title>java/text/DecimalFormatSymbols.initialize (1 samples, 0.32%)</title><rect x="549.4" y="1011.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="552.4" y="1022.0"></text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getDecimalFormatSymbolsData (1 samples, 0.32%)</title><rect x="549.4" y="995.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.4" y="1006.0"></text>
</g>
<g>
<title>sun/util/resources/LocaleData.getNumberFormatData (1 samples, 0.32%)</title><rect x="549.4" y="979.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.4" y="990.0"></text>
</g>
<g>
<title>sun/util/resources/LocaleData.getBundle (1 samples, 0.32%)</title><rect x="549.4" y="963.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="552.4" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.32%)</title><rect x="549.4" y="947.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="958.0"></text>
</g>
<g>
<title>sun/util/resources/LocaleData$1.run (1 samples, 0.32%)</title><rect x="549.4" y="931.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.4" y="942.0"></text>
</g>
<g>
<title>sun/util/resources/LocaleData$1.run (1 samples, 0.32%)</title><rect x="549.4" y="915.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="552.4" y="926.0"></text>
</g>
<g>
<title>sun/util/resources/Bundles.of (1 samples, 0.32%)</title><rect x="549.4" y="899.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="552.4" y="910.0"></text>
</g>
<g>
<title>sun/util/resources/Bundles.loadBundleOf (1 samples, 0.32%)</title><rect x="549.4" y="883.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="552.4" y="894.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadInstalled (1 samples, 0.32%)</title><rect x="549.4" y="867.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="552.4" y="878.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.&lt;init&gt; (1 samples, 0.32%)</title><rect x="549.4" y="851.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.4" y="862.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/meta/HotSpotGraphBuilderPlugins.registerObjectPlugins (1 samples, 0.32%)</title><rect x="553.2" y="1251.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="553.2" y="1235.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="553.2" y="1219.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="556.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="553.2" y="1203.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="556.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="553.2" y="1187.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="553.2" y="1171.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="556.2" y="1182.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="553.2" y="1155.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="553.2" y="1139.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.32%)</title><rect x="553.2" y="1123.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkCerts (1 samples, 0.32%)</title><rect x="553.2" y="1107.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putIfAbsent (1 samples, 0.32%)</title><rect x="553.2" y="1091.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.putVal (1 samples, 0.32%)</title><rect x="553.2" y="1075.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.2" y="1086.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/PluginFactory_HotSpotReplacementsUtil.registerPlugins (1 samples, 0.32%)</title><rect x="556.9" y="1251.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="556.9" y="1235.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="559.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="556.9" y="1219.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="556.9" y="1203.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="559.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="556.9" y="1187.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="559.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="556.9" y="1171.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.9" y="1182.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="556.9" y="1155.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="559.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="556.9" y="1139.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="556.9" y="1123.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.9" y="1134.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="556.9" y="1107.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="559.9" y="1118.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="556.9" y="1091.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="559.9" y="1102.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="556.9" y="1075.0" width="3.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="559.9" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="556.9" y="1059.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="559.9" y="1070.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="556.9" y="1043.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="559.9" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="556.9" y="1027.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="559.9" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="556.9" y="1011.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="559.9" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="556.9" y="995.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="559.9" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="556.9" y="979.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="559.9" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::verify_legal_utf8(unsigned char const*, int, Thread*) const (1 samples, 0.32%)</title><rect x="556.9" y="963.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="559.9" y="974.0"></text>
</g>
<g>
<title>UTF8::is_legal_utf8(unsigned char const*, int, bool) (1 samples, 0.32%)</title><rect x="556.9" y="947.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="559.9" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/replacements/PluginFactory_HubGetClassNode.registerPlugins (1 samples, 0.32%)</title><rect x="560.7" y="1251.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="560.7" y="1235.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="563.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="560.7" y="1219.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="560.7" y="1203.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="560.7" y="1187.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="560.7" y="1171.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.7" y="1182.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="560.7" y="1155.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="563.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="560.7" y="1139.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="563.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="560.7" y="1123.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="563.7" y="1134.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="560.7" y="1107.0" width="3.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="563.7" y="1118.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="560.7" y="1091.0" width="3.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="563.7" y="1102.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="560.7" y="1075.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="563.7" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="560.7" y="1059.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="563.7" y="1070.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="560.7" y="1043.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="563.7" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="560.7" y="1027.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="563.7" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="560.7" y="1011.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="563.7" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="560.7" y="995.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="563.7" y="1006.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="560.7" y="979.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="563.7" y="990.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="560.7" y="963.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="563.7" y="974.0"></text>
</g>
<g>
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="560.7" y="947.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="563.7" y="958.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/stubs/PluginFactory_NewInstanceStub.registerPlugins (1 samples, 0.32%)</title><rect x="564.4" y="1251.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="567.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="564.4" y="1235.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="564.4" y="1219.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="564.4" y="1203.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="567.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="564.4" y="1187.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="564.4" y="1171.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="567.4" y="1182.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="564.4" y="1155.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="564.4" y="1139.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="564.4" y="1123.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.4" y="1134.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="564.4" y="1107.0" width="3.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="567.4" y="1118.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="564.4" y="1091.0" width="3.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="567.4" y="1102.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="564.4" y="1075.0" width="3.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="567.4" y="1086.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="564.4" y="1059.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="567.4" y="1070.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="564.4" y="1043.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="567.4" y="1054.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.32%)</title><rect x="564.4" y="1027.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="567.4" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.32%)</title><rect x="564.4" y="1011.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="567.4" y="1022.0"></text>
</g>
<g>
<title>DefaultMethods::generate_default_methods(InstanceKlass*, GrowableArray&lt;Method*&gt; const*, Thread*) (1 samples, 0.32%)</title><rect x="564.4" y="995.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="567.4" y="1006.0"></text>
</g>
<g>
<title>HierarchyVisitor&lt;FindMethodsByErasedSig&gt;::run(InstanceKlass*) (1 samples, 0.32%)</title><rect x="564.4" y="979.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="567.4" y="990.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/StandardGraphBuilderPlugins.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="568.2" y="1251.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="568.2" y="1235.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="568.2" y="1219.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="568.2" y="1203.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="571.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="568.2" y="1187.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="571.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="568.2" y="1171.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.2" y="1182.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="568.2" y="1155.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="568.2" y="1139.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.postDefineClass (1 samples, 0.32%)</title><rect x="568.2" y="1123.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="571.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.32%)</title><rect x="568.2" y="1107.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.lastIndexOf (1 samples, 0.32%)</title><rect x="568.2" y="1091.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.32%)</title><rect x="568.2" y="1075.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="571.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.32%)</title><rect x="568.2" y="1059.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.2" y="1070.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/StandardGraphBuilderPlugins.registerInvocationPlugins (1 samples, 0.32%)</title><rect x="571.9" y="1251.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.9" y="1262.0"></text>
</g>
<g>
<title>org/graalvm/compiler/replacements/StandardGraphBuilderPlugins.registerGraalDirectivesPlugins (1 samples, 0.32%)</title><rect x="571.9" y="1235.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="574.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="571.9" y="1219.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="571.9" y="1203.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="571.9" y="1187.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="571.9" y="1171.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="571.9" y="1155.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.9" y="1166.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="571.9" y="1139.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="571.9" y="1123.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="571.9" y="1107.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.9" y="1118.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="571.9" y="1091.0" width="3.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="574.9" y="1102.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="571.9" y="1075.0" width="3.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="574.9" y="1086.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="571.9" y="1059.0" width="3.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="574.9" y="1070.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="571.9" y="1043.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="574.9" y="1054.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="571.9" y="1027.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="574.9" y="1038.0"></text>
</g>
<g>
<title>ClassFileParser::create_instance_klass(bool, Thread*) (1 samples, 0.32%)</title><rect x="571.9" y="1011.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="574.9" y="1022.0"></text>
</g>
<g>
<title>ClassFileParser::fill_instance_klass(InstanceKlass*, bool, Thread*) (1 samples, 0.32%)</title><rect x="571.9" y="995.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="574.9" y="1006.0"></text>
</g>
<g>
<title>java_lang_Class::create_mirror(Klass*, Handle, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="571.9" y="979.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="574.9" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::class_allocate(Klass*, int, Thread*) (1 samples, 0.32%)</title><rect x="571.9" y="963.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="574.9" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.32%)</title><rect x="571.9" y="947.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="574.9" y="958.0"></text>
</g>
<g>
<title>java_lang_Class::set_oop_size(HeapWord*, int) (1 samples, 0.32%)</title><rect x="571.9" y="931.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="574.9" y="942.0"></text>
</g>
<g>
<title>org/graalvm/compiler/serviceprovider/GraalServices$1$1.hasNext (2 samples, 0.63%)</title><rect x="575.7" y="1251.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.7" y="1262.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (2 samples, 0.63%)</title><rect x="575.7" y="1235.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="578.7" y="1246.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (2 samples, 0.63%)</title><rect x="575.7" y="1219.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="578.7" y="1230.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.hasNext (2 samples, 0.63%)</title><rect x="575.7" y="1203.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.7" y="1214.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (2 samples, 0.63%)</title><rect x="575.7" y="1187.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Class.forName (2 samples, 0.63%)</title><rect x="575.7" y="1171.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (2 samples, 0.63%)</title><rect x="575.7" y="1155.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="578.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClass (2 samples, 0.63%)</title><rect x="575.7" y="1139.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (2 samples, 0.63%)</title><rect x="575.7" y="1123.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="578.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (2 samples, 0.63%)</title><rect x="575.7" y="1107.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="578.7" y="1118.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="575.7" y="1091.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="578.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="575.7" y="1075.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="578.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="575.7" y="1059.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.7" y="1070.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="575.7" y="1043.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="578.7" y="1054.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="575.7" y="1027.0" width="3.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="578.7" y="1038.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="575.7" y="1011.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="578.7" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="575.7" y="995.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="578.7" y="1006.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="575.7" y="979.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="578.7" y="990.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="575.7" y="963.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="578.7" y="974.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="575.7" y="947.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="578.7" y="958.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_attributes(ClassFileStream const*, ConstantPool*, ClassFileParser::ClassAnnotationCollector*, Thread*) (1 samples, 0.32%)</title><rect x="575.7" y="931.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="578.7" y="942.0"></text>
</g>
<g>
<title>ClassFileParser::parse_classfile_inner_classes_attribute(ClassFileStream const*, unsigned char const*, bool, unsigned short, unsigned short, Thread*) (1 samples, 0.32%)</title><rect x="575.7" y="915.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="578.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.32%)</title><rect x="579.4" y="1091.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="582.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.32%)</title><rect x="579.4" y="1075.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="582.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.32%)</title><rect x="579.4" y="1059.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="582.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.32%)</title><rect x="579.4" y="1043.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.32%)</title><rect x="579.4" y="1027.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verifyName (1 samples, 0.32%)</title><rect x="579.4" y="1011.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.4" y="1022.0"></text>
</g>
<g>
<title>org/graalvm/compiler/nodes/StructuredGraph$Builder.build (1 samples, 0.32%)</title><rect x="583.1" y="1347.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="586.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="583.1" y="1331.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="586.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="583.1" y="1315.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="583.1" y="1299.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="583.1" y="1283.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="586.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="583.1" y="1267.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="586.1" y="1278.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="583.1" y="1251.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="583.1" y="1235.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass2 (1 samples, 0.32%)</title><rect x="583.1" y="1219.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="586.1" y="1230.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_defineClass2 (1 samples, 0.32%)</title><rect x="583.1" y="1203.0" width="3.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="586.1" y="1214.0"></text>
</g>
<g>
<title>JVM_DefineClassWithSource (1 samples, 0.32%)</title><rect x="583.1" y="1187.0" width="3.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="586.1" y="1198.0"></text>
</g>
<g>
<title>jvm_define_class_common(JNIEnv_*, char const*, _jobject*, signed char const*, int, _jobject*, char const*, Thread*) (1 samples, 0.32%)</title><rect x="583.1" y="1171.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="586.1" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_from_stream(Symbol*, Handle, Handle, ClassFileStream*, Thread*) (1 samples, 0.32%)</title><rect x="583.1" y="1155.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="586.1" y="1166.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="583.1" y="1139.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="586.1" y="1150.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="583.1" y="1123.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="586.1" y="1134.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="583.1" y="1107.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="586.1" y="1118.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="583.1" y="1091.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="586.1" y="1102.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="583.1" y="1075.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="586.1" y="1086.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="583.1" y="1059.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="586.1" y="1070.0"></text>
</g>
<g>
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="583.1" y="1043.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="586.1" y="1054.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.fromMetaspace (1 samples, 0.32%)</title><rect x="586.9" y="1491.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.9" y="1502.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedObjectTypeImpl.createMethod (1 samples, 0.32%)</title><rect x="586.9" y="1475.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.9" y="1486.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.getMetaspacePointer (1 samples, 0.32%)</title><rect x="586.9" y="1459.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.9" y="1470.0"></text>
</g>
<g>
<title>jdk/vm/ci/runtime/JVMCI.&lt;clinit&gt; (3 samples, 0.95%)</title><rect x="590.6" y="1491.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.6" y="1502.0"></text>
</g>
<g>
<title>jdk/vm/ci/runtime/JVMCI.initializeRuntime (3 samples, 0.95%)</title><rect x="590.6" y="1475.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.6" y="1486.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.runtime (3 samples, 0.95%)</title><rect x="590.6" y="1459.0" width="11.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.6" y="1470.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime$DelayedInit.&lt;clinit&gt; (3 samples, 0.95%)</title><rect x="590.6" y="1443.0" width="11.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.6" y="1454.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCIRuntime.&lt;init&gt; (3 samples, 0.95%)</title><rect x="590.6" y="1427.0" width="11.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.6" y="1438.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/HotSpotJVMCICompilerConfig.getCompilerFactory (2 samples, 0.63%)</title><rect x="590.6" y="1411.0" width="7.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.6" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/services/JVMCIServiceLocator.getProviders (2 samples, 0.63%)</title><rect x="590.6" y="1395.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.6" y="1406.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (1 samples, 0.32%)</title><rect x="590.6" y="1379.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="593.6" y="1390.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (1 samples, 0.32%)</title><rect x="590.6" y="1363.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.6" y="1374.0"></text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.hasNext (1 samples, 0.32%)</title><rect x="590.6" y="1347.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="593.6" y="1358.0"></text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (1 samples, 0.32%)</title><rect x="590.6" y="1331.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.6" y="1342.0"></text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 0.32%)</title><rect x="590.6" y="1315.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="590.6" y="1299.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClass (1 samples, 0.32%)</title><rect x="590.6" y="1283.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="590.6" y="1267.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="590.6" y="1251.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="593.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 0.32%)</title><rect x="590.6" y="1235.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="593.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 0.32%)</title><rect x="590.6" y="1219.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageReader.findLocation (1 samples, 0.32%)</title><rect x="590.6" y="1203.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.findLocation (1 samples, 0.32%)</title><rect x="590.6" y="1187.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageLocation.verify (1 samples, 0.32%)</title><rect x="590.6" y="1171.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.get (1 samples, 0.32%)</title><rect x="590.6" y="1155.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/jimage/BasicImageReader.getString (1 samples, 0.32%)</title><rect x="590.6" y="1139.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/jimage/ImageStringsReader.stringFromByteBuffer (1 samples, 0.32%)</title><rect x="590.6" y="1123.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.32%)</title><rect x="590.6" y="1107.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="593.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.32%)</title><rect x="590.6" y="1091.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.6" y="1102.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="590.6" y="1075.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.6" y="1086.0"></text>
</g>
<g>
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="590.6" y="1059.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="593.6" y="1070.0"></text>
</g>
<g>
<title>LinkResolver::resolve_invokestatic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.32%)</title><rect x="590.6" y="1043.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="593.6" y="1054.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (1 samples, 0.32%)</title><rect x="590.6" y="1027.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="593.6" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::initialize_impl(Thread*) (1 samples, 0.32%)</title><rect x="590.6" y="1011.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="593.6" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 0.32%)</title><rect x="590.6" y="995.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="593.6" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 0.32%)</title><rect x="590.6" y="979.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="593.6" y="990.0"></text>
</g>
<g>
<title>Method::make_adapters(methodHandle const&amp;, Thread*) (1 samples, 0.32%)</title><rect x="590.6" y="963.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="593.6" y="974.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 0.32%)</title><rect x="590.6" y="947.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="593.6" y="958.0"></text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 0.32%)</title><rect x="590.6" y="931.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="593.6" y="942.0"></text>
</g>
<g>
<title>AdapterFingerPrint::as_string() (1 samples, 0.32%)</title><rect x="590.6" y="915.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="593.6" y="926.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.32%)</title><rect x="590.6" y="899.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="593.6" y="910.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write(char const*, __va_list_tag*, bool) (1 samples, 0.32%)</title><rect x="590.6" y="883.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="593.6" y="894.0"></text>
</g>
<g>
<title>__cxx_global_var_init.4 (1 samples, 0.32%)</title><rect x="590.6" y="867.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="593.6" y="878.0"></text>
</g>
<g>
<title>org/graalvm/compiler/hotspot/HotSpotGraalJVMCIServiceLocator.getProvider (1 samples, 0.32%)</title><rect x="594.4" y="1379.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="597.4" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="594.4" y="1363.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="594.4" y="1347.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="594.4" y="1331.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 0.32%)</title><rect x="594.4" y="1315.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.4" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 0.32%)</title><rect x="594.4" y="1299.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.4" y="1310.0"></text>
</g>
<g>
<title>java/security/SecureClassLoader.defineClass (1 samples, 0.32%)</title><rect x="594.4" y="1283.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.defineClass (1 samples, 0.32%)</title><rect x="594.4" y="1267.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.preDefineClass (1 samples, 0.32%)</title><rect x="594.4" y="1251.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.checkName (1 samples, 0.32%)</title><rect x="594.4" y="1235.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.32%)</title><rect x="594.4" y="1219.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.32%)</title><rect x="594.4" y="1203.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.32%)</title><rect x="594.4" y="1187.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="597.4" y="1198.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/amd64/AMD64HotSpotJVMCIBackendFactory.createJVMCIBackend (1 samples, 0.32%)</title><rect x="598.1" y="1411.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.1" y="1422.0"></text>
</g>
<g>
<title>jdk/vm/ci/hotspot/amd64/AMD64HotSpotJVMCIBackendFactory.createTarget (1 samples, 0.32%)</title><rect x="598.1" y="1395.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="601.1" y="1406.0"></text>
</g>
<g>
<title>jdk/vm/ci/amd64/AMD64.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="598.1" y="1379.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="601.1" y="1390.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="598.1" y="1363.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="601.1" y="1374.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.32%)</title><rect x="598.1" y="1347.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="601.1" y="1358.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.32%)</title><rect x="598.1" y="1331.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="601.1" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="598.1" y="1315.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="601.1" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="598.1" y="1299.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="601.1" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.32%)</title><rect x="598.1" y="1283.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="601.1" y="1294.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.32%)</title><rect x="598.1" y="1267.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="601.1" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.32%)</title><rect x="598.1" y="1251.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="601.1" y="1262.0"></text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 0.32%)</title><rect x="598.1" y="1235.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="601.1" y="1246.0"></text>
</g>
<g>
<title>CodeCache::mark_for_deoptimization(KlassDepChange&amp;) (1 samples, 0.32%)</title><rect x="598.1" y="1219.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="601.1" y="1230.0"></text>
</g>
<g>
<title>InstanceKlass::mark_dependent_nmethods(KlassDepChange&amp;) (1 samples, 0.32%)</title><rect x="598.1" y="1203.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="601.1" y="1214.0"></text>
</g>
<g>
<title>DependencyContext::mark_dependent_nmethods(DepChange&amp;) (1 samples, 0.32%)</title><rect x="598.1" y="1187.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="601.1" y="1198.0"></text>
</g>
<g>
<title>nmethod::check_dependency_on(DepChange&amp;) (1 samples, 0.32%)</title><rect x="598.1" y="1171.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="601.1" y="1182.0"></text>
</g>
<g>
<title>Dependencies::find_finalizable_subclass(Klass*) (1 samples, 0.32%)</title><rect x="598.1" y="1155.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="601.1" y="1166.0"></text>
</g>
<g>
<title>sandbox/PokeHttpServer.main (4 samples, 1.27%)</title><rect x="601.9" y="1491.0" width="15.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="604.9" y="1502.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 0.32%)</title><rect x="601.9" y="1475.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="604.9" y="1486.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$AppClassLoader.loadClass (1 samples, 0.32%)</title><rect x="601.9" y="1459.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="604.9" y="1470.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClass (1 samples, 0.32%)</title><rect x="601.9" y="1443.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="604.9" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="601.9" y="1427.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="604.9" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 0.32%)</title><rect x="601.9" y="1411.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 0.32%)</title><rect x="601.9" y="1395.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 0.32%)</title><rect x="601.9" y="1379.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.9" y="1390.0"></text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 0.32%)</title><rect x="601.9" y="1363.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.9" y="1374.0"></text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 0.32%)</title><rect x="601.9" y="1347.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="604.9" y="1358.0"></text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 0.32%)</title><rect x="601.9" y="1331.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="604.9" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="601.9" y="1315.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="604.9" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.32%)</title><rect x="601.9" y="1299.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="604.9" y="1310.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.32%)</title><rect x="601.9" y="1283.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="604.9" y="1294.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="601.9" y="1267.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="604.9" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="601.9" y="1251.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="604.9" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="601.9" y="1235.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="604.9" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="601.9" y="1219.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="604.9" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="601.9" y="1203.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="604.9" y="1214.0"></text>
</g>
<g>
<title>SymbolTable::lookup(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="601.9" y="1187.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="604.9" y="1198.0"></text>
</g>
<g>
<title>SymbolTable::lookup_dynamic(int, char const*, int, unsigned int) (1 samples, 0.32%)</title><rect x="601.9" y="1171.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="604.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1144748948.linkToTargetMethod (1 samples, 0.32%)</title><rect x="605.6" y="1475.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="608.6" y="1486.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1456208737.invoke (1 samples, 0.32%)</title><rect x="605.6" y="1459.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.6" y="1470.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/679890578.invoke (1 samples, 0.32%)</title><rect x="605.6" y="1443.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.6" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.32%)</title><rect x="605.6" y="1427.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.6" y="1438.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.32%)</title><rect x="605.6" y="1411.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.6" y="1422.0"></text>
</g>
<g>
<title>java/util/Date.toString (1 samples, 0.32%)</title><rect x="605.6" y="1395.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.6" y="1406.0"></text>
</g>
<g>
<title>java/util/Date.normalize (1 samples, 0.32%)</title><rect x="605.6" y="1379.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.6" y="1390.0"></text>
</g>
<g>
<title>sun/util/calendar/Gregorian.getCalendarDate (1 samples, 0.32%)</title><rect x="605.6" y="1363.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="608.6" y="1374.0"></text>
</g>
<g>
<title>sun/util/calendar/Gregorian.getCalendarDate (1 samples, 0.32%)</title><rect x="605.6" y="1347.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="608.6" y="1358.0"></text>
</g>
<g>
<title>sun/util/calendar/Gregorian.newCalendarDate (1 samples, 0.32%)</title><rect x="605.6" y="1331.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.6" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="605.6" y="1315.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="608.6" y="1326.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1299.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="608.6" y="1310.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1283.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="608.6" y="1294.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1267.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="608.6" y="1278.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1251.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="608.6" y="1262.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1235.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="608.6" y="1246.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1219.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="608.6" y="1230.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1203.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="608.6" y="1214.0"></text>
</g>
<g>
<title>ClassFileParser::post_process_parsed_stream(ClassFileStream const*, ConstantPool*, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1187.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="608.6" y="1198.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_super_or_fail(Symbol*, Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1171.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="608.6" y="1182.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1155.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="608.6" y="1166.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1139.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="608.6" y="1150.0"></text>
</g>
<g>
<title>SystemDictionary::find_or_define_instance_class(Symbol*, Handle, InstanceKlass*, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1123.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="608.6" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::define_instance_class(InstanceKlass*, Thread*) (1 samples, 0.32%)</title><rect x="605.6" y="1107.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="608.6" y="1118.0"></text>
</g>
<g>
<title>CodeCache::flush_dependents_on(InstanceKlass*) (1 samples, 0.32%)</title><rect x="605.6" y="1091.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="608.6" y="1102.0"></text>
</g>
<g>
<title>KlassDepChange::initialize() (1 samples, 0.32%)</title><rect x="605.6" y="1075.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="608.6" y="1086.0"></text>
</g>
<g>
<title>java/net/ServerSocket.&lt;init&gt; (2 samples, 0.63%)</title><rect x="609.4" y="1475.0" width="7.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.4" y="1486.0"></text>
</g>
<g>
<title>java/net/ServerSocket.&lt;init&gt; (2 samples, 0.63%)</title><rect x="609.4" y="1459.0" width="7.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.4" y="1470.0"></text>
</g>
<g>
<title>java/net/ServerSocket.bind (1 samples, 0.32%)</title><rect x="609.4" y="1443.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.4" y="1454.0"></text>
</g>
<g>
<title>java/net/AbstractPlainSocketImpl.bind (1 samples, 0.32%)</title><rect x="609.4" y="1427.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="612.4" y="1438.0"></text>
</g>
<g>
<title>java/net/PlainSocketImpl.socketBind (1 samples, 0.32%)</title><rect x="609.4" y="1411.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.4" y="1422.0"></text>
</g>
<g>
<title>java/net/NetworkInterface.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="609.4" y="1395.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.4" y="1406.0"></text>
</g>
<g>
<title>java/net/DefaultInterface.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="609.4" y="1379.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="612.4" y="1390.0"></text>
</g>
<g>
<title>java/net/DefaultInterface.chooseDefaultInterface (1 samples, 0.32%)</title><rect x="609.4" y="1363.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.4" y="1374.0"></text>
</g>
<g>
<title>java/net/NetworkInterface.isPointToPoint (1 samples, 0.32%)</title><rect x="609.4" y="1347.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.4" y="1358.0"></text>
</g>
<g>
<title>java/net/NetworkInterface.isP2P0 (1 samples, 0.32%)</title><rect x="609.4" y="1331.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="612.4" y="1342.0"></text>
</g>
<g>
<title>InterpreterRuntime::prepare_native_call(JavaThread*, Method*) (1 samples, 0.32%)</title><rect x="609.4" y="1315.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="612.4" y="1326.0"></text>
</g>
<g>
<title>NativeLookup::lookup(methodHandle const&amp;, bool&amp;, Thread*) (1 samples, 0.32%)</title><rect x="609.4" y="1299.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="612.4" y="1310.0"></text>
</g>
<g>
<title>NativeLookup::lookup_base(methodHandle const&amp;, bool&amp;, Thread*) (1 samples, 0.32%)</title><rect x="609.4" y="1283.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="612.4" y="1294.0"></text>
</g>
<g>
<title>NativeLookup::lookup_entry(methodHandle const&amp;, bool&amp;, Thread*) (1 samples, 0.32%)</title><rect x="609.4" y="1267.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="612.4" y="1278.0"></text>
</g>
<g>
<title>NativeLookup::lookup_style(methodHandle const&amp;, char*, char const*, int, bool, bool&amp;, Thread*) (1 samples, 0.32%)</title><rect x="609.4" y="1251.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="612.4" y="1262.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.32%)</title><rect x="609.4" y="1235.0" width="3.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="612.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.32%)</title><rect x="609.4" y="1219.0" width="3.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="612.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.32%)</title><rect x="609.4" y="1203.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="612.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.32%)</title><rect x="609.4" y="1187.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="612.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.32%)</title><rect x="609.4" y="1171.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="612.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.32%)</title><rect x="609.4" y="1155.0" width="3.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="612.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.32%)</title><rect x="609.4" y="1139.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="612.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.32%)</title><rect x="609.4" y="1123.0" width="3.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="612.4" y="1134.0"></text>
</g>
<g>
<title>java/net/ServerSocket.setImpl (1 samples, 0.32%)</title><rect x="613.1" y="1443.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.1" y="1454.0"></text>
</g>
<g>
<title>java/net/PlainSocketImpl.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="613.1" y="1427.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.1" y="1438.0"></text>
</g>
<g>
<title>java/net/PlainSocketImpl.initProto (1 samples, 0.32%)</title><rect x="613.1" y="1411.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="616.1" y="1422.0"></text>
</g>
<g>
<title>java/net/InetAddress.&lt;clinit&gt; (1 samples, 0.32%)</title><rect x="613.1" y="1395.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.1" y="1406.0"></text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 0.32%)</title><rect x="613.1" y="1379.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="616.1" y="1390.0"></text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1363.0" width="3.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="616.1" y="1374.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1347.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="616.1" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1331.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="616.1" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1315.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="616.1" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1299.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="616.1" y="1310.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1283.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="616.1" y="1294.0"></text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1267.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="616.1" y="1278.0"></text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1251.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="616.1" y="1262.0"></text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1235.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="616.1" y="1246.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1219.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="616.1" y="1230.0"></text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 0.32%)</title><rect x="613.1" y="1203.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="616.1" y="1214.0"></text>
</g>
<g>
<title>SymbolTable::lookup_only(char const*, int, unsigned int&amp;) (1 samples, 0.32%)</title><rect x="613.1" y="1187.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="616.1" y="1198.0"></text>
</g>
<g>
<title>SymbolTable::hash_symbol(char const*, int) (1 samples, 0.32%)</title><rect x="613.1" y="1171.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="616.1" y="1182.0"></text>
</g>
<g>
<title>thread_start (153 samples, 48.57%)</title><rect x="616.9" y="1491.0" width="573.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="619.9" y="1502.0">thread_start</text>
</g>
<g>
<title>_pthread_start (153 samples, 48.57%)</title><rect x="616.9" y="1475.0" width="573.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="619.9" y="1486.0">_pthread_start</text>
</g>
<g>
<title>thread_native_entry(Thread*) (153 samples, 48.57%)</title><rect x="616.9" y="1459.0" width="573.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="619.9" y="1470.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (153 samples, 48.57%)</title><rect x="616.9" y="1443.0" width="573.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="619.9" y="1454.0">Thread::call_run()</text>
</g>
<g>
<title>ConcurrentGCThread::run() (21 samples, 6.67%)</title><rect x="616.9" y="1427.0" width="78.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="619.9" y="1438.0">Concurren..</text>
</g>
<g>
<title>G1ConcurrentMarkThread::run_service() (1 samples, 0.32%)</title><rect x="616.9" y="1411.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="619.9" y="1422.0"></text>
</g>
<g>
<title>G1ConcurrentMark::preclean() (1 samples, 0.32%)</title><rect x="616.9" y="1395.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="619.9" y="1406.0"></text>
</g>
<g>
<title>ReferenceProcessor::preclean_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, YieldClosure*, GCTimer*) (1 samples, 0.32%)</title><rect x="616.9" y="1379.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="619.9" y="1390.0"></text>
</g>
<g>
<title>ReferenceProcessor::preclean_discovered_reflist(DiscoveredList&amp;, BoolObjectClosure*, OopClosure*, VoidClosure*, YieldClosure*) (1 samples, 0.32%)</title><rect x="616.9" y="1363.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="619.9" y="1374.0"></text>
</g>
<g>
<title>G1CMDrainMarkingStackClosure::do_void() (1 samples, 0.32%)</title><rect x="616.9" y="1347.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="619.9" y="1358.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (1 samples, 0.32%)</title><rect x="616.9" y="1331.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="619.9" y="1342.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) (1 samples, 0.32%)</title><rect x="616.9" y="1315.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="619.9" y="1326.0"></text>
</g>
<g>
<title>G1CMTask::get_entries_from_global_stack() (1 samples, 0.32%)</title><rect x="616.9" y="1299.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="619.9" y="1310.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (20 samples, 6.35%)</title><rect x="620.6" y="1411.0" width="74.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="623.6" y="1422.0">G1YoungR..</text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sample_young_list_rs_lengths() (6 samples, 1.90%)</title><rect x="620.6" y="1395.0" width="22.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="623.6" y="1406.0">G..</text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (6 samples, 1.90%)</title><rect x="620.6" y="1379.0" width="22.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="623.6" y="1390.0">G..</text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (6 samples, 1.90%)</title><rect x="620.6" y="1363.0" width="22.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="623.6" y="1374.0">G..</text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (4 samples, 1.27%)</title><rect x="624.3" y="1347.0" width="15.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="627.3" y="1358.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (4 samples, 1.27%)</title><rect x="624.3" y="1331.0" width="15.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="627.3" y="1342.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.32%)</title><rect x="624.3" y="1315.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="627.3" y="1326.0"></text>
</g>
<g>
<title>G1Policy::predict_bytes_to_copy(HeapRegion*) const (3 samples, 0.95%)</title><rect x="628.1" y="1315.0" width="11.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="631.1" y="1326.0"></text>
</g>
<g>
<title>G1ContiguousSpace::used() const (1 samples, 0.32%)</title><rect x="628.1" y="1299.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="631.1" y="1310.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (2 samples, 0.63%)</title><rect x="631.8" y="1299.0" width="7.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="634.8" y="1310.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.32%)</title><rect x="639.3" y="1347.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="642.3" y="1358.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.32%)</title><rect x="639.3" y="1331.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="642.3" y="1342.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.32%)</title><rect x="639.3" y="1315.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="642.3" y="1326.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::sleep_before_next_cycle() (14 samples, 4.44%)</title><rect x="643.1" y="1395.0" width="52.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="646.1" y="1406.0">G1You..</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (14 samples, 4.44%)</title><rect x="643.1" y="1379.0" width="52.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="646.1" y="1390.0">Monit..</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (14 samples, 4.44%)</title><rect x="643.1" y="1363.0" width="52.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="646.1" y="1374.0">Monit..</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (14 samples, 4.44%)</title><rect x="643.1" y="1347.0" width="52.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="646.1" y="1358.0">os::P..</text>
</g>
<g>
<title>__gettimeofday (1 samples, 0.32%)</title><rect x="643.1" y="1331.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="646.1" y="1342.0"></text>
</g>
<g>
<title>__psynch_cvwait (13 samples, 4.13%)</title><rect x="646.8" y="1331.0" width="48.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="649.8" y="1342.0">__ps..</text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 1.27%)</title><rect x="695.5" y="1427.0" width="15.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="698.5" y="1438.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.32%)</title><rect x="695.5" y="1411.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="698.5" y="1422.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.32%)</title><rect x="695.5" y="1395.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="698.5" y="1406.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.32%)</title><rect x="695.5" y="1379.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="698.5" y="1390.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.32%)</title><rect x="695.5" y="1363.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="698.5" y="1374.0"></text>
</g>
<g>
<title>frame::sender_for_interpreter_frame(RegisterMap*) const (1 samples, 0.32%)</title><rect x="695.5" y="1347.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="698.5" y="1358.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.32%)</title><rect x="695.5" y="1331.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="698.5" y="1342.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.32%)</title><rect x="695.5" y="1315.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="698.5" y="1326.0"></text>
</g>
<g>
<title>CodeHeap::find_start(void*) const (1 samples, 0.32%)</title><rect x="695.5" y="1299.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="698.5" y="1310.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::worker_wait_for_task() (3 samples, 0.95%)</title><rect x="699.3" y="1411.0" width="11.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="702.3" y="1422.0"></text>
</g>
<g>
<title>OSXSemaphore::wait() (1 samples, 0.32%)</title><rect x="699.3" y="1395.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="702.3" y="1406.0"></text>
</g>
<g>
<title>si_module_static_file.file_vtable (2 samples, 0.63%)</title><rect x="703.0" y="1395.0" width="7.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="706.0" y="1406.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (117 samples, 37.14%)</title><rect x="710.5" y="1427.0" width="438.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="713.5" y="1438.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (105 samples, 33.33%)</title><rect x="710.5" y="1411.0" width="393.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="713.5" y="1422.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (103 samples, 32.70%)</title><rect x="710.5" y="1395.0" width="385.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="713.5" y="1406.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>CompilationLog::log_compile(JavaThread*, CompileTask*) (1 samples, 0.32%)</title><rect x="710.5" y="1379.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.5" y="1390.0"></text>
</g>
<g>
<title>CompileTask::print(outputStream*, char const*, bool, bool) (1 samples, 0.32%)</title><rect x="710.5" y="1363.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="713.5" y="1374.0"></text>
</g>
<g>
<title>CompileTask::print_impl(outputStream*, Method*, int, int, bool, int, bool, char const*, bool, bool, long, long) (1 samples, 0.32%)</title><rect x="710.5" y="1347.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="713.5" y="1358.0"></text>
</g>
<g>
<title>Method::print_short_name(outputStream*) (1 samples, 0.32%)</title><rect x="710.5" y="1331.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="713.5" y="1342.0"></text>
</g>
<g>
<title>outputStream::print(char const*, ...) (1 samples, 0.32%)</title><rect x="710.5" y="1315.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="713.5" y="1326.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf_and_write(char const*, __va_list_tag*, bool) (1 samples, 0.32%)</title><rect x="710.5" y="1299.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="713.5" y="1310.0"></text>
</g>
<g>
<title>outputStream::do_vsnprintf(char*, unsigned long, char const*, __va_list_tag*, bool, unsigned long&amp;) (1 samples, 0.32%)</title><rect x="710.5" y="1283.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="713.5" y="1294.0"></text>
</g>
<g>
<title>_platform_strchr$VARIANT$Haswell (1 samples, 0.32%)</title><rect x="710.5" y="1267.0" width="3.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="713.5" y="1278.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (95 samples, 30.16%)</title><rect x="714.3" y="1379.0" width="355.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="717.3" y="1390.0">Compiler::compile_method(ciEnv*, ciMethod*, int,..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (95 samples, 30.16%)</title><rect x="714.3" y="1363.0" width="355.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="717.3" y="1374.0">Compilation::Compilation(AbstractCompiler*, ciEn..</text>
</g>
<g>
<title>Compilation::compile_method() (94 samples, 29.84%)</title><rect x="718.0" y="1347.0" width="352.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="721.0" y="1358.0">Compilation::compile_method()</text>
</g>
<g>
<title>Compilation::compile_java_method() (87 samples, 27.62%)</title><rect x="718.0" y="1331.0" width="325.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="721.0" y="1342.0">Compilation::compile_java_method()</text>
</g>
<g>
<title>Compilation::build_hir() (49 samples, 15.56%)</title><rect x="718.0" y="1315.0" width="183.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="721.0" y="1326.0">Compilation::build_hir()</text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (2 samples, 0.63%)</title><rect x="718.0" y="1299.0" width="7.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="721.0" y="1310.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (2 samples, 0.63%)</title><rect x="718.0" y="1283.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="721.0" y="1294.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (2 samples, 0.63%)</title><rect x="718.0" y="1267.0" width="7.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="721.0" y="1278.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1251.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="721.0" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1235.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="721.0" y="1246.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1219.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="721.0" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1203.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="721.0" y="1214.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1187.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="721.0" y="1198.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1171.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="721.0" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1155.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="721.0" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1139.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="721.0" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1123.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="721.0" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1107.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="721.0" y="1118.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1091.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="721.0" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1075.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="721.0" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1059.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="721.0" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1043.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="721.0" y="1054.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1027.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="721.0" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="1011.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="721.0" y="1022.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="718.0" y="995.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="721.0" y="1006.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.32%)</title><rect x="718.0" y="979.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="721.0" y="990.0"></text>
</g>
<g>
<title>BlockBegin::state_values_do(ValueVisitor*) (1 samples, 0.32%)</title><rect x="718.0" y="963.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="721.0" y="974.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.32%)</title><rect x="718.0" y="947.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="721.0" y="958.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.32%)</title><rect x="721.7" y="1251.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="724.7" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::state_values_do(ValueVisitor*) (1 samples, 0.32%)</title><rect x="721.7" y="1235.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="724.7" y="1246.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.32%)</title><rect x="721.7" y="1219.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="724.7" y="1230.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (44 samples, 13.97%)</title><rect x="725.5" y="1299.0" width="164.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="728.5" y="1310.0">IR::IR(Compilation*, ..</text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (44 samples, 13.97%)</title><rect x="725.5" y="1283.0" width="164.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="728.5" y="1294.0">IRScope::IRScope(Comp..</text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (44 samples, 13.97%)</title><rect x="725.5" y="1267.0" width="164.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="728.5" y="1278.0">GraphBuilder::GraphBu..</text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (5 samples, 1.59%)</title><rect x="725.5" y="1251.0" width="18.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="728.5" y="1262.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (5 samples, 1.59%)</title><rect x="725.5" y="1235.0" width="18.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="728.5" y="1246.0"></text>
</g>
<g>
<title>BlockListBuilder::make_block_at(int, BlockBegin*) (1 samples, 0.32%)</title><rect x="729.2" y="1219.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="732.2" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.32%)</title><rect x="729.2" y="1203.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="732.2" y="1214.0"></text>
</g>
<g>
<title>GrowableArray&lt;BlockBegin*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.32%)</title><rect x="729.2" y="1187.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="732.2" y="1198.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="729.2" y="1171.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="732.2" y="1182.0"></text>
</g>
<g>
<title>Arena::check_for_overflow(unsigned long, char const*, AllocFailStrategy::AllocFailEnum) const (1 samples, 0.32%)</title><rect x="729.2" y="1155.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="732.2" y="1166.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (3 samples, 0.95%)</title><rect x="733.0" y="1219.0" width="11.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="736.0" y="1230.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (3 samples, 0.95%)</title><rect x="733.0" y="1203.0" width="11.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="736.0" y="1214.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (3 samples, 0.95%)</title><rect x="733.0" y="1187.0" width="11.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="736.0" y="1198.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.32%)</title><rect x="733.0" y="1171.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="736.0" y="1182.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (2 samples, 0.63%)</title><rect x="736.7" y="1171.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="739.7" y="1182.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (2 samples, 0.63%)</title><rect x="736.7" y="1155.0" width="7.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="739.7" y="1166.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (2 samples, 0.63%)</title><rect x="736.7" y="1139.0" width="7.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="739.7" y="1150.0"></text>
</g>
<g>
<title>ciMethodBlocks::make_block_at(int) (2 samples, 0.63%)</title><rect x="736.7" y="1123.0" width="7.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="739.7" y="1134.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="740.5" y="1107.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="743.5" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (37 samples, 11.75%)</title><rect x="744.2" y="1251.0" width="138.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="747.2" y="1262.0">GraphBuilder::ite..</text>
</g>
<g>
<title>BlockEnd::as_BlockEnd() (1 samples, 0.32%)</title><rect x="744.2" y="1235.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="747.2" y="1246.0"></text>
</g>
<g>
<title>GraphBuilder::connect_to_end(BlockBegin*) (1 samples, 0.32%)</title><rect x="748.0" y="1235.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="751.0" y="1246.0"></text>
</g>
<g>
<title>ValueStack::copy_for_parsing() (1 samples, 0.32%)</title><rect x="748.0" y="1219.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="751.0" y="1230.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.32%)</title><rect x="748.0" y="1203.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="751.0" y="1214.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.32%)</title><rect x="748.0" y="1187.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="751.0" y="1198.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="748.0" y="1171.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="751.0" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (35 samples, 11.11%)</title><rect x="751.7" y="1235.0" width="131.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="754.7" y="1246.0">GraphBuilder::it..</text>
</g>
<g>
<title>GraphBuilder::ScopeData::add_to_work_list(BlockBegin*) (1 samples, 0.32%)</title><rect x="755.5" y="1219.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="758.5" y="1230.0"></text>
</g>
<g>
<title>GrowableArray&lt;BlockBegin*&gt;::append(BlockBegin* const&amp;) (1 samples, 0.32%)</title><rect x="755.5" y="1203.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="758.5" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (3 samples, 0.95%)</title><rect x="759.2" y="1219.0" width="11.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="762.2" y="1230.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (3 samples, 0.95%)</title><rect x="759.2" y="1203.0" width="11.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="762.2" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.63%)</title><rect x="759.2" y="1187.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="762.2" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (2 samples, 0.63%)</title><rect x="759.2" y="1171.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="762.2" y="1182.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.63%)</title><rect x="759.2" y="1155.0" width="7.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="762.2" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.32%)</title><rect x="759.2" y="1139.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="762.2" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.32%)</title><rect x="759.2" y="1123.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="762.2" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.32%)</title><rect x="763.0" y="1139.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="766.0" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.32%)</title><rect x="763.0" y="1123.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="766.0" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.32%)</title><rect x="763.0" y="1107.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="766.0" y="1118.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.32%)</title><rect x="763.0" y="1091.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="766.0" y="1102.0"></text>
</g>
<g>
<title>os::current_thread_id() (1 samples, 0.32%)</title><rect x="763.0" y="1075.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="766.0" y="1086.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.32%)</title><rect x="763.0" y="1059.0" width="3.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="766.0" y="1070.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="766.7" y="1187.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="769.7" y="1198.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.32%)</title><rect x="766.7" y="1171.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="769.7" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.32%)</title><rect x="766.7" y="1155.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="769.7" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.32%)</title><rect x="766.7" y="1139.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="769.7" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::check_cast(int) (1 samples, 0.32%)</title><rect x="770.4" y="1219.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="773.4" y="1230.0"></text>
</g>
<g>
<title>Compilation::is_profiling() (1 samples, 0.32%)</title><rect x="770.4" y="1203.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="773.4" y="1214.0"></text>
</g>
<g>
<title>ciEnv::comp_level() (1 samples, 0.32%)</title><rect x="770.4" y="1187.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="773.4" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (2 samples, 0.63%)</title><rect x="774.2" y="1219.0" width="7.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="777.2" y="1230.0"></text>
</g>
<g>
<title>Canonicalizer::do_If(If*) (1 samples, 0.32%)</title><rect x="774.2" y="1203.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="777.2" y="1214.0"></text>
</g>
<g>
<title>Instruction::can_trap() const (1 samples, 0.32%)</title><rect x="777.9" y="1203.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="780.9" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (26 samples, 8.25%)</title><rect x="781.7" y="1219.0" width="97.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="784.7" y="1230.0">GraphBuilde..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (19 samples, 6.03%)</title><rect x="781.7" y="1203.0" width="71.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="784.7" y="1214.0">GraphBui..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (19 samples, 6.03%)</title><rect x="781.7" y="1187.0" width="71.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="784.7" y="1198.0">GraphBui..</text>
</g>
<g>
<title>BlockBegin::BlockBegin(int) (1 samples, 0.32%)</title><rect x="781.7" y="1171.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="784.7" y="1182.0"></text>
</g>
<g>
<title>GrowableArray&lt;BlockBegin*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 0.32%)</title><rect x="781.7" y="1155.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="784.7" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (17 samples, 5.40%)</title><rect x="785.4" y="1171.0" width="63.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="788.4" y="1182.0">GraphBu..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (17 samples, 5.40%)</title><rect x="785.4" y="1155.0" width="63.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="788.4" y="1166.0">GraphBu..</text>
</g>
<g>
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.32%)</title><rect x="785.4" y="1139.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="788.4" y="1150.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.32%)</title><rect x="785.4" y="1123.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="788.4" y="1134.0"></text>
</g>
<g>
<title>ciMethod::raw_liveness_at_bci(int) (1 samples, 0.32%)</title><rect x="785.4" y="1107.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="788.4" y="1118.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.32%)</title><rect x="785.4" y="1091.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="788.4" y="1102.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.32%)</title><rect x="785.4" y="1075.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="788.4" y="1086.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_range(ciBytecodeStream*) (1 samples, 0.32%)</title><rect x="785.4" y="1059.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="788.4" y="1070.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_single(ciBytecodeStream*) (1 samples, 0.32%)</title><rect x="785.4" y="1043.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="788.4" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::ScopeData::block_at(int) (1 samples, 0.32%)</title><rect x="789.2" y="1139.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="792.2" y="1150.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.63%)</title><rect x="792.9" y="1139.0" width="7.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="795.9" y="1150.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.63%)</title><rect x="792.9" y="1123.0" width="7.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="795.9" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.32%)</title><rect x="792.9" y="1107.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="795.9" y="1118.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.32%)</title><rect x="792.9" y="1091.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="795.9" y="1102.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.32%)</title><rect x="792.9" y="1075.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="795.9" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.32%)</title><rect x="792.9" y="1059.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="795.9" y="1070.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.32%)</title><rect x="796.7" y="1107.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="799.7" y="1118.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.32%)</title><rect x="796.7" y="1091.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="799.7" y="1102.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.32%)</title><rect x="796.7" y="1075.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="799.7" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.32%)</title><rect x="796.7" y="1059.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="799.7" y="1070.0"></text>
</g>
<g>
<title>fieldDescriptor::reinitialize(InstanceKlass*, int) (1 samples, 0.32%)</title><rect x="796.7" y="1043.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="799.7" y="1054.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::remove_at(int) (1 samples, 0.32%)</title><rect x="796.7" y="1027.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="799.7" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (13 samples, 4.13%)</title><rect x="800.4" y="1139.0" width="48.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="803.4" y="1150.0">Grap..</text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.32%)</title><rect x="800.4" y="1123.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="803.4" y="1134.0"></text>
</g>
<g>
<title>ValueStack::copy(ValueStack::Kind, int) (1 samples, 0.32%)</title><rect x="800.4" y="1107.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="803.4" y="1118.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.32%)</title><rect x="800.4" y="1091.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="803.4" y="1102.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::appendAll(GrowableArray&lt;Instruction*&gt; const*) (1 samples, 0.32%)</title><rect x="800.4" y="1075.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="803.4" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (11 samples, 3.49%)</title><rect x="804.2" y="1123.0" width="41.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="807.2" y="1134.0">Gra..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (11 samples, 3.49%)</title><rect x="804.2" y="1107.0" width="41.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="807.2" y="1118.0">Gra..</text>
</g>
<g>
<title>Compilation::is_profiling() (1 samples, 0.32%)</title><rect x="804.2" y="1091.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="807.2" y="1102.0"></text>
</g>
<g>
<title>ciEnv::comp_level() (1 samples, 0.32%)</title><rect x="804.2" y="1075.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="807.2" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (9 samples, 2.86%)</title><rect x="807.9" y="1091.0" width="33.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="810.9" y="1102.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (9 samples, 2.86%)</title><rect x="807.9" y="1075.0" width="33.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="810.9" y="1086.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (9 samples, 2.86%)</title><rect x="807.9" y="1059.0" width="33.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="810.9" y="1070.0">Gr..</text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 1.90%)</title><rect x="807.9" y="1043.0" width="22.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="810.9" y="1054.0">G..</text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 1.90%)</title><rect x="807.9" y="1027.0" width="22.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="810.9" y="1038.0">G..</text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 1.27%)</title><rect x="807.9" y="1011.0" width="15.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="810.9" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 1.27%)</title><rect x="807.9" y="995.0" width="15.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="810.9" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (2 samples, 0.63%)</title><rect x="807.9" y="979.0" width="7.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="810.9" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.32%)</title><rect x="807.9" y="963.0" width="3.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="810.9" y="974.0"></text>
</g>
<g>
<title>ValueMap::kill_field(ciField*, bool) (1 samples, 0.32%)</title><rect x="807.9" y="947.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="810.9" y="958.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.32%)</title><rect x="811.7" y="963.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="814.7" y="974.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.32%)</title><rect x="811.7" y="947.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="814.7" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.63%)</title><rect x="815.4" y="979.0" width="7.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="818.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.32%)</title><rect x="815.4" y="963.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="818.4" y="974.0"></text>
</g>
<g>
<title>Instruction::as_LoadField() (1 samples, 0.32%)</title><rect x="815.4" y="947.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="818.4" y="958.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.32%)</title><rect x="819.1" y="963.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="822.1" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.32%)</title><rect x="819.1" y="947.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="822.1" y="958.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.32%)</title><rect x="819.1" y="931.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="822.1" y="942.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.32%)</title><rect x="819.1" y="915.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="822.1" y="926.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.32%)</title><rect x="819.1" y="899.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="822.1" y="910.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.32%)</title><rect x="819.1" y="883.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="822.1" y="894.0"></text>
</g>
<g>
<title>Monitor::TryFast() (1 samples, 0.32%)</title><rect x="819.1" y="867.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="822.1" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (2 samples, 0.63%)</title><rect x="822.9" y="1011.0" width="7.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="825.9" y="1022.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (2 samples, 0.63%)</title><rect x="822.9" y="995.0" width="7.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="825.9" y="1006.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (2 samples, 0.63%)</title><rect x="822.9" y="979.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="825.9" y="990.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (2 samples, 0.63%)</title><rect x="822.9" y="963.0" width="7.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="825.9" y="974.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (2 samples, 0.63%)</title><rect x="822.9" y="947.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="825.9" y="958.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.32%)</title><rect x="822.9" y="931.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="825.9" y="942.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.32%)</title><rect x="822.9" y="915.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="825.9" y="926.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.32%)</title><rect x="822.9" y="899.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="825.9" y="910.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.32%)</title><rect x="822.9" y="883.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="825.9" y="894.0"></text>
</g>
<g>
<title>ciMethodBlocks::make_block_at(int) (1 samples, 0.32%)</title><rect x="822.9" y="867.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="825.9" y="878.0"></text>
</g>
<g>
<title>MethodLiveness::init_gen_kill() (1 samples, 0.32%)</title><rect x="826.6" y="931.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="829.6" y="942.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill(ciMethod*) (1 samples, 0.32%)</title><rect x="826.6" y="915.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="829.6" y="926.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_range(ciBytecodeStream*) (1 samples, 0.32%)</title><rect x="826.6" y="899.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="829.6" y="910.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::compute_gen_kill_single(ciBytecodeStream*) (1 samples, 0.32%)</title><rect x="826.6" y="883.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="829.6" y="894.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.63%)</title><rect x="830.4" y="1043.0" width="7.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="833.4" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.63%)</title><rect x="830.4" y="1027.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="833.4" y="1038.0"></text>
</g>
<g>
<title>ConstantPool::impl_klass_ref_index_at(int, bool) (1 samples, 0.32%)</title><rect x="830.4" y="1011.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="833.4" y="1022.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.32%)</title><rect x="834.1" y="1011.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="837.1" y="1022.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.32%)</title><rect x="834.1" y="995.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="837.1" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_appendix() (1 samples, 0.32%)</title><rect x="837.9" y="1043.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="840.9" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_and_fence(JavaThread*, JavaThreadState, JavaThreadState) (1 samples, 0.32%)</title><rect x="837.9" y="1027.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="840.9" y="1038.0"></text>
</g>
<g>
<title>SafepointMechanism::block_if_requested_local_poll(JavaThread*) (1 samples, 0.32%)</title><rect x="837.9" y="1011.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="840.9" y="1022.0"></text>
</g>
<g>
<title>SafepointMechanism::local_poll_armed(JavaThread*) (1 samples, 0.32%)</title><rect x="837.9" y="995.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="840.9" y="1006.0"></text>
</g>
<g>
<title>void volatile* OrderAccess::load_acquire&lt;void volatile*&gt;(void volatile* const volatile*) (1 samples, 0.32%)</title><rect x="837.9" y="979.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="840.9" y="990.0"></text>
</g>
<g>
<title>Atomic::LoadImpl&lt;void volatile*, OrderAccess::PlatformOrderedLoad&lt;8ul, (ScopedFenceType)0&gt;, void&gt;::operator()(void volatile* const volatile*) const (1 samples, 0.32%)</title><rect x="837.9" y="963.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="840.9" y="974.0"></text>
</g>
<g>
<title>ScopedFence&lt;(ScopedFenceType)0&gt;::ScopedFence(void*) (1 samples, 0.32%)</title><rect x="837.9" y="947.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="840.9" y="958.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.32%)</title><rect x="841.6" y="1091.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="844.6" y="1102.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.32%)</title><rect x="841.6" y="1075.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="844.6" y="1086.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.32%)</title><rect x="841.6" y="1059.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="844.6" y="1070.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.32%)</title><rect x="841.6" y="1043.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="844.6" y="1054.0"></text>
</g>
<g>
<title>ciMethodData::ciMethodData(MethodData*) (1 samples, 0.32%)</title><rect x="841.6" y="1027.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="844.6" y="1038.0"></text>
</g>
<g>
<title>_platform_strncpy (1 samples, 0.32%)</title><rect x="841.6" y="1011.0" width="3.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="844.6" y="1022.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.32%)</title><rect x="845.4" y="1123.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="848.4" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (1 samples, 0.32%)</title><rect x="845.4" y="1107.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="848.4" y="1118.0"></text>
</g>
<g>
<title>Instruction::as_Local() (1 samples, 0.32%)</title><rect x="849.1" y="1171.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="852.1" y="1182.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_declared_method_holder() (1 samples, 0.32%)</title><rect x="852.9" y="1203.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="855.9" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) (1 samples, 0.32%)</title><rect x="852.9" y="1187.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="855.9" y="1198.0"></text>
</g>
<g>
<title>os::is_MP() (1 samples, 0.32%)</title><rect x="852.9" y="1171.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="855.9" y="1182.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.95%)</title><rect x="856.6" y="1203.0" width="11.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="859.6" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.95%)</title><rect x="856.6" y="1187.0" width="11.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="859.6" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (3 samples, 0.95%)</title><rect x="856.6" y="1171.0" width="11.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="859.6" y="1182.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (3 samples, 0.95%)</title><rect x="856.6" y="1155.0" width="11.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="859.6" y="1166.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (3 samples, 0.95%)</title><rect x="856.6" y="1139.0" width="11.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="859.6" y="1150.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.63%)</title><rect x="860.3" y="1123.0" width="7.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="863.3" y="1134.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.32%)</title><rect x="860.3" y="1107.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="863.3" y="1118.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.32%)</title><rect x="864.1" y="1107.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="867.1" y="1118.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.32%)</title><rect x="864.1" y="1091.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="867.1" y="1102.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (3 samples, 0.95%)</title><rect x="867.8" y="1203.0" width="11.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="870.8" y="1214.0"></text>
</g>
<g>
<title>Dependencies::find_unique_concrete_method(Klass*, Method*) (3 samples, 0.95%)</title><rect x="867.8" y="1187.0" width="11.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="870.8" y="1198.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::find_witness_anywhere(Klass*, bool, bool) (3 samples, 0.95%)</title><rect x="867.8" y="1171.0" width="11.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="870.8" y="1182.0"></text>
</g>
<g>
<title>ClassHierarchyWalker::is_witness(Klass*) (2 samples, 0.63%)</title><rect x="871.6" y="1155.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="874.6" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::find_instance_method(Symbol const*, Symbol const*, Klass::PrivateLookupMode) const (2 samples, 0.63%)</title><rect x="871.6" y="1139.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="874.6" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) (2 samples, 0.63%)</title><rect x="871.6" y="1123.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="874.6" y="1134.0"></text>
</g>
<g>
<title>binary_search(Array&lt;Method*&gt; const*, Symbol const*) (2 samples, 0.63%)</title><rect x="871.6" y="1107.0" width="7.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="874.6" y="1118.0"></text>
</g>
<g>
<title>ciBytecodeStream::reset_to_method(ciMethod*) (1 samples, 0.32%)</title><rect x="879.1" y="1219.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="882.1" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::setup_start_block(int, BlockBegin*, BlockBegin*, ValueStack*) (1 samples, 0.32%)</title><rect x="882.8" y="1251.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="885.8" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::set_end(BlockEnd*) (1 samples, 0.32%)</title><rect x="882.8" y="1235.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="885.8" y="1246.0"></text>
</g>
<g>
<title>GrowableArray&lt;BlockBegin*&gt;::append(BlockBegin* const&amp;) (1 samples, 0.32%)</title><rect x="882.8" y="1219.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="885.8" y="1230.0"></text>
</g>
<g>
<title>PhiSimplifier::PhiSimplifier(BlockBegin*) (1 samples, 0.32%)</title><rect x="886.6" y="1251.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="889.6" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1235.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="889.6" y="1246.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1219.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="889.6" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1203.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="889.6" y="1214.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1187.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="889.6" y="1198.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1171.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="889.6" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1155.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="889.6" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1139.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="889.6" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1123.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="889.6" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1107.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="889.6" y="1118.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1091.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="889.6" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1075.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="889.6" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1059.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="889.6" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1043.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="889.6" y="1054.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1027.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="889.6" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="1011.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="889.6" y="1022.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="995.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="889.6" y="1006.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="979.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="889.6" y="990.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="963.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="889.6" y="974.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="947.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="889.6" y="958.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="931.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="889.6" y="942.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="915.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="889.6" y="926.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="899.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="889.6" y="910.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="883.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="889.6" y="894.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="867.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="889.6" y="878.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="886.6" y="851.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="889.6" y="862.0"></text>
</g>
<g>
<title>PhiSimplifier::block_do(BlockBegin*) (1 samples, 0.32%)</title><rect x="886.6" y="835.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="889.6" y="846.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (1 samples, 0.32%)</title><rect x="890.3" y="1299.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="893.3" y="1310.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (1 samples, 0.32%)</title><rect x="890.3" y="1283.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="893.3" y="1294.0"></text>
</g>
<g>
<title>NullCheckEliminator::NullCheckEliminator(Optimizer*) (1 samples, 0.32%)</title><rect x="890.3" y="1267.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="893.3" y="1278.0"></text>
</g>
<g>
<title>GrowableArray&lt;ValueSet*&gt;::GrowableArray(int, int, ValueSet* const&amp;, bool, MemoryType) (1 samples, 0.32%)</title><rect x="890.3" y="1251.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="893.3" y="1262.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="890.3" y="1235.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="893.3" y="1246.0"></text>
</g>
<g>
<title>IR::optimize_blocks() (1 samples, 0.32%)</title><rect x="894.1" y="1299.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="897.1" y="1310.0"></text>
</g>
<g>
<title>Optimizer::eliminate_conditional_expressions() (1 samples, 0.32%)</title><rect x="894.1" y="1283.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="897.1" y="1294.0"></text>
</g>
<g>
<title>CE_Eliminator::CE_Eliminator(IR*) (1 samples, 0.32%)</title><rect x="894.1" y="1267.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="897.1" y="1278.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1251.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="897.1" y="1262.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1235.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="897.1" y="1246.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1219.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="897.1" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1203.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="897.1" y="1214.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1187.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="897.1" y="1198.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1171.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="897.1" y="1182.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1155.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="897.1" y="1166.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1139.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="897.1" y="1150.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1123.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="897.1" y="1134.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1107.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="897.1" y="1118.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1091.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="897.1" y="1102.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1075.0" width="3.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="897.1" y="1086.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1059.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="897.1" y="1070.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1043.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="897.1" y="1054.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1027.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="897.1" y="1038.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="1011.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="897.1" y="1022.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="995.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="897.1" y="1006.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="979.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="897.1" y="990.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="963.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="897.1" y="974.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="947.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="897.1" y="958.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="931.0" width="3.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="897.1" y="942.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="915.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="897.1" y="926.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="899.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="897.1" y="910.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="883.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="897.1" y="894.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="867.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="897.1" y="878.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="851.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="897.1" y="862.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="835.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="897.1" y="846.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="819.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="897.1" y="830.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="803.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="897.1" y="814.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.32%)</title><rect x="894.1" y="787.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="897.1" y="798.0"></text>
</g>
<g>
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.32%)</title><rect x="894.1" y="771.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="897.1" y="782.0"></text>
</g>
<g>
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.32%)</title><rect x="894.1" y="755.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="897.1" y="766.0"></text>
</g>
<g>
<title>ValueStack::apply(GrowableArray&lt;Instruction*&gt;, ValueVisitor*) (1 samples, 0.32%)</title><rect x="894.1" y="739.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="897.1" y="750.0"></text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 0.32%)</title><rect x="897.8" y="1299.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="900.8" y="1310.0"></text>
</g>
<g>
<title>CriticalEdgeFinder::split_edges() (1 samples, 0.32%)</title><rect x="897.8" y="1283.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="900.8" y="1294.0"></text>
</g>
<g>
<title>BlockBegin::insert_block_between(BlockBegin*) (1 samples, 0.32%)</title><rect x="897.8" y="1267.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="900.8" y="1278.0"></text>
</g>
<g>
<title>BlockBegin::remove_predecessor(BlockBegin*) (1 samples, 0.32%)</title><rect x="897.8" y="1251.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="900.8" y="1262.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (11 samples, 3.49%)</title><rect x="901.6" y="1315.0" width="41.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="904.6" y="1326.0">Com..</text>
</g>
<g>
<title>Compilation::emit_code_epilog(LIR_Assembler*) (4 samples, 1.27%)</title><rect x="901.6" y="1299.0" width="14.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="904.6" y="1310.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_stubs(CodeStubList*) (4 samples, 1.27%)</title><rect x="901.6" y="1283.0" width="14.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="904.6" y="1294.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.32%)</title><rect x="901.6" y="1267.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="904.6" y="1278.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.32%)</title><rect x="901.6" y="1251.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="904.6" y="1262.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.32%)</title><rect x="901.6" y="1235.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="904.6" y="1246.0"></text>
</g>
<g>
<title>IRScopeDebugInfo::record_debug_info(DebugInformationRecorder*, int, bool, bool) (1 samples, 0.32%)</title><rect x="901.6" y="1219.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="904.6" y="1230.0"></text>
</g>
<g>
<title>IRScopeDebugInfo::record_debug_info(DebugInformationRecorder*, int, bool, bool) (1 samples, 0.32%)</title><rect x="901.6" y="1203.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="904.6" y="1214.0"></text>
</g>
<g>
<title>IRScopeDebugInfo::record_debug_info(DebugInformationRecorder*, int, bool, bool) (1 samples, 0.32%)</title><rect x="901.6" y="1187.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="904.6" y="1198.0"></text>
</g>
<g>
<title>IRScopeDebugInfo::record_debug_info(DebugInformationRecorder*, int, bool, bool) (1 samples, 0.32%)</title><rect x="901.6" y="1171.0" width="3.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="904.6" y="1182.0"></text>
</g>
<g>
<title>IRScopeDebugInfo::record_debug_info(DebugInformationRecorder*, int, bool, bool) (1 samples, 0.32%)</title><rect x="901.6" y="1155.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="904.6" y="1166.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.32%)</title><rect x="901.6" y="1139.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="904.6" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.32%)</title><rect x="901.6" y="1123.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="904.6" y="1134.0"></text>
</g>
<g>
<title>DIR_Chunk* GrowableArray&lt;DIR_Chunk*&gt;::insert_sorted&lt;&amp;(DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;))&gt;(DIR_Chunk* const&amp;) (1 samples, 0.32%)</title><rect x="901.6" y="1107.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="904.6" y="1118.0"></text>
</g>
<g>
<title>DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;) (1 samples, 0.32%)</title><rect x="901.6" y="1091.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="904.6" y="1102.0"></text>
</g>
<g>
<title>G1BarrierSetAssembler::gen_pre_barrier_stub(LIR_Assembler*, G1PreBarrierStub*) (1 samples, 0.32%)</title><rect x="905.3" y="1267.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="908.3" y="1278.0"></text>
</g>
<g>
<title>LIR_Assembler::store_parameter(RegisterImpl*, int) (1 samples, 0.32%)</title><rect x="905.3" y="1251.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="908.3" y="1262.0"></text>
</g>
<g>
<title>MacroAssembler::movptr(Address, RegisterImpl*) (1 samples, 0.32%)</title><rect x="905.3" y="1235.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="908.3" y="1246.0"></text>
</g>
<g>
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.32%)</title><rect x="905.3" y="1219.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="908.3" y="1230.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 0.32%)</title><rect x="905.3" y="1203.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="908.3" y="1214.0"></text>
</g>
<g>
<title>NewObjectArrayStub::emit_code(LIR_Assembler*) (1 samples, 0.32%)</title><rect x="909.0" y="1267.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="912.0" y="1278.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.32%)</title><rect x="909.0" y="1251.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="912.0" y="1262.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.32%)</title><rect x="909.0" y="1235.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="912.0" y="1246.0"></text>
</g>
<g>
<title>IRScopeDebugInfo::record_debug_info(DebugInformationRecorder*, int, bool, bool) (1 samples, 0.32%)</title><rect x="909.0" y="1219.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="912.0" y="1230.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.32%)</title><rect x="909.0" y="1203.0" width="3.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="912.0" y="1214.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.32%)</title><rect x="909.0" y="1187.0" width="3.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="912.0" y="1198.0"></text>
</g>
<g>
<title>DIR_Chunk* GrowableArray&lt;DIR_Chunk*&gt;::insert_sorted&lt;&amp;(DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;))&gt;(DIR_Chunk* const&amp;) (1 samples, 0.32%)</title><rect x="909.0" y="1171.0" width="3.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="912.0" y="1182.0"></text>
</g>
<g>
<title>int GrowableArray&lt;DIR_Chunk*&gt;::find_sorted&lt;DIR_Chunk*, &amp;(DIR_Chunk::compare(DIR_Chunk* const&amp;, DIR_Chunk* const&amp;))&gt;(DIR_Chunk* const&amp;, bool&amp;) (1 samples, 0.32%)</title><rect x="909.0" y="1155.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="912.0" y="1166.0"></text>
</g>
<g>
<title>PatchingStub::emit_code(LIR_Assembler*) (1 samples, 0.32%)</title><rect x="912.8" y="1267.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="915.8" y="1278.0"></text>
</g>
<g>
<title>Compilation::generate_exception_handler_table() (1 samples, 0.32%)</title><rect x="916.5" y="1299.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="919.5" y="1310.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (6 samples, 1.90%)</title><rect x="920.3" y="1299.0" width="22.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="923.3" y="1310.0">L..</text>
</g>
<g>
<title>LIR_Assembler::emit_block(BlockBegin*) (1 samples, 0.32%)</title><rect x="920.3" y="1283.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="923.3" y="1294.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_lir_list(LIR_List*) (4 samples, 1.27%)</title><rect x="924.0" y="1283.0" width="15.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="927.0" y="1294.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_op0(LIR_Op0*) (1 samples, 0.32%)</title><rect x="924.0" y="1267.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="927.0" y="1278.0"></text>
</g>
<g>
<title>LIR_Assembler::check_icache() (1 samples, 0.32%)</title><rect x="924.0" y="1251.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="927.0" y="1262.0"></text>
</g>
<g>
<title>MacroAssembler::jump_cc(Assembler::Condition, AddressLiteral) (1 samples, 0.32%)</title><rect x="924.0" y="1235.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="927.0" y="1246.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (1 samples, 0.32%)</title><rect x="927.8" y="1267.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="930.8" y="1278.0"></text>
</g>
<g>
<title>LIR_Assembler::type_profile_helper(RegisterImpl*, ciMethodData*, ProfileData*, RegisterImpl*, Label*) (1 samples, 0.32%)</title><rect x="927.8" y="1251.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="930.8" y="1262.0"></text>
</g>
<g>
<title>MacroAssembler::movptr(Address, RegisterImpl*) (1 samples, 0.32%)</title><rect x="927.8" y="1235.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="930.8" y="1246.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (2 samples, 0.63%)</title><rect x="931.5" y="1267.0" width="7.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="934.5" y="1278.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (2 samples, 0.63%)</title><rect x="931.5" y="1251.0" width="7.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="934.5" y="1262.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.63%)</title><rect x="931.5" y="1235.0" width="7.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="934.5" y="1246.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.63%)</title><rect x="931.5" y="1219.0" width="7.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="934.5" y="1230.0"></text>
</g>
<g>
<title>DIR_Chunk::DIR_Chunk(int, int, DebugInformationRecorder*) (1 samples, 0.32%)</title><rect x="935.3" y="1203.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="938.3" y="1214.0"></text>
</g>
<g>
<title>LIR_Assembler::membar_release() (1 samples, 0.32%)</title><rect x="939.0" y="1283.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="942.0" y="1294.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (26 samples, 8.25%)</title><rect x="942.8" y="1315.0" width="97.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="945.8" y="1326.0">Compilation..</text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (4 samples, 1.27%)</title><rect x="942.8" y="1299.0" width="14.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="945.8" y="1310.0"></text>
</g>
<g>
<title>LIRGenerator::block_do(BlockBegin*) (4 samples, 1.27%)</title><rect x="942.8" y="1283.0" width="14.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="945.8" y="1294.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.32%)</title><rect x="942.8" y="1267.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="945.8" y="1278.0"></text>
</g>
<g>
<title>GrowableArray&lt;Instruction*&gt;::raw_at_put_grow(int, Instruction* const&amp;, Instruction* const&amp;) (1 samples, 0.32%)</title><rect x="942.8" y="1251.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="945.8" y="1262.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.32%)</title><rect x="946.5" y="1267.0" width="3.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="949.5" y="1278.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.32%)</title><rect x="946.5" y="1251.0" width="3.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="949.5" y="1262.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 0.32%)</title><rect x="946.5" y="1235.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="949.5" y="1246.0"></text>
</g>
<g>
<title>GrowableArray&lt;ResolveNode*&gt;::raw_at_put_grow(int, ResolveNode* const&amp;, ResolveNode* const&amp;) (1 samples, 0.32%)</title><rect x="946.5" y="1219.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="949.5" y="1230.0"></text>
</g>
<g>
<title>LIRGenerator::do_If(If*) (2 samples, 0.63%)</title><rect x="950.3" y="1267.0" width="7.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="953.3" y="1278.0"></text>
</g>
<g>
<title>Constant::visit(InstructionVisitor*) (1 samples, 0.32%)</title><rect x="950.3" y="1251.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="953.3" y="1262.0"></text>
</g>
<g>
<title>LIR_List::cmp(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, CodeEmitInfo*) (1 samples, 0.32%)</title><rect x="954.0" y="1251.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="957.0" y="1262.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="954.0" y="1235.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="957.0" y="1246.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::optimize(BlockList*) (1 samples, 0.32%)</title><rect x="957.7" y="1299.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="960.7" y="1310.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::delete_empty_blocks(BlockList*) (1 samples, 0.32%)</title><rect x="957.7" y="1283.0" width="3.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="960.7" y="1294.0"></text>
</g>
<g>
<title>ControlFlowOptimizer::substitute_branch_target(BlockBegin*, BlockBegin*, BlockBegin*) (1 samples, 0.32%)</title><rect x="957.7" y="1267.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="960.7" y="1278.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (21 samples, 6.67%)</title><rect x="961.5" y="1299.0" width="78.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="964.5" y="1310.0">LinearSca..</text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.32%)</title><rect x="961.5" y="1283.0" width="3.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="964.5" y="1294.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (7 samples, 2.22%)</title><rect x="965.2" y="1283.0" width="26.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="968.2" y="1294.0">L..</text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (7 samples, 2.22%)</title><rect x="965.2" y="1267.0" width="26.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="968.2" y="1278.0">I..</text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) (3 samples, 0.95%)</title><rect x="965.2" y="1251.0" width="11.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="968.2" y="1262.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (4 samples, 1.27%)</title><rect x="976.5" y="1251.0" width="15.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="979.5" y="1262.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.63%)</title><rect x="976.5" y="1235.0" width="7.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="979.5" y="1246.0"></text>
</g>
<g>
<title>LinearScanWalker::find_free_reg(int, int, int, int, bool*) (1 samples, 0.32%)</title><rect x="980.2" y="1219.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="983.2" y="1230.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_locked_reg(Interval*) (1 samples, 0.32%)</title><rect x="984.0" y="1235.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="987.0" y="1246.0"></text>
</g>
<g>
<title>LinearScanWalker::spill_block_inactive_fixed(Interval*) (1 samples, 0.32%)</title><rect x="984.0" y="1219.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="987.0" y="1230.0"></text>
</g>
<g>
<title>LinearScanWalker::insert_move(int, Interval*, Interval*) (1 samples, 0.32%)</title><rect x="987.7" y="1235.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="990.7" y="1246.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (5 samples, 1.59%)</title><rect x="991.5" y="1283.0" width="18.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="994.5" y="1294.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (5 samples, 1.59%)</title><rect x="991.5" y="1267.0" width="18.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="994.5" y="1278.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.32%)</title><rect x="995.2" y="1251.0" width="3.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="998.2" y="1262.0"></text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="995.2" y="1235.0" width="3.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="998.2" y="1246.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (3 samples, 0.95%)</title><rect x="999.0" y="1251.0" width="11.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.0" y="1262.0"></text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (3 samples, 0.95%)</title><rect x="999.0" y="1235.0" width="11.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1002.0" y="1246.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.32%)</title><rect x="999.0" y="1219.0" width="3.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1002.0" y="1230.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(IntervalState, int) (1 samples, 0.32%)</title><rect x="999.0" y="1203.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.0" y="1214.0"></text>
</g>
<g>
<title>LinearScan::vm_reg_for_interval(Interval*) (1 samples, 0.32%)</title><rect x="1002.7" y="1219.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1005.7" y="1230.0"></text>
</g>
<g>
<title>OopMap::set_oop(VMRegImpl*) (1 samples, 0.32%)</title><rect x="1006.4" y="1219.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1009.4" y="1230.0"></text>
</g>
<g>
<title>OopMapValue::write_on(CompressedWriteStream*) (1 samples, 0.32%)</title><rect x="1006.4" y="1203.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1009.4" y="1214.0"></text>
</g>
<g>
<title>CompressedWriteStream::write_int_mb(int) (1 samples, 0.32%)</title><rect x="1006.4" y="1187.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1009.4" y="1198.0"></text>
</g>
<g>
<title>CompressedWriteStream::write(unsigned char) (1 samples, 0.32%)</title><rect x="1006.4" y="1171.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1009.4" y="1182.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (3 samples, 0.95%)</title><rect x="1010.2" y="1283.0" width="11.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1013.2" y="1294.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.32%)</title><rect x="1013.9" y="1267.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1016.9" y="1278.0"></text>
</g>
<g>
<title>LinearScan::add_use(int, int, int, IntervalUseKind, BasicType) (1 samples, 0.32%)</title><rect x="1017.7" y="1267.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1020.7" y="1278.0"></text>
</g>
<g>
<title>LinearScan::compute_local_live_sets() (1 samples, 0.32%)</title><rect x="1021.4" y="1283.0" width="3.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1024.4" y="1294.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long, bool) (1 samples, 0.32%)</title><rect x="1021.4" y="1267.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1024.4" y="1278.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.32%)</title><rect x="1021.4" y="1251.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1024.4" y="1262.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (3 samples, 0.95%)</title><rect x="1025.2" y="1283.0" width="11.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1028.2" y="1294.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (1 samples, 0.32%)</title><rect x="1025.2" y="1267.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1028.2" y="1278.0"></text>
</g>
<g>
<title>LinearScan::split_child_at_op_id(Interval*, int, LIR_OpVisitState::OprMode) (1 samples, 0.32%)</title><rect x="1025.2" y="1251.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1028.2" y="1262.0"></text>
</g>
<g>
<title>MoveResolver::resolve_and_append_moves() (2 samples, 0.63%)</title><rect x="1028.9" y="1267.0" width="7.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1031.9" y="1278.0"></text>
</g>
<g>
<title>LIR_List::append(LIR_InsertionBuffer*) (2 samples, 0.63%)</title><rect x="1028.9" y="1251.0" width="7.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1031.9" y="1262.0"></text>
</g>
<g>
<title>GrowableArray&lt;LIR_Op*&gt;::at_grow(int, LIR_Op* const&amp;) (1 samples, 0.32%)</title><rect x="1032.7" y="1235.0" width="3.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1035.7" y="1246.0"></text>
</g>
<g>
<title>GrowableArray&lt;LIR_Op*&gt;::grow(int) (1 samples, 0.32%)</title><rect x="1032.7" y="1219.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1035.7" y="1230.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.32%)</title><rect x="1032.7" y="1203.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1035.7" y="1214.0"></text>
</g>
<g>
<title>LinearScan::resolve_exception_handlers() (1 samples, 0.32%)</title><rect x="1036.4" y="1283.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1039.4" y="1294.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.32%)</title><rect x="1036.4" y="1267.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1039.4" y="1278.0"></text>
</g>
<g>
<title>LIR_OpVisitState::append(LIR_OprDesc*&amp;, LIR_OpVisitState::OprMode) (1 samples, 0.32%)</title><rect x="1036.4" y="1251.0" width="3.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1039.4" y="1262.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.32%)</title><rect x="1040.2" y="1315.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1043.2" y="1326.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) (1 samples, 0.32%)</title><rect x="1040.2" y="1299.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1043.2" y="1310.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (7 samples, 2.22%)</title><rect x="1043.9" y="1331.0" width="26.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1046.9" y="1342.0">C..</text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (7 samples, 2.22%)</title><rect x="1043.9" y="1315.0" width="26.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.9" y="1326.0">c..</text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (4 samples, 1.27%)</title><rect x="1043.9" y="1299.0" width="15.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1046.9" y="1310.0"></text>
</g>
<g>
<title>DebugInformationRecorder::last_pc() (1 samples, 0.32%)</title><rect x="1043.9" y="1283.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.9" y="1294.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (3 samples, 0.95%)</title><rect x="1047.7" y="1283.0" width="11.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1050.7" y="1294.0"></text>
</g>
<g>
<title>CodeBlobLayout::CodeBlobLayout(unsigned char*, int, int, CodeBuffer const*) (1 samples, 0.32%)</title><rect x="1047.7" y="1267.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.7" y="1278.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.32%)</title><rect x="1051.4" y="1267.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1054.4" y="1278.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.32%)</title><rect x="1051.4" y="1251.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1054.4" y="1262.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (1 samples, 0.32%)</title><rect x="1051.4" y="1235.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1054.4" y="1246.0"></text>
</g>
<g>
<title>ImmutableOopMapBuilder::build() (1 samples, 0.32%)</title><rect x="1051.4" y="1219.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1054.4" y="1230.0"></text>
</g>
<g>
<title>ImmutableOopMapBuilder::fill(ImmutableOopMapSet*, int) (1 samples, 0.32%)</title><rect x="1051.4" y="1203.0" width="3.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1054.4" y="1214.0"></text>
</g>
<g>
<title>_platform_memmove$VARIANT$Haswell (1 samples, 0.32%)</title><rect x="1051.4" y="1187.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1054.4" y="1198.0"></text>
</g>
<g>
<title>DebugInformationRecorder::copy_to(nmethod*) (1 samples, 0.32%)</title><rect x="1055.1" y="1267.0" width="3.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1058.1" y="1278.0"></text>
</g>
<g>
<title>nmethod::post_compiled_method_load_event() (3 samples, 0.95%)</title><rect x="1058.9" y="1299.0" width="11.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1061.9" y="1310.0"></text>
</g>
<g>
<title>__psynch_cvsignal (3 samples, 0.95%)</title><rect x="1058.9" y="1283.0" width="11.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1061.9" y="1294.0"></text>
</g>
<g>
<title>JVMCICompiler::compile_method(methodHandle const&amp;, int, JVMCIEnv*) (4 samples, 1.27%)</title><rect x="1070.1" y="1379.0" width="15.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1073.1" y="1390.0"></text>
</g>
<g>
<title>JVMCIRuntime::initialize_well_known_classes(Thread*) (2 samples, 0.63%)</title><rect x="1070.1" y="1363.0" width="7.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1073.1" y="1374.0"></text>
</g>
<g>
<title>SystemDictionary::initialize_wk_klasses_until(SystemDictionary::WKID, SystemDictionary::WKID&amp;, Thread*) (2 samples, 0.63%)</title><rect x="1070.1" y="1347.0" width="7.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1073.1" y="1358.0"></text>
</g>
<g>
<title>SystemDictionary::initialize_wk_klass(SystemDictionary::WKID, int, Thread*) (2 samples, 0.63%)</title><rect x="1070.1" y="1331.0" width="7.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1073.1" y="1342.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (2 samples, 0.63%)</title><rect x="1070.1" y="1315.0" width="7.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1073.1" y="1326.0"></text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (2 samples, 0.63%)</title><rect x="1070.1" y="1299.0" width="7.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1073.1" y="1310.0"></text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (2 samples, 0.63%)</title><rect x="1070.1" y="1283.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1073.1" y="1294.0"></text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (2 samples, 0.63%)</title><rect x="1070.1" y="1267.0" width="7.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1073.1" y="1278.0"></text>
</g>
<g>
<title>ClassPathImageEntry::open_stream(char const*, Thread*) (2 samples, 0.63%)</title><rect x="1070.1" y="1251.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1073.1" y="1262.0"></text>
</g>
<g>
<title>JIMAGE_GetResource (2 samples, 0.63%)</title><rect x="1070.1" y="1235.0" width="7.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1073.1" y="1246.0"></text>
</g>
<g>
<title>rcmd_af.canonnamebuf (2 samples, 0.63%)</title><rect x="1070.1" y="1219.0" width="7.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1073.1" y="1230.0"></text>
</g>
<g>
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (2 samples, 0.63%)</title><rect x="1077.6" y="1363.0" width="7.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1080.6" y="1374.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.63%)</title><rect x="1077.6" y="1347.0" width="7.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1080.6" y="1358.0"></text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 0.32%)</title><rect x="1085.1" y="1379.0" width="3.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1088.1" y="1390.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.32%)</title><rect x="1088.9" y="1379.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1091.9" y="1390.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (1 samples, 0.32%)</title><rect x="1088.9" y="1363.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1091.9" y="1374.0"></text>
</g>
<g>
<title>GrowableArray&lt;ciMetadata*&gt;::appendAll(GrowableArray&lt;ciMetadata*&gt; const*) (1 samples, 0.32%)</title><rect x="1088.9" y="1347.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1091.9" y="1358.0"></text>
</g>
<g>
<title>GrowableArray&lt;ciMetadata*&gt;::raw_at_put_grow(int, ciMetadata* const&amp;, ciMetadata* const&amp;) (1 samples, 0.32%)</title><rect x="1088.9" y="1331.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1091.9" y="1342.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.32%)</title><rect x="1092.6" y="1379.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.6" y="1390.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.32%)</title><rect x="1092.6" y="1363.0" width="3.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1095.6" y="1374.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.32%)</title><rect x="1092.6" y="1347.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1095.6" y="1358.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.32%)</title><rect x="1092.6" y="1331.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1095.6" y="1342.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.32%)</title><rect x="1092.6" y="1315.0" width="3.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1095.6" y="1326.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.32%)</title><rect x="1092.6" y="1299.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1095.6" y="1310.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.32%)</title><rect x="1096.3" y="1395.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1099.3" y="1406.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.32%)</title><rect x="1096.3" y="1379.0" width="3.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1099.3" y="1390.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.32%)</title><rect x="1096.3" y="1363.0" width="3.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1099.3" y="1374.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.32%)</title><rect x="1096.3" y="1347.0" width="3.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1099.3" y="1358.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.32%)</title><rect x="1096.3" y="1331.0" width="3.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1099.3" y="1342.0"></text>
</g>
<g>
<title>CompileTask::free(CompileTask*) (1 samples, 0.32%)</title><rect x="1100.1" y="1395.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1103.1" y="1406.0"></text>
</g>
<g>
<title>GCNotifier::has_event() (1 samples, 0.32%)</title><rect x="1103.8" y="1411.0" width="3.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1106.8" y="1422.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (3 samples, 0.95%)</title><rect x="1107.6" y="1411.0" width="11.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1110.6" y="1422.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (2 samples, 0.63%)</title><rect x="1107.6" y="1395.0" width="7.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.6" y="1406.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.63%)</title><rect x="1107.6" y="1379.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1110.6" y="1390.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.63%)</title><rect x="1107.6" y="1363.0" width="7.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1110.6" y="1374.0"></text>
</g>
<g>
<title>__psynch_cvwait (2 samples, 0.63%)</title><rect x="1107.6" y="1347.0" width="7.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1110.6" y="1358.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.32%)</title><rect x="1115.1" y="1395.0" width="3.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.1" y="1406.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.32%)</title><rect x="1115.1" y="1379.0" width="3.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.1" y="1390.0"></text>
</g>
<g>
<title>CodeBlobIterator&lt;CompiledMethod, CompiledMethodFilter&gt;::next() (1 samples, 0.32%)</title><rect x="1115.1" y="1363.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1118.1" y="1374.0"></text>
</g>
<g>
<title>CodeBlobIterator&lt;CompiledMethod, CompiledMethodFilter&gt;::next_blob() (1 samples, 0.32%)</title><rect x="1115.1" y="1347.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1118.1" y="1358.0"></text>
</g>
<g>
<title>CodeHeap::next_used(HeapBlock*) const (1 samples, 0.32%)</title><rect x="1115.1" y="1331.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1118.1" y="1342.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (8 samples, 2.54%)</title><rect x="1118.8" y="1411.0" width="30.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1121.8" y="1422.0">Se..</text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (6 samples, 1.90%)</title><rect x="1118.8" y="1395.0" width="22.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1121.8" y="1406.0">J..</text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (6 samples, 1.90%)</title><rect x="1118.8" y="1379.0" width="22.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1121.8" y="1390.0">J..</text>
</g>
<g>
<title>Chunk::next_chop() (1 samples, 0.32%)</title><rect x="1118.8" y="1363.0" width="3.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1121.8" y="1374.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (5 samples, 1.59%)</title><rect x="1122.6" y="1363.0" width="18.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1125.6" y="1374.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (4 samples, 1.27%)</title><rect x="1122.6" y="1347.0" width="15.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1125.6" y="1358.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (1 samples, 0.32%)</title><rect x="1122.6" y="1331.0" width="3.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1125.6" y="1342.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.63%)</title><rect x="1126.3" y="1331.0" width="7.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1129.3" y="1342.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.32%)</title><rect x="1133.8" y="1331.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.8" y="1342.0"></text>
</g>
<g>
<title>CompressedReadStream::read_int() (1 samples, 0.32%)</title><rect x="1133.8" y="1315.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.8" y="1326.0"></text>
</g>
<g>
<title>Method::jmethod_id() (1 samples, 0.32%)</title><rect x="1137.6" y="1347.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.6" y="1358.0"></text>
</g>
<g>
<title>InstanceKlass::get_jmethod_id(methodHandle const&amp;) (1 samples, 0.32%)</title><rect x="1137.6" y="1331.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1140.6" y="1342.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.32%)</title><rect x="1141.3" y="1395.0" width="3.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.3" y="1406.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.32%)</title><rect x="1145.0" y="1395.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.0" y="1406.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.32%)</title><rect x="1145.0" y="1379.0" width="3.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.0" y="1390.0"></text>
</g>
<g>
<title>ParkCommon(ParkEvent*, long) (1 samples, 0.32%)</title><rect x="1145.0" y="1363.0" width="3.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1148.0" y="1374.0"></text>
</g>
<g>
<title>os::PlatformEvent::park() (1 samples, 0.32%)</title><rect x="1145.0" y="1347.0" width="3.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.0" y="1358.0"></text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 0.32%)</title><rect x="1145.0" y="1331.0" width="3.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1148.0" y="1342.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 1.59%)</title><rect x="1148.8" y="1427.0" width="18.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.8" y="1438.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 1.59%)</title><rect x="1148.8" y="1411.0" width="18.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.8" y="1422.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 1.59%)</title><rect x="1148.8" y="1395.0" width="18.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.8" y="1406.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 1.59%)</title><rect x="1148.8" y="1379.0" width="18.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.8" y="1390.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (5 samples, 1.59%)</title><rect x="1148.8" y="1363.0" width="18.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1151.8" y="1374.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 1.59%)</title><rect x="1148.8" y="1347.0" width="18.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1151.8" y="1358.0"></text>
</g>
<g>
<title>WatcherThread::run() (6 samples, 1.90%)</title><rect x="1167.5" y="1427.0" width="22.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.5" y="1438.0">W..</text>
</g>
<g>
<title>VMError::is_error_reported() (1 samples, 0.32%)</title><rect x="1167.5" y="1411.0" width="3.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.5" y="1422.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (5 samples, 1.59%)</title><rect x="1171.3" y="1411.0" width="18.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.3" y="1422.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (5 samples, 1.59%)</title><rect x="1171.3" y="1395.0" width="18.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1174.3" y="1406.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (5 samples, 1.59%)</title><rect x="1171.3" y="1379.0" width="18.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.3" y="1390.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (5 samples, 1.59%)</title><rect x="1171.3" y="1363.0" width="18.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.3" y="1374.0"></text>
</g>
<g>
<title>__psynch_cvwait (5 samples, 1.59%)</title><rect x="1171.3" y="1347.0" width="18.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1174.3" y="1358.0"></text>
</g>
</g>
</svg>
