<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1077"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1077"> </text>
<g id="frames">
<g>
<title>all (15 samples, 100.00%)</title><rect x="10.0" y="1043.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1054.0">all</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 6.67%)</title><rect x="10.0" y="1027.0" width="78.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="1038.0">[unknown_..</text>
</g>
<g>
<title>Interpreter (1 samples, 6.67%)</title><rect x="10.0" y="1011.0" width="78.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="1022.0">Interpreter</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 26.67%)</title><rect x="88.7" y="1027.0" width="314.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.7" y="1038.0">java/lang/invoke/DirectMethodHandle$Holder..</text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 13.33%)</title><rect x="88.7" y="1011.0" width="157.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.7" y="1022.0">java/lang/String.val..</text>
</g>
<g>
<title>java/util/Date.toString (2 samples, 13.33%)</title><rect x="88.7" y="995.0" width="157.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.7" y="1006.0">java/util/Date.toStr..</text>
</g>
<g>
<title>java/util/TimeZone.getDisplayName (2 samples, 13.33%)</title><rect x="88.7" y="979.0" width="157.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="990.0">java/util/TimeZone.g..</text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility.retrieveDisplayName (2 samples, 13.33%)</title><rect x="88.7" y="963.0" width="157.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.7" y="974.0">sun/util/locale/prov..</text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility.retrieveDisplayNamesImpl (2 samples, 13.33%)</title><rect x="88.7" y="947.0" width="157.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.7" y="958.0">sun/util/locale/prov..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.getLocalizedObject (2 samples, 13.33%)</title><rect x="88.7" y="931.0" width="157.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.7" y="942.0">sun/util/locale/prov..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.getLocalizedObjectImpl (2 samples, 13.33%)</title><rect x="88.7" y="915.0" width="157.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.7" y="926.0">sun/util/locale/prov..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleServiceProviderPool.findProviders (1 samples, 6.67%)</title><rect x="88.7" y="899.0" width="78.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.7" y="910.0">sun/util/..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleProviderAdapter.forType (1 samples, 6.67%)</title><rect x="88.7" y="883.0" width="78.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.7" y="894.0">sun/util/..</text>
</g>
<g>
<title>java/lang/Class.newInstance (1 samples, 6.67%)</title><rect x="88.7" y="867.0" width="78.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="878.0">java/lang..</text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 6.67%)</title><rect x="88.7" y="851.0" width="78.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="862.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 6.67%)</title><rect x="88.7" y="835.0" width="78.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.7" y="846.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 6.67%)</title><rect x="88.7" y="819.0" width="78.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.7" y="830.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/reflect/NativeConstructorAccessorImpl.newInstance0 (1 samples, 6.67%)</title><rect x="88.7" y="803.0" width="78.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="91.7" y="814.0">jdk/inter..</text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter.&lt;init&gt; (1 samples, 6.67%)</title><rect x="88.7" y="787.0" width="78.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.7" y="798.0">sun/util/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 6.67%)</title><rect x="88.7" y="771.0" width="78.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.7" y="782.0">java/secu..</text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 6.67%)</title><rect x="88.7" y="755.0" width="78.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.7" y="766.0">sun/util/..</text>
</g>
<g>
<title>sun/util/cldr/CLDRLocaleProviderAdapter$1.run (1 samples, 6.67%)</title><rect x="88.7" y="739.0" width="78.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="91.7" y="750.0">sun/util/..</text>
</g>
<g>
<title>java/util/ServiceLoader$3.hasNext (1 samples, 6.67%)</title><rect x="88.7" y="723.0" width="78.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.7" y="734.0">java/util..</text>
</g>
<g>
<title>java/util/ServiceLoader$2.hasNext (1 samples, 6.67%)</title><rect x="88.7" y="707.0" width="78.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.7" y="718.0">java/util..</text>
</g>
<g>
<title>java/util/ServiceLoader$ModuleServicesLookupIterator.hasNext (1 samples, 6.67%)</title><rect x="88.7" y="691.0" width="78.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="91.7" y="702.0">java/util..</text>
</g>
<g>
<title>java/util/ServiceLoader.loadProvider (1 samples, 6.67%)</title><rect x="88.7" y="675.0" width="78.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.7" y="686.0">java/util..</text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 6.67%)</title><rect x="88.7" y="659.0" width="78.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.7" y="670.0">java/lang..</text>
</g>
<g>
<title>java/lang/ClassLoader.loadClass (1 samples, 6.67%)</title><rect x="88.7" y="643.0" width="78.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.7" y="654.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClass (1 samples, 6.67%)</title><rect x="88.7" y="627.0" width="78.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.7" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.findClassInModuleOrNull (1 samples, 6.67%)</title><rect x="88.7" y="611.0" width="78.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.7" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/loader/BuiltinClassLoader.defineClass (1 samples, 6.67%)</title><rect x="88.7" y="595.0" width="78.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="91.7" y="606.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.read (1 samples, 6.67%)</title><rect x="88.7" y="579.0" width="78.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemModuleReader.findImageLocation (1 samples, 6.67%)</title><rect x="88.7" y="563.0" width="78.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.7" y="574.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/module/SystemModuleFinders$SystemImage.&lt;clinit&gt; (1 samples, 6.67%)</title><rect x="88.7" y="547.0" width="78.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="558.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/jimage/ImageReaderFactory.&lt;clinit&gt; (1 samples, 6.67%)</title><rect x="88.7" y="531.0" width="78.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="542.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/file/Paths.get (1 samples, 6.67%)</title><rect x="88.7" y="515.0" width="78.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.7" y="526.0">java/nio/..</text>
</g>
<g>
<title>java/nio/file/Path.of (1 samples, 6.67%)</title><rect x="88.7" y="499.0" width="78.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.7" y="510.0">java/nio/..</text>
</g>
<g>
<title>java/nio/file/FileSystems.getDefault (1 samples, 6.67%)</title><rect x="88.7" y="483.0" width="78.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="494.0">java/nio/..</text>
</g>
<g>
<title>java/nio/file/FileSystems$DefaultFileSystemHolder.&lt;clinit&gt; (1 samples, 6.67%)</title><rect x="88.7" y="467.0" width="78.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.7" y="478.0">java/nio/..</text>
</g>
<g>
<title>java/nio/file/FileSystems$DefaultFileSystemHolder.defaultFileSystem (1 samples, 6.67%)</title><rect x="88.7" y="451.0" width="78.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="91.7" y="462.0">java/nio/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 6.67%)</title><rect x="88.7" y="435.0" width="78.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.7" y="446.0">java/secu..</text>
</g>
<g>
<title>java/nio/file/FileSystems$DefaultFileSystemHolder$1.run (1 samples, 6.67%)</title><rect x="88.7" y="419.0" width="78.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.7" y="430.0">java/nio/..</text>
</g>
<g>
<title>java/nio/file/FileSystems$DefaultFileSystemHolder$1.run (1 samples, 6.67%)</title><rect x="88.7" y="403.0" width="78.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="91.7" y="414.0">java/nio/..</text>
</g>
<g>
<title>java/nio/file/FileSystems$DefaultFileSystemHolder.getDefaultProvider (1 samples, 6.67%)</title><rect x="88.7" y="387.0" width="78.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="398.0">java/nio/..</text>
</g>
<g>
<title>sun/nio/fs/DefaultFileSystemProvider.&lt;clinit&gt; (1 samples, 6.67%)</title><rect x="88.7" y="371.0" width="78.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.7" y="382.0">sun/nio/f..</text>
</g>
<g>
<title>sun/nio/fs/MacOSXFileSystemProvider.&lt;init&gt; (1 samples, 6.67%)</title><rect x="88.7" y="355.0" width="78.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.7" y="366.0">sun/nio/f..</text>
</g>
<g>
<title>sun/nio/fs/BsdFileSystemProvider.&lt;init&gt; (1 samples, 6.67%)</title><rect x="88.7" y="339.0" width="78.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.7" y="350.0">sun/nio/f..</text>
</g>
<g>
<title>sun/nio/fs/UnixFileSystemProvider.&lt;init&gt; (1 samples, 6.67%)</title><rect x="88.7" y="323.0" width="78.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.7" y="334.0">sun/nio/f..</text>
</g>
<g>
<title>sun/nio/fs/MacOSXFileSystemProvider.newFileSystem (1 samples, 6.67%)</title><rect x="88.7" y="307.0" width="78.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.7" y="318.0">sun/nio/f..</text>
</g>
<g>
<title>sun/nio/fs/MacOSXFileSystemProvider.newFileSystem (1 samples, 6.67%)</title><rect x="88.7" y="291.0" width="78.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="91.7" y="302.0">sun/nio/f..</text>
</g>
<g>
<title>InterpreterRuntime::_new(JavaThread*, ConstantPool*, int) (1 samples, 6.67%)</title><rect x="88.7" y="275.0" width="78.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="91.7" y="286.0">Interpret..</text>
</g>
<g>
<title>ConstantPool::klass_at(int, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="259.0" width="78.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="91.7" y="270.0">ConstantP..</text>
</g>
<g>
<title>ConstantPool::klass_at_impl(constantPoolHandle const&amp;, int, bool, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="243.0" width="78.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="91.7" y="254.0">ConstantP..</text>
</g>
<g>
<title>SystemDictionary::resolve_or_fail(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="227.0" width="78.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="91.7" y="238.0">SystemDic..</text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="211.0" width="78.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="91.7" y="222.0">SystemDic..</text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="195.0" width="78.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="91.7" y="206.0">SystemDic..</text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="179.0" width="78.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="91.7" y="190.0">ClassLoad..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="163.0" width="78.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="91.7" y="174.0">KlassFact..</text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="147.0" width="78.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="91.7" y="158.0">ClassFile..</text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="131.0" width="78.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="91.7" y="142.0">ClassFile..</text>
</g>
<g>
<title>ClassFileParser::parse_methods(ClassFileStream const*, bool, AccessFlags*, bool*, bool*, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="115.0" width="78.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="91.7" y="126.0">ClassFile..</text>
</g>
<g>
<title>ClassFileParser::parse_method(ClassFileStream const*, bool, ConstantPool const*, AccessFlags*, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="99.0" width="78.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="91.7" y="110.0">ClassFile..</text>
</g>
<g>
<title>Method::allocate(ClassLoaderData*, int, AccessFlags, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="83.0" width="78.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="91.7" y="94.0">Method::a..</text>
</g>
<g>
<title>ConstMethod::allocate(ClassLoaderData*, int, InlineTableSizes*, ConstMethod::MethodType, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="67.0" width="78.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="91.7" y="78.0">ConstMeth..</text>
</g>
<g>
<title>Metaspace::allocate(ClassLoaderData*, unsigned long, MetaspaceObj::Type, Thread*) (1 samples, 6.67%)</title><rect x="88.7" y="51.0" width="78.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="91.7" y="62.0">Metaspace..</text>
</g>
<g>
<title>_platform_bzero$VARIANT$Haswell (1 samples, 6.67%)</title><rect x="88.7" y="35.0" width="78.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="91.7" y="46.0">_platform..</text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility$TimeZoneNameGetter.getObject (1 samples, 6.67%)</title><rect x="167.3" y="899.0" width="78.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.3" y="910.0">sun/util/..</text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility$TimeZoneNameGetter.getObject (1 samples, 6.67%)</title><rect x="167.3" y="883.0" width="78.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.3" y="894.0">sun/util/..</text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameUtility$TimeZoneNameGetter.getName (1 samples, 6.67%)</title><rect x="167.3" y="867.0" width="78.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.3" y="878.0">sun/util/..</text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameProviderImpl.getDisplayName (1 samples, 6.67%)</title><rect x="167.3" y="851.0" width="78.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.3" y="862.0">sun/util/..</text>
</g>
<g>
<title>sun/util/cldr/CLDRTimeZoneNameProviderImpl.getDisplayNameArray (1 samples, 6.67%)</title><rect x="167.3" y="835.0" width="78.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.3" y="846.0">sun/util/..</text>
</g>
<g>
<title>sun/util/locale/provider/TimeZoneNameProviderImpl.getDisplayNameArray (1 samples, 6.67%)</title><rect x="167.3" y="819.0" width="78.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.3" y="830.0">sun/util/..</text>
</g>
<g>
<title>sun/util/locale/provider/LocaleResources.getTimeZoneNames (1 samples, 6.67%)</title><rect x="167.3" y="803.0" width="78.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="170.3" y="814.0">sun/util/..</text>
</g>
<g>
<title>sun/util/resources/LocaleData.getTimeZoneNames (1 samples, 6.67%)</title><rect x="167.3" y="787.0" width="78.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.3" y="798.0">sun/util/..</text>
</g>
<g>
<title>sun/util/resources/LocaleData.getBundle (1 samples, 6.67%)</title><rect x="167.3" y="771.0" width="78.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="170.3" y="782.0">sun/util/..</text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 6.67%)</title><rect x="167.3" y="755.0" width="78.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.3" y="766.0">java/secu..</text>
</g>
<g>
<title>sun/util/resources/LocaleData$1.run (1 samples, 6.67%)</title><rect x="167.3" y="739.0" width="78.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.3" y="750.0">sun/util/..</text>
</g>
<g>
<title>sun/util/resources/LocaleData$1.run (1 samples, 6.67%)</title><rect x="167.3" y="723.0" width="78.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="170.3" y="734.0">sun/util/..</text>
</g>
<g>
<title>sun/util/resources/Bundles.of (1 samples, 6.67%)</title><rect x="167.3" y="707.0" width="78.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.3" y="718.0">sun/util/..</text>
</g>
<g>
<title>sun/util/resources/Bundles.loadBundleOf (1 samples, 6.67%)</title><rect x="167.3" y="691.0" width="78.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="170.3" y="702.0">sun/util/..</text>
</g>
<g>
<title>sun/util/resources/Bundles.findBundleOf (1 samples, 6.67%)</title><rect x="167.3" y="675.0" width="78.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.3" y="686.0">sun/util/..</text>
</g>
<g>
<title>sun/util/resources/Bundles.findBundleOf (1 samples, 6.67%)</title><rect x="167.3" y="659.0" width="78.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.3" y="670.0">sun/util/..</text>
</g>
<g>
<title>java/lang/Class.forName (1 samples, 6.67%)</title><rect x="167.3" y="643.0" width="78.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.3" y="654.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.loadClass (1 samples, 6.67%)</title><rect x="167.3" y="627.0" width="78.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="170.3" y="638.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/loader/BootLoader.loadClassOrNull (1 samples, 6.67%)</title><rect x="167.3" y="611.0" width="78.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.3" y="622.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/loader/ClassLoaders$BootClassLoader.loadClassOrNull (1 samples, 6.67%)</title><rect x="167.3" y="595.0" width="78.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.3" y="606.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/System$2.findBootstrapClassOrNull (1 samples, 6.67%)</title><rect x="167.3" y="579.0" width="78.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="170.3" y="590.0">java/lang..</text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClassOrNull (1 samples, 6.67%)</title><rect x="167.3" y="563.0" width="78.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.3" y="574.0">java/lang..</text>
</g>
<g>
<title>java/lang/ClassLoader.findBootstrapClass (1 samples, 6.67%)</title><rect x="167.3" y="547.0" width="78.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.3" y="558.0">java/lang..</text>
</g>
<g>
<title>Java_java_lang_ClassLoader_findBootstrapClass (1 samples, 6.67%)</title><rect x="167.3" y="531.0" width="78.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="170.3" y="542.0">Java_java..</text>
</g>
<g>
<title>JVM_FindClassFromBootLoader (1 samples, 6.67%)</title><rect x="167.3" y="515.0" width="78.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="170.3" y="526.0">JVM_FindC..</text>
</g>
<g>
<title>SystemDictionary::resolve_instance_class_or_null(Symbol*, Handle, Handle, Thread*) (1 samples, 6.67%)</title><rect x="167.3" y="499.0" width="78.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="170.3" y="510.0">SystemDic..</text>
</g>
<g>
<title>SystemDictionary::load_instance_class(Symbol*, Handle, Thread*) (1 samples, 6.67%)</title><rect x="167.3" y="483.0" width="78.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="170.3" y="494.0">SystemDic..</text>
</g>
<g>
<title>ClassLoader::load_class(Symbol*, bool, Thread*) (1 samples, 6.67%)</title><rect x="167.3" y="467.0" width="78.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="170.3" y="478.0">ClassLoad..</text>
</g>
<g>
<title>KlassFactory::create_from_stream(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 6.67%)</title><rect x="167.3" y="451.0" width="78.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="170.3" y="462.0">KlassFact..</text>
</g>
<g>
<title>ClassFileParser::ClassFileParser(ClassFileStream*, Symbol*, ClassLoaderData*, Handle, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, ClassFileParser::Publicity, Thread*) (1 samples, 6.67%)</title><rect x="167.3" y="435.0" width="78.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="170.3" y="446.0">ClassFile..</text>
</g>
<g>
<title>ClassFileParser::parse_stream(ClassFileStream const*, Thread*) (1 samples, 6.67%)</title><rect x="167.3" y="419.0" width="78.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="170.3" y="430.0">ClassFile..</text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 6.67%)</title><rect x="167.3" y="403.0" width="78.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="170.3" y="414.0">ClassFile..</text>
</g>
<g>
<title>ClassFileParser::parse_constant_pool_entries(ClassFileStream const*, ConstantPool*, int, Thread*) (1 samples, 6.67%)</title><rect x="167.3" y="387.0" width="78.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="170.3" y="398.0">ClassFile..</text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (2 samples, 13.33%)</title><rect x="246.0" y="1011.0" width="157.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.0" y="1022.0">java/lang/invoke/Str..</text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (2 samples, 13.33%)</title><rect x="246.0" y="995.0" width="157.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.0" y="1006.0">java/lang/invoke/Str..</text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (2 samples, 13.33%)</title><rect x="246.0" y="979.0" width="157.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="990.0">java/lang/invoke/Str..</text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (2 samples, 13.33%)</title><rect x="246.0" y="963.0" width="157.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.0" y="974.0">java/lang/invoke/Str..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.filterArguments (1 samples, 6.67%)</title><rect x="246.0" y="947.0" width="78.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="249.0" y="958.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.filterArgument (1 samples, 6.67%)</title><rect x="246.0" y="931.0" width="78.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.0" y="942.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.filterArgumentForm (1 samples, 6.67%)</title><rect x="246.0" y="915.0" width="78.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="249.0" y="926.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (1 samples, 6.67%)</title><rect x="246.0" y="899.0" width="78.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="249.0" y="910.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.newSpeciesData (1 samples, 6.67%)</title><rect x="246.0" y="883.0" width="78.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.0" y="894.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.extendWith (1 samples, 6.67%)</title><rect x="246.0" y="867.0" width="78.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.0" y="878.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer.findSpecies (1 samples, 6.67%)</title><rect x="246.0" y="851.0" width="78.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="249.0" y="862.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.loadSpecies (1 samples, 6.67%)</title><rect x="246.0" y="835.0" width="78.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.0" y="846.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.linkSpeciesDataToCode (1 samples, 6.67%)</title><rect x="246.0" y="819.0" width="78.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="249.0" y="830.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findFactories (1 samples, 6.67%)</title><rect x="246.0" y="803.0" width="78.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="249.0" y="814.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findFactory (1 samples, 6.67%)</title><rect x="246.0" y="787.0" width="78.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.0" y="798.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findStatic (1 samples, 6.67%)</title><rect x="246.0" y="771.0" width="78.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="249.0" y="782.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethod (1 samples, 6.67%)</title><rect x="246.0" y="755.0" width="78.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.0" y="766.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.getDirectMethodCommon (1 samples, 6.67%)</title><rect x="246.0" y="739.0" width="78.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="249.0" y="750.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.make (1 samples, 6.67%)</title><rect x="246.0" y="723.0" width="78.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.0" y="734.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 6.67%)</title><rect x="246.0" y="707.0" width="78.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.0" y="718.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 6.67%)</title><rect x="246.0" y="691.0" width="78.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.0" y="702.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.preparedLambdaForm (1 samples, 6.67%)</title><rect x="246.0" y="675.0" width="78.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.0" y="686.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.makePreparedLambdaForm (1 samples, 6.67%)</title><rect x="246.0" y="659.0" width="78.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="249.0" y="670.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm.compileToBytecode (1 samples, 6.67%)</title><rect x="246.0" y="643.0" width="78.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.0" y="654.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.generateCustomizedCode (1 samples, 6.67%)</title><rect x="246.0" y="627.0" width="78.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="249.0" y="638.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadMethod (1 samples, 6.67%)</title><rect x="246.0" y="611.0" width="78.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.0" y="622.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/InvokerBytecodeGenerator.loadAndInitializeInvokerClass (1 samples, 6.67%)</title><rect x="246.0" y="595.0" width="78.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="249.0" y="606.0">java/lang..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass (1 samples, 6.67%)</title><rect x="246.0" y="579.0" width="78.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="249.0" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.defineAnonymousClass0 (1 samples, 6.67%)</title><rect x="246.0" y="563.0" width="78.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="249.0" y="574.0">jdk/inter..</text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass0(JNIEnv_*, _jobject*, _jclass*, _jbyteArray*, _jobjectArray*) (1 samples, 6.67%)</title><rect x="246.0" y="547.0" width="78.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="249.0" y="558.0">Unsafe_De..</text>
</g>
<g>
<title>Unsafe_DefineAnonymousClass_impl(JNIEnv_*, _jclass*, _jbyteArray*, _jobjectArray*, unsigned char**, Thread*) (1 samples, 6.67%)</title><rect x="246.0" y="531.0" width="78.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="249.0" y="542.0">Unsafe_De..</text>
</g>
<g>
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 6.67%)</title><rect x="246.0" y="515.0" width="78.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="249.0" y="526.0">SystemDic..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArguments (1 samples, 6.67%)</title><rect x="324.7" y="947.0" width="78.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.7" y="958.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.foldArgumentsForm (1 samples, 6.67%)</title><rect x="324.7" y="931.0" width="78.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.7" y="942.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.makeArgumentCombinationForm (1 samples, 6.67%)</title><rect x="324.7" y="915.0" width="78.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="327.7" y="926.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/LambdaFormEditor.newSpeciesData (1 samples, 6.67%)</title><rect x="324.7" y="899.0" width="78.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.7" y="910.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle$SpeciesData.extendWith (1 samples, 6.67%)</title><rect x="324.7" y="883.0" width="78.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.7" y="894.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer.findSpecies (1 samples, 6.67%)</title><rect x="324.7" y="867.0" width="78.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.7" y="878.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.loadSpecies (1 samples, 6.67%)</title><rect x="324.7" y="851.0" width="78.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.7" y="862.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.linkSpeciesDataToCode (1 samples, 6.67%)</title><rect x="324.7" y="835.0" width="78.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.7" y="846.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findFactories (1 samples, 6.67%)</title><rect x="324.7" y="819.0" width="78.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.7" y="830.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$Factory.findFactory (1 samples, 6.67%)</title><rect x="324.7" y="803.0" width="78.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.7" y="814.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.findStatic (1 samples, 6.67%)</title><rect x="324.7" y="787.0" width="78.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="327.7" y="798.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandles$Lookup.resolveOrFail (1 samples, 6.67%)</title><rect x="324.7" y="771.0" width="78.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="327.7" y="782.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrFail (1 samples, 6.67%)</title><rect x="324.7" y="755.0" width="78.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.7" y="766.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 6.67%)</title><rect x="324.7" y="739.0" width="78.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="327.7" y="750.0">java/lang..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.resolve (1 samples, 6.67%)</title><rect x="324.7" y="723.0" width="78.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.7" y="734.0">java/lang..</text>
</g>
<g>
<title>MHN_resolve_Mem (1 samples, 6.67%)</title><rect x="324.7" y="707.0" width="78.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="327.7" y="718.0">MHN_resol..</text>
</g>
<g>
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (1 samples, 6.67%)</title><rect x="324.7" y="691.0" width="78.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="327.7" y="702.0">MethodHan..</text>
</g>
<g>
<title>InstanceKlass::link_class_impl(bool, Thread*) (1 samples, 6.67%)</title><rect x="324.7" y="675.0" width="78.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="327.7" y="686.0">InstanceK..</text>
</g>
<g>
<title>InstanceKlass::link_methods(Thread*) (1 samples, 6.67%)</title><rect x="324.7" y="659.0" width="78.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="327.7" y="670.0">InstanceK..</text>
</g>
<g>
<title>Method::make_adapters(methodHandle const&amp;, Thread*) (1 samples, 6.67%)</title><rect x="324.7" y="643.0" width="78.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="327.7" y="654.0">Method::m..</text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter(methodHandle const&amp;) (1 samples, 6.67%)</title><rect x="324.7" y="627.0" width="78.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="327.7" y="638.0">AdapterHa..</text>
</g>
<g>
<title>AdapterHandlerLibrary::get_adapter0(methodHandle const&amp;) (1 samples, 6.67%)</title><rect x="324.7" y="611.0" width="78.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="327.7" y="622.0">AdapterHa..</text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 6.67%)</title><rect x="324.7" y="595.0" width="78.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="327.7" y="606.0">Signature..</text>
</g>
<g>
<title>thread_start (10 samples, 66.67%)</title><rect x="403.3" y="1027.0" width="786.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="406.3" y="1038.0">thread_start</text>
</g>
<g>
<title>_pthread_start (10 samples, 66.67%)</title><rect x="403.3" y="1011.0" width="786.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="406.3" y="1022.0">_pthread_start</text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 66.67%)</title><rect x="403.3" y="995.0" width="786.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="406.3" y="1006.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (10 samples, 66.67%)</title><rect x="403.3" y="979.0" width="786.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="406.3" y="990.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (7 samples, 46.67%)</title><rect x="403.3" y="963.0" width="550.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="406.3" y="974.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 40.00%)</title><rect x="403.3" y="947.0" width="472.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="406.3" y="958.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 40.00%)</title><rect x="403.3" y="931.0" width="472.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="406.3" y="942.0">CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 13.33%)</title><rect x="403.3" y="915.0" width="157.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="406.3" y="926.0">C2Compiler::compile_..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 13.33%)</title><rect x="403.3" y="899.0" width="157.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="406.3" y="910.0">Compile::Compile(ciE..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 13.33%)</title><rect x="403.3" y="883.0" width="157.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="406.3" y="894.0">Compile::Compile(ciE..</text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 13.33%)</title><rect x="403.3" y="867.0" width="157.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="406.3" y="878.0">Compile::Code_Gen()</text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 6.67%)</title><rect x="403.3" y="851.0" width="78.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="406.3" y="862.0">PhaseBloc..</text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (1 samples, 6.67%)</title><rect x="403.3" y="835.0" width="78.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="406.3" y="846.0">PhaseBloc..</text>
</g>
<g>
<title>Block::succ_fall_through(unsigned int) (1 samples, 6.67%)</title><rect x="403.3" y="819.0" width="78.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="406.3" y="830.0">Block::su..</text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (1 samples, 6.67%)</title><rect x="482.0" y="851.0" width="78.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="485.0" y="862.0">PhaseChai..</text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 6.67%)</title><rect x="482.0" y="835.0" width="78.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="485.0" y="846.0">PhaseLive..</text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 6.67%)</title><rect x="482.0" y="819.0" width="78.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="485.0" y="830.0">PhaseLive..</text>
</g>
<g>
<title>IndexSetIterator::next() (1 samples, 6.67%)</title><rect x="482.0" y="803.0" width="78.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="485.0" y="814.0">IndexSetI..</text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 26.67%)</title><rect x="560.7" y="915.0" width="314.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="563.7" y="926.0">Compiler::compile_method(ciEnv*, ciMethod*..</text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (4 samples, 26.67%)</title><rect x="560.7" y="899.0" width="314.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="563.7" y="910.0">Compilation::Compilation(AbstractCompiler*..</text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 26.67%)</title><rect x="560.7" y="883.0" width="314.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="563.7" y="894.0">Compilation::compile_method()</text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 26.67%)</title><rect x="560.7" y="867.0" width="314.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="563.7" y="878.0">Compilation::compile_java_method()</text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 6.67%)</title><rect x="560.7" y="851.0" width="78.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="563.7" y="862.0">Compilati..</text>
</g>
<g>
<title>IR::split_critical_edges() (1 samples, 6.67%)</title><rect x="560.7" y="835.0" width="78.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="563.7" y="846.0">IR::split..</text>
</g>
<g>
<title>CriticalEdgeFinder::split_edges() (1 samples, 6.67%)</title><rect x="560.7" y="819.0" width="78.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="563.7" y="830.0">CriticalE..</text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 20.00%)</title><rect x="639.3" y="851.0" width="236.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="642.3" y="862.0">Compilation::emit_lir()</text>
</g>
<g>
<title>ControlFlowOptimizer::optimize(BlockList*) (1 samples, 6.67%)</title><rect x="639.3" y="835.0" width="78.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="642.3" y="846.0">ControlFl..</text>
</g>
<g>
<title>ControlFlowOptimizer::delete_empty_blocks(BlockList*) (1 samples, 6.67%)</title><rect x="639.3" y="819.0" width="78.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="642.3" y="830.0">ControlFl..</text>
</g>
<g>
<title>BlockBegin::substitute_sux(BlockBegin*, BlockBegin*) (1 samples, 6.67%)</title><rect x="639.3" y="803.0" width="78.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="642.3" y="814.0">BlockBegi..</text>
</g>
<g>
<title>BlockBegin::remove_predecessor(BlockBegin*) (1 samples, 6.67%)</title><rect x="639.3" y="787.0" width="78.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="642.3" y="798.0">BlockBegi..</text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 13.33%)</title><rect x="718.0" y="835.0" width="157.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="721.0" y="846.0">LinearScan::do_linea..</text>
</g>
<g>
<title>LinearScan::assign_reg_num() (2 samples, 13.33%)</title><rect x="718.0" y="819.0" width="157.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="721.0" y="830.0">LinearScan::assign_r..</text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (2 samples, 13.33%)</title><rect x="718.0" y="803.0" width="157.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="721.0" y="814.0">LinearScan::assign_r..</text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 6.67%)</title><rect x="718.0" y="787.0" width="78.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="721.0" y="798.0">LinearSca..</text>
</g>
<g>
<title>GrowableArray&lt;ScopeValue*&gt;::GrowableArray(int, bool, MemoryType) (1 samples, 6.67%)</title><rect x="718.0" y="771.0" width="78.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="721.0" y="782.0">GrowableA..</text>
</g>
<g>
<title>Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 6.67%)</title><rect x="718.0" y="755.0" width="78.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="721.0" y="766.0">Arena::Am..</text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_OpVisitState const&amp;, LIR_Op*) (1 samples, 6.67%)</title><rect x="796.7" y="787.0" width="78.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="799.7" y="798.0">LinearSca..</text>
</g>
<g>
<title>LinearScan::compute_oop_map(IntervalWalker*, LIR_Op*, CodeEmitInfo*, bool) (1 samples, 6.67%)</title><rect x="796.7" y="771.0" width="78.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="799.7" y="782.0">LinearSca..</text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 6.67%)</title><rect x="796.7" y="755.0" width="78.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="799.7" y="766.0">IntervalW..</text>
</g>
<g>
<title>attach_listener_thread_entry(JavaThread*, Thread*) (1 samples, 6.67%)</title><rect x="875.3" y="947.0" width="78.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="878.3" y="958.0">attach_li..</text>
</g>
<g>
<title>load_agent(AttachOperation*, outputStream*) (1 samples, 6.67%)</title><rect x="875.3" y="931.0" width="78.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="878.3" y="942.0">load_agen..</text>
</g>
<g>
<title>JvmtiExport::load_agent_library(char const*, char const*, char const*, outputStream*) (1 samples, 6.67%)</title><rect x="875.3" y="915.0" width="78.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="878.3" y="926.0">JvmtiExpo..</text>
</g>
<g>
<title>Agent_OnAttach (1 samples, 6.67%)</title><rect x="875.3" y="899.0" width="78.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="878.3" y="910.0">Agent_OnA..</text>
</g>
<g>
<title>Profiler::run(Arguments&amp;) (1 samples, 6.67%)</title><rect x="875.3" y="883.0" width="78.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="878.3" y="894.0">Profiler:..</text>
</g>
<g>
<title>Profiler::runInternal(Arguments&amp;, std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;&amp;) (1 samples, 6.67%)</title><rect x="875.3" y="867.0" width="78.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="878.3" y="878.0">Profiler:..</text>
</g>
<g>
<title>Profiler::start(Arguments&amp;, bool) (1 samples, 6.67%)</title><rect x="875.3" y="851.0" width="78.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="878.3" y="862.0">Profiler:..</text>
</g>
<g>
<title>Profiler::bindNativeLibraryLoad(JNIEnv_*, unsigned char (*)(JNIEnv_*, _jobject*, _jstring*, unsigned char)) (1 samples, 6.67%)</title><rect x="875.3" y="835.0" width="78.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="878.3" y="846.0">Profiler:..</text>
</g>
<g>
<title>_dispatch_queue_attr_concurrent (1 samples, 6.67%)</title><rect x="875.3" y="819.0" width="78.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="878.3" y="830.0">_dispatch..</text>
</g>
<g>
<title>[unknown] (1 samples, 6.67%)</title><rect x="875.3" y="803.0" width="78.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="878.3" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1 samples, 6.67%)</title><rect x="875.3" y="787.0" width="78.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="878.3" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1 samples, 6.67%)</title><rect x="875.3" y="771.0" width="78.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="878.3" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1 samples, 6.67%)</title><rect x="875.3" y="755.0" width="78.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="878.3" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1 samples, 6.67%)</title><rect x="875.3" y="739.0" width="78.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="878.3" y="750.0">[unknown]</text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 20.00%)</title><rect x="954.0" y="963.0" width="236.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="957.0" y="974.0">WatcherThread::run()</text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 20.00%)</title><rect x="954.0" y="947.0" width="236.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="957.0" y="958.0">WatcherThread::sleep() const</text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 20.00%)</title><rect x="954.0" y="931.0" width="236.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="957.0" y="942.0">Monitor::wait(bool, long, bool)</text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 20.00%)</title><rect x="954.0" y="915.0" width="236.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="957.0" y="926.0">Monitor::IWait(Thread*, long)</text>
</g>
<g>
<title>os::PlatformEvent::park(long) (3 samples, 20.00%)</title><rect x="954.0" y="899.0" width="236.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="957.0" y="910.0">os::PlatformEvent::park(long)</text>
</g>
<g>
<title>__gettimeofday (2 samples, 13.33%)</title><rect x="954.0" y="883.0" width="157.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="957.0" y="894.0">__gettimeofday</text>
</g>
<g>
<title>__psynch_cvwait (1 samples, 6.67%)</title><rect x="1111.3" y="883.0" width="78.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1114.3" y="894.0">__psynch_..</text>
</g>
</g>
</svg>
